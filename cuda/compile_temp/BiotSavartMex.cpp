#line 1 "C:/Users/admin/AppData/Local/Temp/tmpxft_00000600_00000000-3_BiotSavartMex.cudafe1.cpp"
#line 1 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
#line 27 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
typedef unsigned __int64 size_t; 
#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/host_runtime.h"






























































#line 64 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/host_runtime.h"



#line 68 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/host_runtime.h"

#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\builtin_types.h"























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_types.h"




















































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\host_defines.h"





















































































#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\host_defines.h"










#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\host_defines.h"








































#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\host_defines.h"










#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\host_defines.h"











#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\host_defines.h"










#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\host_defines.h"























#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\host_defines.h"


#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\host_defines.h"
#line 54 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_types.h"







enum  cudaRoundMode
{
    cudaRoundNearest,
    cudaRoundZero,
    cudaRoundPosInf,
    cudaRoundMinInf
};

#line 70 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_types.h"
#line 57 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"




















































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\host_defines.h"







































































































































































































#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\host_defines.h"
#line 54 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"





























































#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"










enum  cudaError
{
    




    cudaSuccess                           =      0,
  
    



    cudaErrorMissingConfiguration         =      1,
  
    



    cudaErrorMemoryAllocation             =      2,
  
    



    cudaErrorInitializationError          =      3,
  
    







    cudaErrorLaunchFailure                =      4,
  
    






    cudaErrorPriorLaunchFailure           =      5,
  
    







    cudaErrorLaunchTimeout                =      6,
  
    






    cudaErrorLaunchOutOfResources         =      7,
  
    



    cudaErrorInvalidDeviceFunction        =      8,
  
    






    cudaErrorInvalidConfiguration         =      9,
  
    



    cudaErrorInvalidDevice                =     10,
  
    



    cudaErrorInvalidValue                 =     11,
  
    



    cudaErrorInvalidPitchValue            =     12,
  
    



    cudaErrorInvalidSymbol                =     13,
  
    


    cudaErrorMapBufferObjectFailed        =     14,
  
    


    cudaErrorUnmapBufferObjectFailed      =     15,
  
    



    cudaErrorInvalidHostPointer           =     16,
  
    



    cudaErrorInvalidDevicePointer         =     17,
  
    



    cudaErrorInvalidTexture               =     18,
  
    



    cudaErrorInvalidTextureBinding        =     19,
  
    




    cudaErrorInvalidChannelDescriptor     =     20,
  
    



    cudaErrorInvalidMemcpyDirection       =     21,
  
    







    cudaErrorAddressOfConstant            =     22,
  
    






    cudaErrorTextureFetchFailed           =     23,
  
    






    cudaErrorTextureNotBound              =     24,
  
    






    cudaErrorSynchronizationError         =     25,
  
    



    cudaErrorInvalidFilterSetting         =     26,
  
    



    cudaErrorInvalidNormSetting           =     27,
  
    





    cudaErrorMixedDeviceExecution         =     28,
  
    




    cudaErrorCudartUnloading              =     29,
  
    


    cudaErrorUnknown                      =     30,

    





    cudaErrorNotYetImplemented            =     31,
  
    






    cudaErrorMemoryValueTooLarge          =     32,
  
    




    cudaErrorInvalidResourceHandle        =     33,
  
    





    cudaErrorNotReady                     =     34,
  
    




    cudaErrorInsufficientDriver           =     35,
  
    










    cudaErrorSetOnActiveProcess           =     36,
  
    



    cudaErrorInvalidSurface               =     37,
  
    



    cudaErrorNoDevice                     =     38,
  
    



    cudaErrorECCUncorrectable             =     39,
  
    


    cudaErrorSharedObjectSymbolNotFound   =     40,
  
    


    cudaErrorSharedObjectInitFailed       =     41,
  
    



    cudaErrorUnsupportedLimit             =     42,
  
    



    cudaErrorDuplicateVariableName        =     43,
  
    



    cudaErrorDuplicateTextureName         =     44,
  
    



    cudaErrorDuplicateSurfaceName         =     45,
  
    







    cudaErrorDevicesUnavailable           =     46,
  
    


    cudaErrorInvalidKernelImage           =     47,
  
    





    cudaErrorNoKernelImageForDevice       =     48,
  
    










    cudaErrorIncompatibleDriverContext    =     49,
      
    




    cudaErrorPeerAccessAlreadyEnabled     =     50,
    
    




    cudaErrorPeerAccessNotEnabled         =     51,
    
    



    cudaErrorDeviceAlreadyInUse           =     54,
  
    





    cudaErrorProfilerDisabled             =     55,

    




    cudaErrorProfilerNotInitialized       =     56,

    




    cudaErrorProfilerAlreadyStarted       =     57,
  
    



     cudaErrorProfilerAlreadyStopped       =    58,
  
    





    cudaErrorAssert                        =    59,
  
    




    cudaErrorTooManyPeers                 =     60,
  
    



    cudaErrorHostMemoryAlreadyRegistered  =     61,
        
    



    cudaErrorHostMemoryNotRegistered      =     62,

    


    cudaErrorOperatingSystem              =     63,
  
    


    cudaErrorStartupFailure               =   0x7f,

    





    cudaErrorApiFailureBase               =  10000
};




enum  cudaChannelFormatKind
{
    cudaChannelFormatKindSigned           =   0,      
    cudaChannelFormatKindUnsigned         =   1,      
    cudaChannelFormatKindFloat            =   2,      
    cudaChannelFormatKindNone             =   3       
};




struct  cudaChannelFormatDesc
{
    int                        x; 
    int                        y; 
    int                        z; 
    int                        w; 
    enum cudaChannelFormatKind f; 
};




struct cudaArray;




enum  cudaMemoryType
{
    cudaMemoryTypeHost   = 1, 
    cudaMemoryTypeDevice = 2  
};




enum  cudaMemcpyKind
{
    cudaMemcpyHostToHost          =   0,      
    cudaMemcpyHostToDevice        =   1,      
    cudaMemcpyDeviceToHost        =   2,      
    cudaMemcpyDeviceToDevice      =   3,      
    cudaMemcpyDefault             =   4       
};





struct  cudaPitchedPtr
{
    void   *ptr;      
    size_t  pitch;    
    size_t  xsize;    
    size_t  ysize;    
};





struct  cudaExtent
{
    size_t width;     
    size_t height;    
    size_t depth;     
};





struct  cudaPos
{
    size_t x;     
    size_t y;     
    size_t z;     
};




struct  cudaMemcpy3DParms
{
    struct cudaArray      *srcArray;  
    struct cudaPos         srcPos;    
    struct cudaPitchedPtr  srcPtr;    
  
    struct cudaArray      *dstArray;  
    struct cudaPos         dstPos;    
    struct cudaPitchedPtr  dstPtr;    
  
    struct cudaExtent      extent;    
    enum cudaMemcpyKind    kind;      
};




struct  cudaMemcpy3DPeerParms
{
    struct cudaArray      *srcArray;  
    struct cudaPos         srcPos;    
    struct cudaPitchedPtr  srcPtr;    
    int                    srcDevice; 
  
    struct cudaArray      *dstArray;  
    struct cudaPos         dstPos;    
    struct cudaPitchedPtr  dstPtr;    
    int                    dstDevice; 
  
    struct cudaExtent      extent;    
};




struct cudaGraphicsResource;




enum  cudaGraphicsRegisterFlags
{
    cudaGraphicsRegisterFlagsNone             = 0,  
    cudaGraphicsRegisterFlagsReadOnly         = 1,   
    cudaGraphicsRegisterFlagsWriteDiscard     = 2,  
    cudaGraphicsRegisterFlagsSurfaceLoadStore = 4,  
    cudaGraphicsRegisterFlagsTextureGather    = 8   
};




enum  cudaGraphicsMapFlags
{
    cudaGraphicsMapFlagsNone         = 0,  
    cudaGraphicsMapFlagsReadOnly     = 1,  
    cudaGraphicsMapFlagsWriteDiscard = 2   
};




enum  cudaGraphicsCubeFace 
{
    cudaGraphicsCubeFacePositiveX = 0x00, 
    cudaGraphicsCubeFaceNegativeX = 0x01, 
    cudaGraphicsCubeFacePositiveY = 0x02, 
    cudaGraphicsCubeFaceNegativeY = 0x03, 
    cudaGraphicsCubeFacePositiveZ = 0x04, 
    cudaGraphicsCubeFaceNegativeZ = 0x05  
};




struct  cudaPointerAttributes
{
    



    enum cudaMemoryType memoryType;

    








    int device;

    



    void *devicePointer;

    



    void *hostPointer;
};




struct  cudaFuncAttributes
{
   




   size_t sharedSizeBytes;

   



   size_t constSizeBytes;

   


   size_t localSizeBytes;

   




   int maxThreadsPerBlock;

   


   int numRegs;

   




   int ptxVersion;

   




   int binaryVersion;
};




enum  cudaFuncCache
{
    cudaFuncCachePreferNone   = 0,    
    cudaFuncCachePreferShared = 1,    
    cudaFuncCachePreferL1     = 2,    
    cudaFuncCachePreferEqual  = 3     
};




enum  cudaComputeMode
{
    cudaComputeModeDefault          = 0,  
    cudaComputeModeExclusive        = 1,  
    cudaComputeModeProhibited       = 2,  
    cudaComputeModeExclusiveProcess = 3   
};




enum  cudaLimit
{
    cudaLimitStackSize      = 0x00, 
    cudaLimitPrintfFifoSize = 0x01, 
    cudaLimitMallocHeapSize = 0x02  
};




enum  cudaOutputMode
{
    cudaKeyValuePair    = 0x00, 
    cudaCSV             = 0x01  
};




struct  cudaDeviceProp
{
    char   name[256];                  
    size_t totalGlobalMem;             
    size_t sharedMemPerBlock;          
    int    regsPerBlock;               
    int    warpSize;                   
    size_t memPitch;                   
    int    maxThreadsPerBlock;         
    int    maxThreadsDim[3];           
    int    maxGridSize[3];             
    int    clockRate;                  
    size_t totalConstMem;              
    int    major;                      
    int    minor;                      
    size_t textureAlignment;           
    size_t texturePitchAlignment;      
    int    deviceOverlap;              
    int    multiProcessorCount;        
    int    kernelExecTimeoutEnabled;   
    int    integrated;                 
    int    canMapHostMemory;           
    int    computeMode;                
    int    maxTexture1D;               
    int    maxTexture1DLinear;         
    int    maxTexture2D[2];            
    int    maxTexture2DLinear[3];      
    int    maxTexture2DGather[2];      
    int    maxTexture3D[3];            
    int    maxTextureCubemap;          
    int    maxTexture1DLayered[2];     
    int    maxTexture2DLayered[3];     
    int    maxTextureCubemapLayered[2];
    int    maxSurface1D;               
    int    maxSurface2D[2];            
    int    maxSurface3D[3];            
    int    maxSurface1DLayered[2];     
    int    maxSurface2DLayered[3];     
    int    maxSurfaceCubemap;          
    int    maxSurfaceCubemapLayered[2];
    size_t surfaceAlignment;           
    int    concurrentKernels;          
    int    ECCEnabled;                 
    int    pciBusID;                   
    int    pciDeviceID;                
    int    pciDomainID;                
    int    tccDriver;                  
    int    asyncEngineCount;           
    int    unifiedAddressing;          
    int    memoryClockRate;            
    int    memoryBusWidth;             
    int    l2CacheSize;                
    int    maxThreadsPerMultiProcessor;
};





























































struct  cudaIpcEventHandle_st
{
    char reserved[64];
};

struct  cudaIpcMemHandle_st 
{
    char reserved[64];
};










typedef  enum cudaError cudaError_t;




typedef  struct CUstream_st *cudaStream_t;




typedef  struct CUevent_st *cudaEvent_t;




typedef  struct cudaGraphicsResource *cudaGraphicsResource_t;




typedef  struct CUuuid_st cudaUUID_t;




typedef  struct cudaIpcEventHandle_st cudaIpcEventHandle_t;
typedef  struct cudaIpcMemHandle_st cudaIpcMemHandle_t;
 



typedef  enum cudaOutputMode cudaOutputMode_t;


 

#line 1038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"

#line 58 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_types.h"


























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"












































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"

#line 60 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_types.h"
























enum  cudaSurfaceBoundaryMode
{
    cudaBoundaryModeZero  = 0,    
    cudaBoundaryModeClamp = 1,    
    cudaBoundaryModeTrap  = 2     
};




enum   cudaSurfaceFormatMode
{
    cudaFormatModeForced = 0,     
    cudaFormatModeAuto = 1        
};




struct  surfaceReference
{
    


    struct cudaChannelFormatDesc channelDesc;
};


 

#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_types.h"
#line 59 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_types.h"


























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"












































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"

#line 60 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_types.h"
























enum  cudaTextureAddressMode
{
    cudaAddressModeWrap   = 0,    
    cudaAddressModeClamp  = 1,    
    cudaAddressModeMirror = 2,    
    cudaAddressModeBorder = 3     
};




enum  cudaTextureFilterMode
{
    cudaFilterModePoint  = 0,     
    cudaFilterModeLinear = 1      
};




enum  cudaTextureReadMode
{
    cudaReadModeElementType     = 0,  
    cudaReadModeNormalizedFloat = 1   
};




struct  textureReference
{
    


    int                          normalized;
    


    enum cudaTextureFilterMode   filterMode;
    


    enum cudaTextureAddressMode  addressMode[3];
    


    struct cudaChannelFormatDesc channelDesc;
    


    int                          sRGB;
    int                          __cudaReserved[15];
};


 

#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_types.h"
#line 60 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"


























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\builtin_types.h"























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_types.h"




































































#line 70 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_types.h"
#line 57 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"












































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"

#line 58 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_types.h"

















































































































#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_types.h"
#line 59 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_types.h"












































































































































#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_types.h"
#line 60 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"






















































































































































































































































































































































































































#line 408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 61 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\builtin_types.h"
#line 60 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\host_defines.h"







































































































































































































#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\host_defines.h"
#line 61 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"






















#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"

struct  char1
{
    signed char x;
};

struct  uchar1
{
    unsigned char x;
};


struct  __declspec(align(2)) char2
{
    signed char x, y;
};

struct  __declspec(align(2)) uchar2
{
    unsigned char x, y;
};

struct  char3
{
    signed char x, y, z;
};

struct  uchar3
{
    unsigned char x, y, z;
};

struct  __declspec(align(4)) char4
{
    signed char x, y, z, w;
};

struct  __declspec(align(4)) uchar4
{
    unsigned char x, y, z, w;
};

struct  short1
{
    short x;
};

struct  ushort1
{
    unsigned short x;
};

struct  __declspec(align(4)) short2
{
    short x, y;
};

struct  __declspec(align(4)) ushort2
{
    unsigned short x, y;
};

struct  short3
{
    short x, y, z;
};

struct  ushort3
{
    unsigned short x, y, z;
};

struct  __declspec(align(8)) short4 { short x; short y; short z; short w; };
struct  __declspec(align(8)) ushort4 { unsigned short x; unsigned short y; unsigned short z; unsigned short w; };

struct  int1
{
    int x;
};

struct  uint1
{
    unsigned int x;
};

struct  __declspec(align(8)) int2 { int x; int y; };
struct  __declspec(align(8)) uint2 { unsigned int x; unsigned int y; };

struct  int3
{
    int x, y, z;
};

struct  uint3
{
    unsigned int x, y, z;
};

struct  __declspec(align(16)) int4
{
    int x, y, z, w;
};

struct  __declspec(align(16)) uint4
{
    unsigned int x, y, z, w;
};

struct  long1
{
    long int x;
};

struct  ulong1
{
    unsigned long x;
};


struct  __declspec(align(8)) long2 { long int x; long int y; };
struct  __declspec(align(8)) ulong2 { unsigned long int x; unsigned long int y; };












#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"

struct  long3
{
    long int x, y, z;
};

struct  ulong3
{
    unsigned long int x, y, z;
};

struct  __declspec(align(16)) long4
{
    long int x, y, z, w;
};

struct  __declspec(align(16)) ulong4
{
    unsigned long int x, y, z, w;
};

struct  float1
{
    float x;
};

struct  __declspec(align(8)) float2 { float x; float y; };

struct  float3
{
    float x, y, z;
};

struct  __declspec(align(16)) float4
{
    float x, y, z, w;
};

struct  longlong1
{
    long long int x;
};

struct  ulonglong1
{
    unsigned long long int x;
};

struct  __declspec(align(16)) longlong2
{
    long long int x, y;
};

struct  __declspec(align(16)) ulonglong2
{
    unsigned long long int x, y;
};

struct  longlong3
{
    long long int x, y, z;
};

struct  ulonglong3
{
    unsigned long long int x, y, z;
};

struct  __declspec(align(16)) longlong4
{
    long long int x, y, z ,w;
};

struct  __declspec(align(16)) ulonglong4
{
    unsigned long long int x, y, z, w;
};

struct  double1
{
    double x;
};

struct  __declspec(align(16)) double2
{
    double x, y;
};

struct  double3
{
    double x, y, z;
};

struct  __declspec(align(16)) double4
{
    double x, y, z, w;
};





#line 331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







typedef  struct char1 char1;
typedef  struct uchar1 uchar1;
typedef  struct char2 char2;
typedef  struct uchar2 uchar2;
typedef  struct char3 char3;
typedef  struct uchar3 uchar3;
typedef  struct char4 char4;
typedef  struct uchar4 uchar4;
typedef  struct short1 short1;
typedef  struct ushort1 ushort1;
typedef  struct short2 short2;
typedef  struct ushort2 ushort2;
typedef  struct short3 short3;
typedef  struct ushort3 ushort3;
typedef  struct short4 short4;
typedef  struct ushort4 ushort4;
typedef  struct int1 int1;
typedef  struct uint1 uint1;
typedef  struct int2 int2;
typedef  struct uint2 uint2;
typedef  struct int3 int3;
typedef  struct uint3 uint3;
typedef  struct int4 int4;
typedef  struct uint4 uint4;
typedef  struct long1 long1;
typedef  struct ulong1 ulong1;
typedef  struct long2 long2;
typedef  struct ulong2 ulong2;
typedef  struct long3 long3;
typedef  struct ulong3 ulong3;
typedef  struct long4 long4;
typedef  struct ulong4 ulong4;
typedef  struct float1 float1;
typedef  struct float2 float2;
typedef  struct float3 float3;
typedef  struct float4 float4;
typedef  struct longlong1 longlong1;
typedef  struct ulonglong1 ulonglong1;
typedef  struct longlong2 longlong2;
typedef  struct ulonglong2 ulonglong2;
typedef  struct longlong3 longlong3;
typedef  struct ulonglong3 ulonglong3;
typedef  struct longlong4 longlong4;
typedef  struct ulonglong4 ulonglong4;
typedef  struct double1 double1;
typedef  struct double2 double2;
typedef  struct double3 double3;
typedef  struct double4 double4;







struct  dim3
{
    unsigned int x, y, z;

      dim3(unsigned int vx = 1, unsigned int vy = 1, unsigned int vz = 1) : x(vx), y(vy), z(vz) {}
      dim3(uint3 v) : x(v.x), y(v.y), z(v.z) {}
      operator uint3(void) { uint3 t; t.x = x; t.y = y; t.z = z; return t; }
#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
};

typedef  struct dim3 dim3;



#line 408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 61 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\builtin_types.h"
#line 70 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/host_runtime.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"










































#line 44 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"






#line 51 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 55 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 59 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 63 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 67 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 71 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"



#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"

#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\crt\\storage_class.h"
#line 71 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/host_runtime.h"
































































































































#line 200 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/host_runtime.h"
#line 29 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
#line 52 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
namespace vc_attributes { 
#line 56 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
enum YesNoMaybe { 
#line 59 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
No = 268369921, 
#line 60 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
Maybe = 268369936, 
#line 61 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
Yes = 268370176
#line 62 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
}; 
#line 64 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
typedef YesNoMaybe YesNoMaybe; 
#line 66 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
enum AccessType { 
#line 68 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
NoAccess, 
#line 69 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
Read, 
#line 70 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
Write, 
#line 71 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
ReadWrite
#line 72 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
}; 
#line 74 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
typedef AccessType AccessType; 
#line 78 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
[repeatable, 
#line 79 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
source_annotation_attribute ( Parameter )] 
#line 80 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
struct PreAttribute { 
#line 83 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
PreAttribute(); 
#line 86 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
unsigned Deref; 
#line 87 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
YesNoMaybe Valid; 
#line 88 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
YesNoMaybe Null; 
#line 89 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
YesNoMaybe Tainted; 
#line 90 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
AccessType Access; 
#line 91 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
size_t ValidElementsConst; 
#line 92 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
size_t ValidBytesConst; 
#line 93 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *ValidElements; 
#line 94 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *ValidBytes; 
#line 95 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *ValidElementsLength; 
#line 96 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *ValidBytesLength; 
#line 97 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
size_t WritableElementsConst; 
#line 98 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
size_t WritableBytesConst; 
#line 99 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *WritableElements; 
#line 100 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *WritableBytes; 
#line 101 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *WritableElementsLength; 
#line 102 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *WritableBytesLength; 
#line 103 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
size_t ElementSizeConst; 
#line 104 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *ElementSize; 
#line 105 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
YesNoMaybe NullTerminated; 
#line 106 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *Condition; 
#line 107 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
}; 
#line 109 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
[repeatable, 
#line 110 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
source_annotation_attribute ( Parameter | ReturnValue )] 
#line 111 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
struct PostAttribute { 
#line 114 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
PostAttribute(); 
#line 117 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
unsigned Deref; 
#line 118 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
YesNoMaybe Valid; 
#line 119 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
YesNoMaybe Null; 
#line 120 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
YesNoMaybe Tainted; 
#line 121 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
AccessType Access; 
#line 122 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
size_t ValidElementsConst; 
#line 123 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
size_t ValidBytesConst; 
#line 124 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *ValidElements; 
#line 125 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *ValidBytes; 
#line 126 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *ValidElementsLength; 
#line 127 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *ValidBytesLength; 
#line 128 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
size_t WritableElementsConst; 
#line 129 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
size_t WritableBytesConst; 
#line 130 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *WritableElements; 
#line 131 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *WritableBytes; 
#line 132 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *WritableElementsLength; 
#line 133 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *WritableBytesLength; 
#line 134 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
size_t ElementSizeConst; 
#line 135 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *ElementSize; 
#line 136 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
YesNoMaybe NullTerminated; 
#line 137 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
YesNoMaybe MustCheck; 
#line 138 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *Condition; 
#line 139 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
}; 
#line 141 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
[source_annotation_attribute ( Parameter )] 
#line 142 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
struct FormatStringAttribute { 
#line 145 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
FormatStringAttribute(); 
#line 148 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *Style; 
#line 149 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *UnformattedAlternative; 
#line 150 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
}; 
#line 152 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
[repeatable, 
#line 153 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
source_annotation_attribute ( ReturnValue )] 
#line 154 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
struct InvalidCheckAttribute { 
#line 157 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
InvalidCheckAttribute(); 
#line 160 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
long Value; 
#line 161 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
}; 
#line 163 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
[source_annotation_attribute ( Method )] 
#line 164 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
struct SuccessAttribute { 
#line 167 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
SuccessAttribute(); 
#line 170 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const __wchar_t *Condition; 
#line 171 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
}; 
#line 173 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
[repeatable, 
#line 174 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
source_annotation_attribute ( Parameter )] 
#line 175 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
struct PreBoundAttribute { 
#line 178 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
PreBoundAttribute(); 
#line 180 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
unsigned Deref; 
#line 181 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
}; 
#line 183 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
[repeatable, 
#line 184 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
source_annotation_attribute ( Parameter | ReturnValue )] 
#line 185 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
struct PostBoundAttribute { 
#line 188 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
PostBoundAttribute(); 
#line 190 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
unsigned Deref; 
#line 191 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
}; 
#line 193 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
[repeatable, 
#line 194 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
source_annotation_attribute ( Parameter )] 
#line 195 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
struct PreRangeAttribute { 
#line 198 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
PreRangeAttribute(); 
#line 200 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
unsigned Deref; 
#line 201 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const char *MinVal; 
#line 202 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const char *MaxVal; 
#line 203 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
}; 
#line 205 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
[repeatable, 
#line 206 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
source_annotation_attribute ( Parameter | ReturnValue )] 
#line 207 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
struct PostRangeAttribute { 
#line 210 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
PostRangeAttribute(); 
#line 212 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
unsigned Deref; 
#line 213 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const char *MinVal; 
#line 214 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
const char *MaxVal; 
#line 215 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
}; 
#line 220 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
}
#line 244 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
typedef vc_attributes::YesNoMaybe SA_YesNoMaybe; 
#line 245 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
static const vc_attributes::YesNoMaybe SA_Yes = vc_attributes::Yes; 
#line 246 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
static const vc_attributes::YesNoMaybe SA_No = vc_attributes::No; 
#line 247 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
static const vc_attributes::YesNoMaybe SA_Maybe = vc_attributes::Maybe; 
#line 249 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
typedef vc_attributes::AccessType SA_AccessType; 
#line 250 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
static const vc_attributes::AccessType SA_NoAccess = vc_attributes::NoAccess; 
#line 251 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
static const vc_attributes::AccessType SA_Read = vc_attributes::Read; 
#line 252 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
static const vc_attributes::AccessType SA_Write = vc_attributes::Write; 
#line 253 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
static const vc_attributes::AccessType SA_ReadWrite = vc_attributes::ReadWrite; 
#line 256 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
typedef vc_attributes::PreAttribute SA_Pre; 
#line 257 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
typedef vc_attributes::PostAttribute SA_Post; 
#line 258 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
typedef vc_attributes::FormatStringAttribute SA_FormatString; 
#line 259 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
typedef vc_attributes::InvalidCheckAttribute SA_InvalidCheck; 
#line 260 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
typedef vc_attributes::SuccessAttribute SA_Success; 
#line 261 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
typedef vc_attributes::PreBoundAttribute SA_PreBound; 
#line 262 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
typedef vc_attributes::PostBoundAttribute SA_PostBound; 
#line 263 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
typedef vc_attributes::PreRangeAttribute SA_PreRange; 
#line 264 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
typedef vc_attributes::PostRangeAttribute SA_PostRange; 
#line 61 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
#pragma pack ( push, 8 )
#line 29 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\vadefs.h"
#pragma pack ( push, 8 )
#line 46 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\vadefs.h"
extern "C" { typedef unsigned __int64 uintptr_t; }
#line 57 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\vadefs.h"
extern "C" { typedef char *va_list; }
#line 121 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\vadefs.h"
extern "C" { extern void __cdecl __va_start(va_list *, ...); } 
#line 146 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\vadefs.h"
#pragma pack ( pop )
#line 409 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef size_t rsize_t; }
#line 416 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef __int64 intptr_t; }
#line 434 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef __int64 ptrdiff_t; }
#line 447 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef unsigned short wint_t; }
#line 448 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef unsigned short wctype_t; }
#line 469 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef int errno_t; }
#line 473 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef long __time32_t; }
#line 478 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef __int64 __time64_t; }
#line 486 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef __time64_t time_t; }
#line 545 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
extern "C" { void __cdecl _invalid_parameter_noinfo(); } 
#line 546 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
extern "C" { __declspec(noreturn) void __cdecl _invalid_parameter_noinfo_noreturn(); } 
#line 550 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
extern "C" { 
#line 549 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
__declspec(noreturn) void __cdecl 
#line 550 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
_invoke_watson(const __wchar_t *, const __wchar_t *, const __wchar_t *, unsigned, uintptr_t); } 
#line 1953 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
struct threadlocaleinfostruct; 
#line 1954 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
struct threadmbcinfostruct; 
#line 1955 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef threadlocaleinfostruct *pthreadlocinfo; }
#line 1956 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef threadmbcinfostruct *pthreadmbcinfo; }
#line 1957 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
struct __lc_time_data; 
#line 1963 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef 
#line 1959 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
struct localeinfo_struct { 
#line 1961 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
pthreadlocinfo locinfo; 
#line 1962 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
pthreadmbcinfo mbcinfo; 
#line 1963 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
} _locale_tstruct, *_locale_t; }
#line 1970 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef 
#line 1966 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
struct tagLC_ID { 
#line 1967 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
unsigned short wLanguage; 
#line 1968 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
unsigned short wCountry; 
#line 1969 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
unsigned short wCodePage; 
#line 1970 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
} LC_ID, *LPLC_ID; }
#line 1999 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef 
#line 1975 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
struct threadlocaleinfostruct { 
#line 1976 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
int refcount; 
#line 1977 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
unsigned lc_codepage; 
#line 1978 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
unsigned lc_collate_cp; 
#line 1979 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
unsigned long lc_handle[6]; 
#line 1980 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
LC_ID lc_id[6]; 
#line 1981 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
struct { 
#line 1982 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
char *locale; 
#line 1983 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
__wchar_t *wlocale; 
#line 1984 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
int *refcount; 
#line 1985 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
int *wrefcount; 
#line 1986 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
} lc_category[6]; 
#line 1987 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
int lc_clike; 
#line 1988 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
int mb_cur_max; 
#line 1989 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
int *lconv_intl_refcount; 
#line 1990 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
int *lconv_num_refcount; 
#line 1991 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
int *lconv_mon_refcount; 
#line 1992 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
struct lconv *lconv; 
#line 1993 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
int *ctype1_refcount; 
#line 1994 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
unsigned short *ctype1; 
#line 1995 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
const unsigned short *pctype; 
#line 1996 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
const unsigned char *pclmap; 
#line 1997 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
const unsigned char *pcumap; 
#line 1998 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
__lc_time_data *lc_time_curr; 
#line 1999 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
} threadlocinfo; }
#line 2036 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\crtdefs.h"
#pragma pack ( pop )
#line 61 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_types.h"













#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_types.h"
#line 38 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stddef.h"
namespace std { extern "C" { typedef decltype((__nullptr)) nullptr_t; }}
#line 39 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stddef.h"
using std::nullptr_t;
#line 47 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stddef.h"
extern "C" { extern int *__cdecl _errno(); } 
#line 50 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stddef.h"
extern "C" { errno_t __cdecl _set_errno(int ); } 
#line 51 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stddef.h"
extern "C" { errno_t __cdecl _get_errno(int * ); } 
#line 73 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stddef.h"
extern "C" { extern unsigned long __cdecl __threadid(); } 
#line 75 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stddef.h"
extern "C" { extern uintptr_t __cdecl __threadhandle(); } 
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"





































































































































#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"













#line 597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"















#line 610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
struct cudaArray; 
#line 611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"









#line 621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"















#line 636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"













#line 647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"











#line 657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"











#line 668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"





















#line 688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"























#line 707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
struct cudaGraphicsResource; 
#line 706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"















#line 722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"











#line 730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"

















#line 746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"













#line 755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"



















#line 796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"













#line 840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"













#line 851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"











#line 860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"









#line 868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"











































































































#line 975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"







#line 990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"







#line 995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 1001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"




#line 1006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 1006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"




#line 1011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 1011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"




#line 1016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 1016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"




#line 1021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 1021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"




#line 1026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 1026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"




#line 1031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 1027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"




#line 1032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 1032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"




#line 1037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_types.h"
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_types.h"











#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_types.h"
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_types.h"









#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_types.h"
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_types.h"







#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_types.h"
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_types.h"













#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_types.h"
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_types.h"









#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_types.h"
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_types.h"









#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_types.h"
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_types.h"

















#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_types.h"
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"



#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"



#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"



#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"



#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"



#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"



#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"



#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"







#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"




#line 408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_types.h"
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceReset(); } 
#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSynchronize(); } 
#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSetLimit(cudaLimit , size_t ); } 
#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetLimit(size_t * , cudaLimit ); } 
#line 323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetCacheConfig(cudaFuncCache * ); } 
#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSetCacheConfig(cudaFuncCache ); } 
#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetByPCIBusId(int * , char * ); } 
#line 414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetPCIBusId(char * , int , int ); } 
#line 456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcGetEventHandle(cudaIpcEventHandle_t * , cudaEvent_t ); } 
#line 491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcOpenEventHandle(cudaEvent_t * , cudaIpcEventHandle_t ); } 
#line 529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcGetMemHandle(cudaIpcMemHandle_t * , void * ); } 
#line 576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcOpenMemHandle(void ** , cudaIpcMemHandle_t , unsigned ); } 
#line 606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcCloseMemHandle(void * ); } 
#line 640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadExit(); } 
#line 664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadSynchronize(); } 
#line 723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadSetLimit(cudaLimit , size_t ); } 
#line 754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadGetLimit(size_t * , cudaLimit ); } 
#line 789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadGetCacheConfig(cudaFuncCache * ); } 
#line 835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadSetCacheConfig(cudaFuncCache ); } 
#line 887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetLastError(); } 
#line 928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaPeekAtLastError(); } 
#line 942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern const char *__stdcall cudaGetErrorString(cudaError_t ); } 
#line 972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDeviceCount(int * ); } 
#line 1175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDeviceProperties(cudaDeviceProp * , int ); } 
#line 1194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaChooseDevice(int * , const cudaDeviceProp * ); } 
#line 1227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetDevice(int ); } 
#line 1244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDevice(int * ); } 
#line 1273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetValidDevices(int * , int ); } 
#line 1333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetDeviceFlags(unsigned ); } 
#line 1359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamCreate(cudaStream_t * ); } 
#line 1380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamDestroy(cudaStream_t ); } 
#line 1416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamWaitEvent(cudaStream_t , cudaEvent_t , unsigned ); } 
#line 1435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamSynchronize(cudaStream_t ); } 
#line 1453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamQuery(cudaStream_t ); } 
#line 1485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventCreate(cudaEvent_t * ); } 
#line 1516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventCreateWithFlags(cudaEvent_t * , unsigned ); } 
#line 1549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventRecord(cudaEvent_t , cudaStream_t  = 0); } 
#line 1578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventQuery(cudaEvent_t ); } 
#line 1610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventSynchronize(cudaEvent_t ); } 
#line 1635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventDestroy(cudaEvent_t ); } 
#line 1676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventElapsedTime(float * , cudaEvent_t , cudaEvent_t ); } 
#line 1715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaConfigureCall(dim3 , dim3 , size_t  = (0), cudaStream_t  = 0); } 
#line 1742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetupArgument(const void * , size_t , size_t ); } 
#line 1788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFuncSetCacheConfig(const char * , cudaFuncCache ); } 
#line 1824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaLaunch(const char * ); } 
#line 1857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFuncGetAttributes(cudaFuncAttributes * , const char * ); } 
#line 1879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetDoubleForDevice(double * ); } 
#line 1901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetDoubleForHost(double * ); } 
#line 1933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMalloc(void ** , size_t ); } 
#line 1962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocHost(void ** , size_t ); } 
#line 2001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocPitch(void ** , size_t * , size_t , size_t ); } 
#line 2043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocArray(cudaArray ** , const cudaChannelFormatDesc * , size_t , size_t  = (0), unsigned  = (0)); } 
#line 2067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFree(void * ); } 
#line 2087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFreeHost(void * ); } 
#line 2109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFreeArray(cudaArray * ); } 
#line 2168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostAlloc(void ** , size_t , unsigned ); } 
#line 2221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostRegister(void * , size_t , unsigned ); } 
#line 2240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostUnregister(void * ); } 
#line 2267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostGetDevicePointer(void ** , void * , unsigned ); } 
#line 2286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostGetFlags(unsigned * , void * ); } 
#line 2321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMalloc3D(cudaPitchedPtr * , cudaExtent ); } 
#line 2421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMalloc3DArray(cudaArray ** , const cudaChannelFormatDesc * , cudaExtent , unsigned  = (0)); } 
#line 2519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3D(const cudaMemcpy3DParms * ); } 
#line 2547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DPeer(const cudaMemcpy3DPeerParms * ); } 
#line 2651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DAsync(const cudaMemcpy3DParms * , cudaStream_t  = 0); } 
#line 2673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DPeerAsync(const cudaMemcpy3DPeerParms * , cudaStream_t  = 0); } 
#line 2692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemGetInfo(size_t * , size_t * ); } 
#line 2713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaArrayGetInfo(cudaChannelFormatDesc * , cudaExtent * , unsigned * , cudaArray * ); } 
#line 2748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy(void * , const void * , size_t , cudaMemcpyKind ); } 
#line 2780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyPeer(void * , int , const void * , int , size_t ); } 
#line 2814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyToArray(cudaArray * , size_t , size_t , const void * , size_t , cudaMemcpyKind ); } 
#line 2848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyFromArray(void * , const cudaArray * , size_t , size_t , size_t , cudaMemcpyKind ); } 
#line 2883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyArrayToArray(cudaArray * , size_t , size_t , const cudaArray * , size_t , size_t , size_t , cudaMemcpyKind  = cudaMemcpyDeviceToDevice); } 
#line 2925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2D(void * , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind ); } 
#line 2967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DToArray(cudaArray * , size_t , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind ); } 
#line 3009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DFromArray(void * , size_t , const cudaArray * , size_t , size_t , size_t , size_t , cudaMemcpyKind ); } 
#line 3049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DArrayToArray(cudaArray * , size_t , size_t , const cudaArray * , size_t , size_t , size_t , size_t , cudaMemcpyKind  = cudaMemcpyDeviceToDevice); } 
#line 3084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyToSymbol(const char * , const void * , size_t , size_t  = (0), cudaMemcpyKind  = cudaMemcpyHostToDevice); } 
#line 3119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyFromSymbol(void * , const char * , size_t , size_t  = (0), cudaMemcpyKind  = cudaMemcpyDeviceToHost); } 
#line 3161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyAsync(void * , const void * , size_t , cudaMemcpyKind , cudaStream_t  = 0); } 
#line 3192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyPeerAsync(void * , int , const void * , int , size_t , cudaStream_t  = 0); } 
#line 3233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyToArrayAsync(cudaArray * , size_t , size_t , const void * , size_t , cudaMemcpyKind , cudaStream_t  = 0); } 
#line 3274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyFromArrayAsync(void * , const cudaArray * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t  = 0); } 
#line 3325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DAsync(void * , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t  = 0); } 
#line 3375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DToArrayAsync(cudaArray * , size_t , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t  = 0); } 
#line 3424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DFromArrayAsync(void * , size_t , const cudaArray * , size_t , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t  = 0); } 
#line 3466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyToSymbolAsync(const char * , const void * , size_t , size_t , cudaMemcpyKind , cudaStream_t  = 0); } 
#line 3508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyFromSymbolAsync(void * , const char * , size_t , size_t , cudaMemcpyKind , cudaStream_t  = 0); } 
#line 3531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset(void * , int , size_t ); } 
#line 3558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset2D(void * , size_t , int , size_t , size_t ); } 
#line 3598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset3D(cudaPitchedPtr , int , cudaExtent ); } 
#line 3626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemsetAsync(void * , int , size_t , cudaStream_t  = 0); } 
#line 3659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset2DAsync(void * , size_t , int , size_t , size_t , cudaStream_t  = 0); } 
#line 3705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset3DAsync(cudaPitchedPtr , int , cudaExtent , cudaStream_t  = 0); } 
#line 3732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetSymbolAddress(void ** , const char * ); } 
#line 3754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetSymbolSize(size_t * , const char * ); } 
#line 3899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaPointerGetAttributes(cudaPointerAttributes * , const void * ); } 
#line 3933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceCanAccessPeer(int * , int , int ); } 
#line 3974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceEnablePeerAccess(int , unsigned ); } 
#line 3999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceDisablePeerAccess(int ); } 
#line 4045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsUnregisterResource(cudaGraphicsResource_t ); } 
#line 4077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsResourceSetMapFlags(cudaGraphicsResource_t , unsigned ); } 
#line 4112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsMapResources(int , cudaGraphicsResource_t * , cudaStream_t  = 0); } 
#line 4143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsUnmapResources(int , cudaGraphicsResource_t * , cudaStream_t  = 0); } 
#line 4172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsResourceGetMappedPointer(void ** , size_t * , cudaGraphicsResource_t ); } 
#line 4206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsSubResourceGetMappedArray(cudaArray ** , cudaGraphicsResource_t , unsigned , unsigned ); } 
#line 4239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetChannelDesc(cudaChannelFormatDesc * , const cudaArray * ); } 
#line 4274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaChannelFormatDesc __stdcall cudaCreateChannelDesc(int , int , int , int , cudaChannelFormatKind ); } 
#line 4321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindTexture(size_t * , const textureReference * , const void * , const cudaChannelFormatDesc * , size_t  = (4294967295U)); } 
#line 4372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindTexture2D(size_t * , const textureReference * , const void * , const cudaChannelFormatDesc * , size_t , size_t , size_t ); } 
#line 4400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindTextureToArray(const textureReference * , const cudaArray * , const cudaChannelFormatDesc * ); } 
#line 4421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaUnbindTexture(const textureReference * ); } 
#line 4446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureAlignmentOffset(size_t * , const textureReference * ); } 
#line 4480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureReference(const textureReference ** , const char * ); } 
#line 4514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindSurfaceToArray(const surfaceReference * , const cudaArray * , const cudaChannelFormatDesc * ); } 
#line 4542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetSurfaceReference(const surfaceReference ** , const char * ); } 
#line 4570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDriverGetVersion(int * ); } 
#line 4587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaRuntimeGetVersion(int * ); } 
#line 4592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetExportTable(const void ** , const cudaUUID_t * ); } 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template< class T> __inline cudaChannelFormatDesc cudaCreateChannelDesc() 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(0, 0, 0, 0, cudaChannelFormatKindNone); 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
static __inline cudaChannelFormatDesc cudaCreateChannelDescHalf() 
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat); 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
static __inline cudaChannelFormatDesc cudaCreateChannelDescHalf1() 
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat); 
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
static __inline cudaChannelFormatDesc cudaCreateChannelDescHalf2() 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat); 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
static __inline cudaChannelFormatDesc cudaCreateChannelDescHalf4() 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat); 
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< char> () 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(char)) * 8); 
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< signed char> () 
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8); 
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned char> () 
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8); 
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< char1> () 
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8); 
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar1> () 
#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8); 
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< char2> () 
#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8); 
#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned); 
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar2> () 
#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8); 
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned); 
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< char4> () 
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8); 
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned); 
#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar4> () 
#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8); 
#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned); 
#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< short> () 
#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(short)) * 8); 
#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned short> () 
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< short1> () 
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(short)) * 8); 
#line 225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort1> () 
#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< short2> () 
#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(short)) * 8); 
#line 239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned); 
#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort2> () 
#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned); 
#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< short4> () 
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(short)) * 8); 
#line 253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned); 
#line 254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort4> () 
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned); 
#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< int> () 
#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(int)) * 8); 
#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned> () 
#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8); 
#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< int1> () 
#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(int)) * 8); 
#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uint1> () 
#line 285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8); 
#line 288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< int2> () 
#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(int)) * 8); 
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned); 
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uint2> () 
#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8); 
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned); 
#line 303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< int4> () 
#line 306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(int)) * 8); 
#line 309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned); 
#line 310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uint4> () 
#line 313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8); 
#line 316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned); 
#line 317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< long> () 
#line 322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(long)) * 8); 
#line 325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned long> () 
#line 329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8); 
#line 332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< long1> () 
#line 336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(long)) * 8); 
#line 339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ulong1> () 
#line 343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8); 
#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< long2> () 
#line 350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(long)) * 8); 
#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned); 
#line 354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ulong2> () 
#line 357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8); 
#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned); 
#line 361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< long4> () 
#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(long)) * 8); 
#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned); 
#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ulong4> () 
#line 371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8); 
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned); 
#line 375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< float> () 
#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(float)) * 8); 
#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat); 
#line 384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< float1> () 
#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(float)) * 8); 
#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat); 
#line 391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< float2> () 
#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(float)) * 8); 
#line 397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat); 
#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< float4> () 
#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
{ 
#line 402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
int e = (((int)sizeof(float)) * 8); 
#line 404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat); 
#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\channel_descriptor.h"
} 
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
static __inline cudaPitchedPtr make_cudaPitchedPtr(void *d, size_t p, size_t xsz, size_t ysz) 
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
{ 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
cudaPitchedPtr s; 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
(s.ptr) = d; 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
(s.pitch) = p; 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
(s.xsize) = xsz; 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
(s.ysize) = ysz; 
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
return s; 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
} 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
static __inline cudaPos make_cudaPos(size_t x, size_t y, size_t z) 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
{ 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
cudaPos p; 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
(p.x) = x; 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
(p.y) = y; 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
(p.z) = z; 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
return p; 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
} 
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
static __inline cudaExtent make_cudaExtent(size_t w, size_t h, size_t d) 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
{ 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
cudaExtent e; 
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
(e.width) = w; 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
(e.height) = h; 
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
(e.depth) = d; 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
return e; 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\driver_functions.h"
} 
#line 69 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline char1 make_char1(signed char x) 
#line 70 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 71 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
char1 t; (t.x) = x; return t; 
#line 72 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 74 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline uchar1 make_uchar1(unsigned char x) 
#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 76 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
uchar1 t; (t.x) = x; return t; 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline char2 make_char2(signed char x, signed char y) 
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
char2 t; (t.x) = x; (t.y) = y; return t; 
#line 82 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline uchar2 make_uchar2(unsigned char x, unsigned char y) 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
uchar2 t; (t.x) = x; (t.y) = y; return t; 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline char3 make_char3(signed char x, signed char y, signed char z) 
#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
char3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z) 
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
uchar3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline char4 make_char4(signed char x, signed char y, signed char z, signed char w) 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
char4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w) 
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
uchar4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline short1 make_short1(short x) 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
short1 t; (t.x) = x; return t; 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline ushort1 make_ushort1(unsigned short x) 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
ushort1 t; (t.x) = x; return t; 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline short2 make_short2(short x, short y) 
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
short2 t; (t.x) = x; (t.y) = y; return t; 
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline ushort2 make_ushort2(unsigned short x, unsigned short y) 
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
ushort2 t; (t.x) = x; (t.y) = y; return t; 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline short3 make_short3(short x, short y, short z) 
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
short3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z) 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
ushort3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline short4 make_short4(short x, short y, short z, short w) 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
short4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w) 
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
ushort4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline int1 make_int1(int x) 
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
int1 t; (t.x) = x; return t; 
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline uint1 make_uint1(unsigned x) 
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
uint1 t; (t.x) = x; return t; 
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline int2 make_int2(int x, int y) 
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
int2 t; (t.x) = x; (t.y) = y; return t; 
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline uint2 make_uint2(unsigned x, unsigned y) 
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
uint2 t; (t.x) = x; (t.y) = y; return t; 
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline int3 make_int3(int x, int y, int z) 
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
int3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline uint3 make_uint3(unsigned x, unsigned y, unsigned z) 
#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
uint3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline int4 make_int4(int x, int y, int z, int w) 
#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
int4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w) 
#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
uint4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline long1 make_long1(long x) 
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
long1 t; (t.x) = x; return t; 
#line 192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline ulong1 make_ulong1(unsigned long x) 
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
ulong1 t; (t.x) = x; return t; 
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline long2 make_long2(long x, long y) 
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
long2 t; (t.x) = x; (t.y) = y; return t; 
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline ulong2 make_ulong2(unsigned long x, unsigned long y) 
#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
ulong2 t; (t.x) = x; (t.y) = y; return t; 
#line 207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline long3 make_long3(long x, long y, long z) 
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
long3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z) 
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
ulong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline long4 make_long4(long x, long y, long z, long w) 
#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
long4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w) 
#line 225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
ulong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline float1 make_float1(float x) 
#line 230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
float1 t; (t.x) = x; return t; 
#line 232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline float2 make_float2(float x, float y) 
#line 235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
float2 t; (t.x) = x; (t.y) = y; return t; 
#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline float3 make_float3(float x, float y, float z) 
#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
float3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline float4 make_float4(float x, float y, float z, float w) 
#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
float4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline longlong1 make_longlong1(__int64 x) 
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
longlong1 t; (t.x) = x; return t; 
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline ulonglong1 make_ulonglong1(unsigned __int64 x) 
#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
ulonglong1 t; (t.x) = x; return t; 
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline longlong2 make_longlong2(__int64 x, __int64 y) 
#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
longlong2 t; (t.x) = x; (t.y) = y; return t; 
#line 262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline ulonglong2 make_ulonglong2(unsigned __int64 x, unsigned __int64 y) 
#line 265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
ulonglong2 t; (t.x) = x; (t.y) = y; return t; 
#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline longlong3 make_longlong3(__int64 x, __int64 y, __int64 z) 
#line 270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
longlong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline ulonglong3 make_ulonglong3(unsigned __int64 x, unsigned __int64 y, unsigned __int64 z) 
#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
ulonglong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline longlong4 make_longlong4(__int64 x, __int64 y, __int64 z, __int64 w) 
#line 280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
longlong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline ulonglong4 make_ulonglong4(unsigned __int64 x, unsigned __int64 y, unsigned __int64 z, unsigned __int64 w) 
#line 285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
ulonglong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline double1 make_double1(double x) 
#line 290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
double1 t; (t.x) = x; return t; 
#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline double2 make_double2(double x, double y) 
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
double2 t; (t.x) = x; (t.y) = y; return t; 
#line 297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline double3 make_double3(double x, double y, double z) 
#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
double3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
static __inline double4 make_double4(double x, double y, double z, double w) 
#line 305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
{ 
#line 306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
double4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\vector_functions.h"
} 
#line 46 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { void *__cdecl _memccpy(void * , const void * , int , size_t ); } 
#line 47 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { const void *__cdecl memchr(const void * , int , size_t ); } 
#line 48 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _memicmp(const void * , const void * , size_t ); } 
#line 49 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _memicmp_l(const void * , const void * , size_t , _locale_t ); } 
#line 50 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl memcmp(const void * , const void * , size_t ); } 
#line 51 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { void *__cdecl memcpy(void * , const void * , size_t ); } 
#line 53 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl memcpy_s(void * , rsize_t , const void * , rsize_t ); } 
#line 88 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { void *__cdecl memset(void * , int , size_t ); } 
#line 92 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { void *__cdecl memccpy(void * , const void * , int , size_t ); } 
#line 93 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl memicmp(const void * , const void * , size_t ); } 
#line 98 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl _strset_s(char * , size_t , int ); } 
#line 99 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _strset_s ( char ( & _Dest ) [ _Size ], int _Value ) throw ( ) { return _strset_s ( _Dest, _Size, _Value ); }
#line 100 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl _strset(char * , int ); } 
#line 102 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl strcpy_s(char * , rsize_t , const char * ); } 
#line 104 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl strcpy_s ( char ( & _Dest ) [ _Size ], const char * _Source ) throw ( ) { return strcpy_s ( _Dest, _Size, _Source ); }
#line 105 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl strcpy(char * , const char * ); } 
#line 107 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl strcat_s(char * , rsize_t , const char * ); } 
#line 109 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl strcat_s ( char ( & _Dest ) [ _Size ], const char * _Source ) throw ( ) { return strcat_s ( _Dest, _Size, _Source ); }
#line 110 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl strcat(char * , const char * ); } 
#line 111 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl strcmp(const char * , const char * ); } 
#line 112 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { size_t __cdecl strlen(const char * ); } 
#line 113 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { size_t __cdecl strnlen(const char * , size_t ); } 
#line 115 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { static __inline size_t __cdecl strnlen_s(const char *_Str, size_t _MaxCount) 
#line 116 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
{ 
#line 117 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
return (_Str == (0)) ? (0) : strnlen(_Str, _MaxCount); 
#line 118 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
} } 
#line 121 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl memmove_s(void * , rsize_t , const void * , rsize_t ); } 
#line 127 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { void *__cdecl memmove(void * , const void * , size_t ); } 
#line 135 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl _strdup(const char * ); } 
#line 141 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { const char *__cdecl strchr(const char * , int ); } 
#line 142 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _stricmp(const char * , const char * ); } 
#line 143 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _strcmpi(const char * , const char * ); } 
#line 144 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _stricmp_l(const char * , const char * , _locale_t ); } 
#line 145 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl strcoll(const char * , const char * ); } 
#line 146 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _strcoll_l(const char * , const char * , _locale_t ); } 
#line 147 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _stricoll(const char * , const char * ); } 
#line 148 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _stricoll_l(const char * , const char * , _locale_t ); } 
#line 149 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _strncoll(const char * , const char * , size_t ); } 
#line 150 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _strncoll_l(const char * , const char * , size_t , _locale_t ); } 
#line 151 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _strnicoll(const char * , const char * , size_t ); } 
#line 152 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _strnicoll_l(const char * , const char * , size_t , _locale_t ); } 
#line 153 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { size_t __cdecl strcspn(const char * , const char * ); } 
#line 154 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl _strerror(const char * ); } 
#line 155 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl _strerror_s(char * , size_t , const char * ); } 
#line 156 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _strerror_s ( char ( & _Buffer ) [ _Size ], const char * _ErrorMessage ) throw ( ) { return _strerror_s ( _Buffer, _Size, _ErrorMessage ); }
#line 157 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl strerror(int); } 
#line 159 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl strerror_s(char * , size_t , int ); } 
#line 161 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl strerror_s ( char ( & _Buffer ) [ _Size ], int _ErrorMessage ) throw ( ) { return strerror_s ( _Buffer, _Size, _ErrorMessage ); }
#line 162 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl _strlwr_s(char * , size_t ); } 
#line 163 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _strlwr_s ( char ( & _String ) [ _Size ] ) throw ( ) { return _strlwr_s ( _String, _Size ); }
#line 164 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl _strlwr(char * ); } 
#line 165 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl _strlwr_s_l(char * , size_t , _locale_t ); } 
#line 166 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _strlwr_s_l ( char ( & _String ) [ _Size ], _locale_t _Locale ) throw ( ) { return _strlwr_s_l ( _String, _Size, _Locale ); }
#line 167 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl _strlwr_l(char * , _locale_t ); } 
#line 169 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl strncat_s(char * , rsize_t , const char * , rsize_t ); } 
#line 171 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl strncat_s ( char ( & _Dest ) [ _Size ], const char * _Source, size_t _Count ) throw ( ) { return strncat_s ( _Dest, _Size, _Source, _Count ); }
#pragma warning(push)
#pragma warning(disable:6059)
#line 175 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl strncat(char * , const char * , size_t ); } 
#pragma warning(pop)
#line 180 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl strncmp(const char * , const char * , size_t ); } 
#line 182 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _strnicmp(const char * , const char * , size_t ); } 
#line 183 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _strnicmp_l(const char * , const char * , size_t , _locale_t ); } 
#line 185 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl strncpy_s(char * , rsize_t , const char * , rsize_t ); } 
#line 187 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl strncpy_s ( char ( & _Dest ) [ _Size ], const char * _Source, size_t _Count ) throw ( ) { return strncpy_s ( _Dest, _Size, _Source, _Count ); }
#line 188 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl strncpy(char * , const char * , size_t ); } 
#line 189 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl _strnset_s(char * , size_t , int , size_t ); } 
#line 190 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _strnset_s ( char ( & _Dest ) [ _Size ], int _Val, size_t _Count ) throw ( ) { return _strnset_s ( _Dest, _Size, _Val, _Count ); }
#line 191 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl _strnset(char * , int , size_t ); } 
#line 192 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { const char *__cdecl strpbrk(const char * , const char * ); } 
#line 193 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { const char *__cdecl strrchr(const char * , int ); } 
#line 194 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl _strrev(char * ); } 
#line 195 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { size_t __cdecl strspn(const char * , const char * ); } 
#line 196 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { const char *__cdecl strstr(const char * , const char * ); } 
#line 197 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl strtok(char * , const char * ); } 
#line 199 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl strtok_s(char * , const char * , char ** ); } 
#line 201 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl _strupr_s(char * , size_t ); } 
#line 202 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _strupr_s ( char ( & _String ) [ _Size ] ) throw ( ) { return _strupr_s ( _String, _Size ); }
#line 203 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl _strupr(char * ); } 
#line 204 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl _strupr_s_l(char * , size_t , _locale_t ); } 
#line 205 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _strupr_s_l ( char ( & _String ) [ _Size ], _locale_t _Locale ) throw ( ) { return _strupr_s_l ( _String, _Size, _Locale ); }
#line 206 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl _strupr_l(char * , _locale_t ); } 
#line 207 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { size_t __cdecl strxfrm(char * , const char * , size_t ); } 
#line 208 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { size_t __cdecl _strxfrm_l(char * , const char * , size_t , _locale_t ); } 
#line 214 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
inline char *__cdecl strchr(char *_Str, int _Ch) 
#line 215 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
{ return (char *)strchr((const char *)_Str, _Ch); } 
#line 216 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
inline char *__cdecl strpbrk(char *_Str, const char *_Control) 
#line 217 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
{ return (char *)strpbrk((const char *)_Str, _Control); } 
#line 218 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
inline char *__cdecl strrchr(char *_Str, int _Ch) 
#line 219 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
{ return (char *)strrchr((const char *)_Str, _Ch); } 
#line 220 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
inline char *__cdecl strstr(char *_Str, const char *_SubStr) 
#line 221 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
{ return (char *)strstr((const char *)_Str, _SubStr); } 
#line 225 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
inline void *__cdecl memchr(void *_Pv, int _C, size_t _N) 
#line 226 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
{ return (void *)memchr((const void *)_Pv, _C, _N); } 
#line 238 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl strdup(const char * ); } 
#line 245 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl strcmpi(const char * , const char * ); } 
#line 246 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl stricmp(const char * , const char * ); } 
#line 247 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl strlwr(char * ); } 
#line 248 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl strnicmp(const char * , const char * , size_t ); } 
#line 249 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl strnset(char * , int , size_t ); } 
#line 250 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl strrev(char * ); } 
#line 251 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl strset(char * , int ); } 
#line 252 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl strupr(char * ); } 
#line 266 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { __wchar_t *__cdecl _wcsdup(const __wchar_t * ); } 
#line 273 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl wcscat_s(__wchar_t * , rsize_t , const __wchar_t * ); } 
#line 275 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl wcscat_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Source ) throw ( ) { return wcscat_s ( _Dest, _Size, _Source ); }
#line 276 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { __wchar_t *__cdecl wcscat(__wchar_t * , const __wchar_t * ); } 
#line 277 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { const __wchar_t *__cdecl wcschr(const __wchar_t * , __wchar_t ); } 
#line 278 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl wcscmp(const __wchar_t * , const __wchar_t * ); } 
#line 280 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl wcscpy_s(__wchar_t * , rsize_t , const __wchar_t * ); } 
#line 282 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl wcscpy_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Source ) throw ( ) { return wcscpy_s ( _Dest, _Size, _Source ); }
#line 283 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { __wchar_t *__cdecl wcscpy(__wchar_t * , const __wchar_t * ); } 
#line 284 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { size_t __cdecl wcscspn(const __wchar_t * , const __wchar_t * ); } 
#line 285 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { size_t __cdecl wcslen(const __wchar_t * ); } 
#line 286 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { size_t __cdecl wcsnlen(const __wchar_t * , size_t ); } 
#line 288 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { static __inline size_t __cdecl wcsnlen_s(const __wchar_t *_Src, size_t _MaxCount) 
#line 289 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
{ 
#line 290 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
return (_Src == (0)) ? (0) : wcsnlen(_Src, _MaxCount); 
#line 291 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
} } 
#line 294 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl wcsncat_s(__wchar_t * , rsize_t , const __wchar_t * , rsize_t ); } 
#line 296 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl wcsncat_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Source, size_t _Count ) throw ( ) { return wcsncat_s ( _Dest, _Size, _Source, _Count ); }
#pragma warning(push)
#pragma warning(disable:6059)
extern "C" { __wchar_t *__cdecl wcsncat(__wchar_t * , const __wchar_t * , size_t ); } 
#pragma warning(pop)
extern "C" { int __cdecl wcsncmp(const __wchar_t * , const __wchar_t * , size_t ); } 
#line 303 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl wcsncpy_s(__wchar_t * , rsize_t , const __wchar_t * , rsize_t ); } 
#line 305 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl wcsncpy_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Source, size_t _Count ) throw ( ) { return wcsncpy_s ( _Dest, _Size, _Source, _Count ); }
#line 306 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { __wchar_t *__cdecl wcsncpy(__wchar_t * , const __wchar_t * , size_t ); } 
#line 307 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { const __wchar_t *__cdecl wcspbrk(const __wchar_t * , const __wchar_t * ); } 
#line 308 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { const __wchar_t *__cdecl wcsrchr(const __wchar_t * , __wchar_t ); } 
#line 309 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { size_t __cdecl wcsspn(const __wchar_t * , const __wchar_t * ); } 
#line 310 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { const __wchar_t *__cdecl wcsstr(const __wchar_t * , const __wchar_t * ); } 
#line 311 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { __wchar_t *__cdecl wcstok(__wchar_t * , const __wchar_t * ); } 
#line 313 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { __wchar_t *__cdecl wcstok_s(__wchar_t * , const __wchar_t * , __wchar_t ** ); } 
#line 315 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { __wchar_t *__cdecl _wcserror(int ); } 
#line 316 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl _wcserror_s(__wchar_t * , size_t , int ); } 
#line 317 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcserror_s ( wchar_t ( & _Buffer ) [ _Size ], int _Error ) throw ( ) { return _wcserror_s ( _Buffer, _Size, _Error ); }
#line 318 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { __wchar_t *__cdecl __wcserror(const __wchar_t * ); } 
#line 319 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl __wcserror_s(__wchar_t * , size_t , const __wchar_t * ); } 
#line 320 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl __wcserror_s ( wchar_t ( & _Buffer ) [ _Size ], const wchar_t * _ErrorMessage ) throw ( ) { return __wcserror_s ( _Buffer, _Size, _ErrorMessage ); }
#line 322 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _wcsicmp(const __wchar_t * , const __wchar_t * ); } 
#line 323 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _wcsicmp_l(const __wchar_t * , const __wchar_t * , _locale_t ); } 
#line 324 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _wcsnicmp(const __wchar_t * , const __wchar_t * , size_t ); } 
#line 325 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _wcsnicmp_l(const __wchar_t * , const __wchar_t * , size_t , _locale_t ); } 
#line 326 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl _wcsnset_s(__wchar_t * , size_t , __wchar_t , size_t ); } 
#line 327 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcsnset_s ( wchar_t ( & _Dst ) [ _Size ], wchar_t _Val, size_t _MaxCount ) throw ( ) { return _wcsnset_s ( _Dst, _Size, _Val, _MaxCount ); }
#line 328 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { __wchar_t *__cdecl _wcsnset(__wchar_t * , __wchar_t , size_t ); } 
#line 329 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { __wchar_t *__cdecl _wcsrev(__wchar_t * ); } 
#line 330 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl _wcsset_s(__wchar_t * , size_t , __wchar_t ); } 
#line 331 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcsset_s ( wchar_t ( & _Str ) [ _Size ], wchar_t _Val ) throw ( ) { return _wcsset_s ( _Str, _Size, _Val ); }
#line 332 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { __wchar_t *__cdecl _wcsset(__wchar_t * , __wchar_t ); } 
#line 334 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl _wcslwr_s(__wchar_t * , size_t ); } 
#line 335 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcslwr_s ( wchar_t ( & _String ) [ _Size ] ) throw ( ) { return _wcslwr_s ( _String, _Size ); }
#line 336 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { __wchar_t *__cdecl _wcslwr(__wchar_t * ); } 
#line 337 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl _wcslwr_s_l(__wchar_t * , size_t , _locale_t ); } 
#line 338 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcslwr_s_l ( wchar_t ( & _String ) [ _Size ], _locale_t _Locale ) throw ( ) { return _wcslwr_s_l ( _String, _Size, _Locale ); }
#line 339 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { __wchar_t *__cdecl _wcslwr_l(__wchar_t * , _locale_t ); } 
#line 340 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl _wcsupr_s(__wchar_t * , size_t ); } 
#line 341 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcsupr_s ( wchar_t ( & _String ) [ _Size ] ) throw ( ) { return _wcsupr_s ( _String, _Size ); }
#line 342 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { __wchar_t *__cdecl _wcsupr(__wchar_t * ); } 
#line 343 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { errno_t __cdecl _wcsupr_s_l(__wchar_t * , size_t , _locale_t ); } 
#line 344 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcsupr_s_l ( wchar_t ( & _String ) [ _Size ], _locale_t _Locale ) throw ( ) { return _wcsupr_s_l ( _String, _Size, _Locale ); }
#line 345 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { __wchar_t *__cdecl _wcsupr_l(__wchar_t * , _locale_t ); } 
#line 346 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { size_t __cdecl wcsxfrm(__wchar_t * , const __wchar_t * , size_t ); } 
#line 347 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { size_t __cdecl _wcsxfrm_l(__wchar_t * , const __wchar_t * , size_t , _locale_t ); } 
#line 348 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl wcscoll(const __wchar_t * , const __wchar_t * ); } 
#line 349 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _wcscoll_l(const __wchar_t * , const __wchar_t * , _locale_t ); } 
#line 350 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _wcsicoll(const __wchar_t * , const __wchar_t * ); } 
#line 351 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _wcsicoll_l(const __wchar_t * , const __wchar_t * , _locale_t ); } 
#line 352 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _wcsncoll(const __wchar_t * , const __wchar_t * , size_t ); } 
#line 353 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _wcsncoll_l(const __wchar_t * , const __wchar_t * , size_t , _locale_t ); } 
#line 354 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _wcsnicoll(const __wchar_t * , const __wchar_t * , size_t ); } 
#line 355 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl _wcsnicoll_l(const __wchar_t * , const __wchar_t * , size_t , _locale_t ); } 
#line 361 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
inline __wchar_t *__cdecl wcschr(__wchar_t *_Str, __wchar_t _Ch) 
#line 362 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
{ return (__wchar_t *)wcschr((const __wchar_t *)_Str, _Ch); } 
#line 363 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
inline __wchar_t *__cdecl wcspbrk(__wchar_t *_Str, const __wchar_t *_Control) 
#line 364 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
{ return (__wchar_t *)wcspbrk((const __wchar_t *)_Str, _Control); } 
#line 365 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
inline __wchar_t *__cdecl wcsrchr(__wchar_t *_Str, __wchar_t _Ch) 
#line 366 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
{ return (__wchar_t *)wcsrchr((const __wchar_t *)_Str, _Ch); } 
#line 367 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
inline __wchar_t *__cdecl wcsstr(__wchar_t *_Str, const __wchar_t *_SubStr) 
#line 368 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
{ return (__wchar_t *)wcsstr((const __wchar_t *)_Str, _SubStr); } 
#line 380 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { __wchar_t *__cdecl wcsdup(const __wchar_t * ); } 
#line 390 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl wcsicmp(const __wchar_t * , const __wchar_t * ); } 
#line 391 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl wcsnicmp(const __wchar_t * , const __wchar_t * , size_t ); } 
#line 392 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { __wchar_t *__cdecl wcsnset(__wchar_t * , __wchar_t , size_t ); } 
#line 393 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { __wchar_t *__cdecl wcsrev(__wchar_t * ); } 
#line 394 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { __wchar_t *__cdecl wcsset(__wchar_t * , __wchar_t ); } 
#line 395 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { __wchar_t *__cdecl wcslwr(__wchar_t * ); } 
#line 396 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { __wchar_t *__cdecl wcsupr(__wchar_t * ); } 
#line 397 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl wcsicoll(const __wchar_t * , const __wchar_t * ); } 
#line 32 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
#pragma pack ( push, 8 )
#line 82 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { typedef long clock_t; }
#line 106 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { struct tm { 
#line 107 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
int tm_sec; 
#line 108 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
int tm_min; 
#line 109 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
int tm_hour; 
#line 110 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
int tm_mday; 
#line 111 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
int tm_mon; 
#line 112 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
int tm_year; 
#line 113 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
int tm_wday; 
#line 114 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
int tm_yday; 
#line 115 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
int tm_isdst; 
#line 116 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
}; }
#line 131 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { int *__cdecl __daylight(); } 
#line 135 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { long *__cdecl __dstbias(); } 
#line 139 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { long *__cdecl __timezone(); } 
#line 143 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { char **__cdecl __tzname(); } 
#line 146 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { errno_t __cdecl _get_daylight(int * ); } 
#line 147 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { errno_t __cdecl _get_dstbias(long * ); } 
#line 148 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { errno_t __cdecl _get_timezone(long * ); } 
#line 149 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { errno_t __cdecl _get_tzname(size_t * , char * , size_t , int ); } 
#line 153 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { char *__cdecl asctime(const tm * ); } 
#line 155 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { errno_t __cdecl asctime_s(char * , size_t , const tm * ); } 
#line 157 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
template < size_t _Size > inline errno_t __cdecl asctime_s ( char ( & _Buffer ) [ _Size ], const struct tm * _Time ) throw ( ) { return asctime_s ( _Buffer, _Size, _Time ); }
#line 159 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { char *__cdecl _ctime32(const __time32_t * ); } 
#line 160 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { errno_t __cdecl _ctime32_s(char * , size_t , const __time32_t * ); } 
#line 161 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
template < size_t _Size > inline errno_t __cdecl _ctime32_s ( char ( & _Buffer ) [ _Size ], const __time32_t * _Time ) throw ( ) { return _ctime32_s ( _Buffer, _Size, _Time ); }
#line 163 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { clock_t __cdecl clock(); } 
#line 164 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { double __cdecl _difftime32(__time32_t , __time32_t ); } 
#line 166 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { tm *__cdecl _gmtime32(const __time32_t * ); } 
#line 167 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { errno_t __cdecl _gmtime32_s(tm * , const __time32_t * ); } 
#line 169 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { tm *__cdecl _localtime32(const __time32_t * ); } 
#line 170 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { errno_t __cdecl _localtime32_s(tm * , const __time32_t * ); } 
#line 172 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { size_t __cdecl strftime(char * , size_t , const char * , const tm * ); } 
#line 173 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { size_t __cdecl _strftime_l(char * , size_t , const char * , const tm * , _locale_t ); } 
#line 175 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { errno_t __cdecl _strdate_s(char * , size_t ); } 
#line 176 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
template < size_t _Size > inline errno_t __cdecl _strdate_s ( char ( & _Buffer ) [ _Size ] ) throw ( ) { return _strdate_s ( _Buffer, _Size ); }
#line 177 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { char *__cdecl _strdate(char * ); } 
#line 179 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { errno_t __cdecl _strtime_s(char * , size_t ); } 
#line 180 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
template < size_t _Size > inline errno_t __cdecl _strtime_s ( char ( & _Buffer ) [ _Size ] ) throw ( ) { return _strtime_s ( _Buffer, _Size ); }
#line 181 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { char *__cdecl _strtime(char * ); } 
#line 183 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { __time32_t __cdecl _time32(__time32_t * ); } 
#line 184 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { __time32_t __cdecl _mktime32(tm * ); } 
#line 185 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { __time32_t __cdecl _mkgmtime32(tm * ); } 
#line 190 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { void __cdecl _tzset(); } 
#line 193 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { double __cdecl _difftime64(__time64_t , __time64_t ); } 
#line 194 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { char *__cdecl _ctime64(const __time64_t * ); } 
#line 195 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { errno_t __cdecl _ctime64_s(char * , size_t , const __time64_t * ); } 
#line 196 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
template < size_t _Size > inline errno_t __cdecl _ctime64_s ( char ( & _Buffer ) [ _Size ], const __time64_t * _Time ) throw ( ) { return _ctime64_s ( _Buffer, _Size, _Time ); }
#line 198 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { tm *__cdecl _gmtime64(const __time64_t * ); } 
#line 199 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { errno_t __cdecl _gmtime64_s(tm * , const __time64_t * ); } 
#line 201 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { tm *__cdecl _localtime64(const __time64_t * ); } 
#line 202 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { errno_t __cdecl _localtime64_s(tm * , const __time64_t * ); } 
#line 204 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { __time64_t __cdecl _mktime64(tm * ); } 
#line 205 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { __time64_t __cdecl _mkgmtime64(tm * ); } 
#line 206 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { __time64_t __cdecl _time64(__time64_t * ); } 
#line 209 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using GetLocalTime in" "stead. See online help for details.")) unsigned __cdecl _getsystime(tm * ); } 
#line 210 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using SetLocalTime in" "stead. See online help for details.")) unsigned __cdecl _setsystime(tm * , unsigned ); } 
#line 222 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { __wchar_t *__cdecl _wasctime(const tm * ); } 
#line 223 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { errno_t __cdecl _wasctime_s(__wchar_t * , size_t , const tm * ); } 
#line 224 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
template < size_t _Size > inline errno_t __cdecl _wasctime_s ( wchar_t ( & _Buffer ) [ _Size ], const struct tm * _Time ) throw ( ) { return _wasctime_s ( _Buffer, _Size, _Time ); }
#line 226 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { __wchar_t *__cdecl _wctime32(const __time32_t * ); } 
#line 227 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { errno_t __cdecl _wctime32_s(__wchar_t * , size_t , const __time32_t * ); } 
#line 228 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
template < size_t _Size > inline errno_t __cdecl _wctime32_s ( wchar_t ( & _Buffer ) [ _Size ], const __time32_t * _Time ) throw ( ) { return _wctime32_s ( _Buffer, _Size, _Time ); }
#line 230 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { size_t __cdecl wcsftime(__wchar_t * , size_t , const __wchar_t * , const tm * ); } 
#line 231 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { size_t __cdecl _wcsftime_l(__wchar_t * , size_t , const __wchar_t * , const tm * , _locale_t ); } 
#line 233 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { errno_t __cdecl _wstrdate_s(__wchar_t * , size_t ); } 
#line 234 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
template < size_t _Size > inline errno_t __cdecl _wstrdate_s ( wchar_t ( & _Buffer ) [ _Size ] ) throw ( ) { return _wstrdate_s ( _Buffer, _Size ); }
#line 235 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { __wchar_t *__cdecl _wstrdate(__wchar_t * ); } 
#line 237 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { errno_t __cdecl _wstrtime_s(__wchar_t * , size_t ); } 
#line 238 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
template < size_t _Size > inline errno_t __cdecl _wstrtime_s ( wchar_t ( & _Buffer ) [ _Size ] ) throw ( ) { return _wstrtime_s ( _Buffer, _Size ); }
#line 239 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { __wchar_t *__cdecl _wstrtime(__wchar_t * ); } 
#line 241 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { __wchar_t *__cdecl _wctime64(const __time64_t * ); } 
#line 242 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { errno_t __cdecl _wctime64_s(__wchar_t * , size_t , const __time64_t * ); } 
#line 243 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
template < size_t _Size > inline errno_t __cdecl _wctime64_s ( wchar_t ( & _Buffer ) [ _Size ], const __time64_t * _Time ) throw ( ) { return _wctime64_s ( _Buffer, _Size, _Time ); }
#line 27 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\wtime.inl"
#pragma warning(push)
#pragma warning(disable:4996)
#line 44 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\wtime.inl"
extern "C" { static __inline __wchar_t *__cdecl _wctime(const time_t *_Time) 
#line 45 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\wtime.inl"
{ 
#pragma warning( push )
#pragma warning( disable : 4996 )
return _wctime64(_Time); 
#pragma warning( pop )
} } 
#line 52 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\wtime.inl"
extern "C" { static __inline errno_t __cdecl _wctime_s(__wchar_t *_Buffer, size_t _SizeInWords, const time_t *_Time) 
#line 53 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\wtime.inl"
{ 
#line 54 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\wtime.inl"
return _wctime64_s(_Buffer, _SizeInWords, _Time); 
#line 55 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\wtime.inl"
} } 
#line 58 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\wtime.inl"
#pragma warning(pop)
#line 82 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
extern "C" { static __inline double __cdecl difftime(time_t _Time1, time_t _Time2) 
#line 83 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
{ 
#line 84 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
return _difftime64(_Time1, _Time2); 
#line 85 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
} } 
#line 86 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
extern "C" { static __inline char *__cdecl ctime(const time_t *_Time) 
#line 87 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
{ 
#pragma warning( push )
#pragma warning( disable : 4996 )
return _ctime64(_Time); 
#pragma warning( pop )
} } 
#line 94 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
extern "C" { static __inline errno_t __cdecl ctime_s(char *_Buffer, size_t _SizeInBytes, const time_t *_Time) 
#line 95 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
{ 
#line 96 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
return _ctime64_s(_Buffer, _SizeInBytes, _Time); 
#line 97 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
} } 
#line 99 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
extern "C" { static __inline tm *__cdecl gmtime(const time_t *_Time) 
#line 100 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
{ 
#pragma warning( push )
#pragma warning( disable : 4996 )
return _gmtime64(_Time); 
#pragma warning( pop )
} } 
#line 107 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
extern "C" { static __inline errno_t __cdecl gmtime_s(tm *_Tm, const time_t *_Time) 
#line 108 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
{ 
#line 109 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
return _gmtime64_s(_Tm, _Time); 
#line 110 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
} } 
#line 112 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
extern "C" { static __inline tm *__cdecl localtime(const time_t *_Time) 
#line 113 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
{ 
#pragma warning( push )
#pragma warning( disable : 4996 )
return _localtime64(_Time); 
#pragma warning( pop )
} } 
#line 119 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
extern "C" { static __inline errno_t __cdecl localtime_s(tm *_Tm, const time_t *_Time) 
#line 120 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
{ 
#line 121 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
return _localtime64_s(_Tm, _Time); 
#line 122 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
} } 
#line 123 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
extern "C" { static __inline time_t __cdecl mktime(tm *_Tm) 
#line 124 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
{ 
#line 125 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
return _mktime64(_Tm); 
#line 126 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
} } 
#line 127 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
extern "C" { static __inline time_t __cdecl _mkgmtime(tm *_Tm) 
#line 128 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
{ 
#line 129 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
return _mkgmtime64(_Tm); 
#line 130 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
} } 
#line 131 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
extern "C" { static __inline time_t __cdecl time(time_t *_Time) 
#line 132 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
{ 
#line 133 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
return _time64(_Time); 
#line 134 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.inl"
} } 
#line 268 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" int daylight; 
#line 269 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" long timezone; 
#line 270 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" char *tzname[2]; 
#line 273 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
extern "C" { void __cdecl tzset(); } 
#line 282 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\time.h"
#pragma pack ( pop )
#line 69 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\common_functions.h"
extern "C" { extern clock_t __cdecl clock(); } 
#line 70 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\common_functions.h"
extern "C" { extern void *__cdecl memset(void *, int, size_t); } 
#line 71 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\common_functions.h"
extern "C" { extern void *__cdecl memcpy(void *, const void *, size_t); } 
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern int __cdecl abs(int); } 
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern long __cdecl labs(long); } 
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern __int64 llabs(__int64); } 
#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl fabs(double ); } 
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { inline float fabsf(float ); } 
#line 189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern int min(int, int); } 
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern unsigned umin(unsigned, unsigned); } 
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern __int64 llmin(__int64, __int64); } 
#line 192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern unsigned __int64 ullmin(unsigned __int64, unsigned __int64); } 
#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float fminf(float , float ); } 
#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double fmin(double , double ); } 
#line 225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern int max(int, int); } 
#line 226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern unsigned umax(unsigned, unsigned); } 
#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern __int64 llmax(__int64, __int64); } 
#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern unsigned __int64 ullmax(unsigned __int64, unsigned __int64); } 
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float fmaxf(float , float ); } 
#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double fmax(double, double); } 
#line 273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl sin(double ); } 
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl cos(double ); } 
#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern void sincos(double , double * , double * ); } 
#line 317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern void sincosf(float , float * , float * ); } 
#line 330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl tan(double ); } 
#line 345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl sqrt(double ); } 
#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double rsqrt(double ); } 
#line 375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float rsqrtf(float ); } 
#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double log2(double ); } 
#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double exp2(double ); } 
#line 412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float exp2f(float ); } 
#line 423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double exp10(double ); } 
#line 435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float exp10f(float ); } 
#line 446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double expm1(double ); } 
#line 457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float expm1f(float ); } 
#line 472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float log2f(float ); } 
#line 487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl log10(double ); } 
#line 502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl log(double ); } 
#line 517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double log1p(double ); } 
#line 532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float log1pf(float ); } 
#line 546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl floor(double ); } 
#line 557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl exp(double ); } 
#line 570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl cosh(double ); } 
#line 582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl sinh(double ); } 
#line 594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl tanh(double ); } 
#line 608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double acosh(double ); } 
#line 622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float acoshf(float ); } 
#line 634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double asinh(double ); } 
#line 646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float asinhf(float ); } 
#line 660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double atanh(double ); } 
#line 674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float atanhf(float ); } 
#line 686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl ldexp(double , int ); } 
#line 698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { inline float ldexpf(float , int ); } 
#line 711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double logb(double ); } 
#line 724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float logbf(float ); } 
#line 742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern int ilogb(double ); } 
#line 760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern int ilogbf(float ); } 
#line 774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double scalbn(double , int ); } 
#line 788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float scalbnf(float , int ); } 
#line 802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double scalbln(double , long ); } 
#line 816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float scalblnf(float , long ); } 
#line 837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl frexp(double , int * ); } 
#line 858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { inline float frexpf(float , int * ); } 
#line 871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double round(double ); } 
#line 884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float roundf(float ); } 
#line 898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern long lround(double ); } 
#line 912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern long lroundf(float ); } 
#line 926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern __int64 llround(double ); } 
#line 940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern __int64 llroundf(float ); } 
#line 951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double rint(double ); } 
#line 962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float rintf(float ); } 
#line 974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern long lrint(double ); } 
#line 986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern long lrintf(float ); } 
#line 998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern __int64 llrint(double ); } 
#line 1010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern __int64 llrintf(float ); } 
#line 1023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double nearbyint(double ); } 
#line 1036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float nearbyintf(float ); } 
#line 1048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl ceil(double ); } 
#line 1059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double trunc(double ); } 
#line 1070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float truncf(float ); } 
#line 1084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double fdim(double , double ); } 
#line 1098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float fdimf(float , float ); } 
#line 1113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl atan2(double , double ); } 
#line 1126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl atan(double ); } 
#line 1140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl acos(double ); } 
#line 1154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl asin(double ); } 
#line 1171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { static __inline double __cdecl hypot(double , double ); } 
#line 1186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { static __inline float hypotf(float , float ); } 
#line 1200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double cbrt(double ); } 
#line 1214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float cbrtf(float ); } 
#line 1227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double rcbrt(double ); } 
#line 1240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float rcbrtf(float ); } 
#line 1254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double sinpi(double ); } 
#line 1268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float sinpif(float ); } 
#line 1282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double cospi(double ); } 
#line 1296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float cospif(float ); } 
#line 1324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl pow(double , double ); } 
#line 1341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl modf(double , double * ); } 
#line 1361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl fmod(double , double ); } 
#line 1379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double remainder(double , double ); } 
#line 1398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float remainderf(float , float ); } 
#line 1417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double remquo(double , double , int * ); } 
#line 1436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float remquof(float , float , int * ); } 
#line 1451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl j0(double ); } 
#line 1466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float j0f(float ); } 
#line 1482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl j1(double ); } 
#line 1498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float j1f(float ); } 
#line 1514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl jn(int , double ); } 
#line 1530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float jnf(int , float ); } 
#line 1547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl y0(double ); } 
#line 1564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float y0f(float ); } 
#line 1581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl y1(double ); } 
#line 1598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float y1f(float ); } 
#line 1616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double __cdecl yn(int , double ); } 
#line 1634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float ynf(int , float ); } 
#line 1648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double erf(double ); } 
#line 1662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float erff(float ); } 
#line 1677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double erfinv(double ); } 
#line 1692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float erfinvf(float ); } 
#line 1706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double erfc(double ); } 
#line 1720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float erfcf(float ); } 
#line 1738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double lgamma(double ); } 
#line 1753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double erfcinv(double ); } 
#line 1768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float erfcinvf(float ); } 
#line 1778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double erfcx(double ); } 
#line 1788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float erfcxf(float ); } 
#line 1806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float lgammaf(float ); } 
#line 1824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double tgamma(double ); } 
#line 1842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float tgammaf(float ); } 
#line 1851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double copysign(double , double ); } 
#line 1860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float copysignf(float , float ); } 
#line 1875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double nextafter(double , double ); } 
#line 1890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float nextafterf(float , float ); } 
#line 1902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double nan(const char * ); } 
#line 1914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float nanf(const char * ); } 
#line 1915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern int __isinff(float); } 
#line 1916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern int __isnanf(float); } 
#line 1925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern int __finite(double); } 
#line 1926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern int __finitef(float); } 
#line 1927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern int __signbit(double); } 
#line 1928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern int __isnan(double); } 
#line 1929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern int __isinf(double); } 
#line 1932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern int __signbitf(float); } 
#line 1949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern double fma(double , double , double ); } 
#line 1966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float fmaf(float , float , float ); } 
#line 1971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern int __signbitl(long double); } 
#line 1977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern int __finitel(long double); } 
#line 1978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern int __isinfl(long double); } 
#line 1979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern int __isnanl(long double); } 
#line 1983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float __cdecl acosf(float); } 
#line 1984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float __cdecl asinf(float); } 
#line 1985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float __cdecl atanf(float); } 
#line 1986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float __cdecl atan2f(float, float); } 
#line 1987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float __cdecl cosf(float); } 
#line 1988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float __cdecl sinf(float); } 
#line 1989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float __cdecl tanf(float); } 
#line 1990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float __cdecl coshf(float); } 
#line 1991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float __cdecl sinhf(float); } 
#line 1992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float __cdecl tanhf(float); } 
#line 1993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float __cdecl expf(float); } 
#line 1994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float __cdecl logf(float); } 
#line 1995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float __cdecl log10f(float); } 
#line 1996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float __cdecl modff(float, float *); } 
#line 1997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float __cdecl powf(float, float); } 
#line 1998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float __cdecl sqrtf(float); } 
#line 1999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float __cdecl ceilf(float); } 
#line 2000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float __cdecl floorf(float); } 
#line 2001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
extern "C" { extern float __cdecl fmodf(float, float); } 
#line 24 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
#pragma pack ( push, 8 )
#line 37 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { struct _exception { 
#line 38 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
int type; 
#line 39 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
char *name; 
#line 40 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
double arg1; 
#line 41 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
double arg2; 
#line 42 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
double retval; 
#line 43 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
}; }
#line 54 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { struct _complex { 
#line 55 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
double x, y; 
#line 56 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
}; }
#line 88 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" double _HUGE; 
#line 101 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { int __cdecl abs(int ); } 
#line 102 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { long __cdecl labs(long ); } 
#line 103 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { __int64 __cdecl llabs(__int64 ); } 
#line 106 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl acos(double ); } 
#line 107 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl asin(double ); } 
#line 108 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl atan(double ); } 
#line 109 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl atan2(double , double ); } 
#line 111 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl _copysign(double , double ); } 
#line 112 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl _chgsign(double ); } 
#line 115 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl cos(double ); } 
#line 116 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl cosh(double ); } 
#line 117 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl exp(double ); } 
#line 118 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl fabs(double ); } 
#line 119 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl fmod(double , double ); } 
#line 120 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl log(double ); } 
#line 121 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl log10(double ); } 
#line 122 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl pow(double , double ); } 
#line 123 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl sin(double ); } 
#line 124 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl sinh(double ); } 
#line 125 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl tan(double ); } 
#line 126 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl tanh(double ); } 
#line 127 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl sqrt(double ); } 
#line 130 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl atof(const char * ); } 
#line 131 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl _atof_l(const char * , _locale_t ); } 
#line 134 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl _cabs(_complex ); } 
#line 135 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl ceil(double ); } 
#line 136 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl floor(double ); } 
#line 137 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl frexp(double , int * ); } 
#line 138 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl _hypot(double , double ); } 
#line 139 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl _hypotf(float , float ); } 
#line 140 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl _j0(double ); } 
#line 141 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl _j1(double ); } 
#line 142 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl _jn(int , double ); } 
#line 143 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl ldexp(double , int ); } 
#line 149 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { int __cdecl _matherr(_exception * ); } 
#line 152 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl modf(double , double * ); } 
#line 154 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl _y0(double ); } 
#line 155 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl _y1(double ); } 
#line 156 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl _yn(int , double ); } 
#line 161 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { static __inline double __cdecl hypot(double _X, double _Y) 
#line 162 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ 
#line 163 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
return _hypot(_X, _Y); 
#line 164 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
} } 
#line 166 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { static __inline float __cdecl hypotf(float _X, float _Y) 
#line 167 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ 
#line 168 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
return _hypotf(_X, _Y); 
#line 169 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
} } 
#line 224 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl acosf(float ); } 
#line 225 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl asinf(float ); } 
#line 226 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl atanf(float ); } 
#line 227 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl atan2f(float , float ); } 
#line 228 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl cosf(float ); } 
#line 229 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl sinf(float ); } 
#line 230 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl tanf(float ); } 
#line 233 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl coshf(float ); } 
#line 234 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl sinhf(float ); } 
#line 235 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl tanhf(float ); } 
#line 238 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl expf(float ); } 
#line 239 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl logf(float ); } 
#line 240 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl log10f(float ); } 
#line 241 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl modff(float , float * ); } 
#line 244 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl powf(float , float ); } 
#line 245 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl sqrtf(float ); } 
#line 248 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl ceilf(float ); } 
#line 249 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl floorf(float ); } 
#line 250 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl fmodf(float , float ); } 
#line 252 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl _copysignf(float , float ); } 
#line 253 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl _chgsignf(float ); } 
#line 254 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl _logbf(float ); } 
#line 255 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl _nextafterf(float , float ); } 
#line 256 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { int __cdecl _finitef(float ); } 
#line 257 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { int __cdecl _isnanf(float ); } 
#line 258 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { int __cdecl _fpclassf(float ); } 
#line 328 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double acosl(long double _X) 
#line 329 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return acos((double)_X); } } 
#line 330 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double asinl(long double _X) 
#line 331 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return asin((double)_X); } } 
#line 332 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double atanl(long double _X) 
#line 333 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return atan((double)_X); } } 
#line 334 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double atan2l(long double _Y, long double _X) 
#line 335 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return atan2((double)_Y, (double)_X); } } 
#line 336 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double ceill(long double _X) 
#line 337 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return ceil((double)_X); } } 
#line 338 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double cosl(long double _X) 
#line 339 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return cos((double)_X); } } 
#line 340 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double coshl(long double _X) 
#line 341 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return cosh((double)_X); } } 
#line 342 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double expl(long double _X) 
#line 343 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return exp((double)_X); } } 
#line 344 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double fabsl(long double _X) 
#line 345 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return fabs((double)_X); } } 
#line 346 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double floorl(long double _X) 
#line 347 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return floor((double)_X); } } 
#line 348 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double fmodl(long double _X, long double _Y) 
#line 349 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return fmod((double)_X, (double)_Y); } } 
#line 350 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double frexpl(long double _X, int *_Y) 
#line 351 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return frexp((double)_X, _Y); } } 
#line 352 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double ldexpl(long double _X, int _Y) 
#line 353 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return ldexp((double)_X, _Y); } } 
#line 354 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double logl(long double _X) 
#line 355 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return log((double)_X); } } 
#line 356 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double log10l(long double _X) 
#line 357 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return log10((double)_X); } } 
#line 358 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double modfl(long double _X, long double *_Y) 
#line 359 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ double _Di, _Df = modf((double)_X, &_Di); 
#line 360 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
(*_Y) = ((long double)_Di); 
#line 361 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
return _Df; } } 
#line 362 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double powl(long double _X, long double _Y) 
#line 363 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return pow((double)_X, (double)_Y); } } 
#line 364 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double sinl(long double _X) 
#line 365 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return sin((double)_X); } } 
#line 366 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double sinhl(long double _X) 
#line 367 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return sinh((double)_X); } } 
#line 368 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double sqrtl(long double _X) 
#line 369 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return sqrt((double)_X); } } 
#line 371 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double tanl(long double _X) 
#line 372 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return tan((double)_X); } } 
#line 377 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double tanhl(long double _X) 
#line 378 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return tanh((double)_X); } } 
#line 380 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double _chgsignl(long double _Number) 
#line 381 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ 
#line 382 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
return _chgsign(static_cast< double>(_Number)); 
#line 383 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
} } 
#line 385 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline long double _copysignl(long double _Number, long double _Sign) 
#line 386 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ 
#line 387 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
return _copysign(static_cast< double>(_Number), static_cast< double>(_Sign)); 
#line 388 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
} } 
#line 390 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline float frexpf(float _X, int *_Y) 
#line 391 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return (float)frexp((double)_X, _Y); } } 
#line 394 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline float fabsf(float _X) 
#line 395 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return (float)fabs((double)_X); } } 
#line 396 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { inline float ldexpf(float _X, int _Y) 
#line 397 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return (float)ldexp((double)_X, _Y); } } 
#line 460 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" double HUGE; 
#line 465 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl cabs(_complex ); } 
#line 466 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl j0(double ); } 
#line 467 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl j1(double ); } 
#line 468 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl jn(int , double ); } 
#line 469 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl y0(double ); } 
#line 470 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl y1(double ); } 
#line 471 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl yn(int , double ); } 
#line 482 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
template < class _Ty > inline
        _Ty _Pow_int ( _Ty _X, int _Y )
        { unsigned int _N;
        if ( _Y >= 0 )
                _N = ( unsigned int ) _Y;
        else
                _N = ( unsigned int ) ( - _Y );
        for ( _Ty _Z = _Ty ( 1 );; _X *= _X )
                { if ( ( _N & 1 ) != 0 )
                        _Z *= _X;
                if ( ( _N >>= 1 ) == 0 )
                        return ( _Y < 0 ? _Ty ( 1 ) / _Z : _Z ); } }
#line 495 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline double __cdecl abs(double _X) 
#line 496 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return fabs(_X); } 
#line 497 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline double __cdecl pow(double _X, int _Y) 
#line 498 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return _Pow_int(_X, _Y); } 
#line 499 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl abs(float _X) 
#line 500 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return fabsf(_X); } 
#line 501 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl acos(float _X) 
#line 502 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return acosf(_X); } 
#line 503 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl asin(float _X) 
#line 504 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return asinf(_X); } 
#line 505 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl atan(float _X) 
#line 506 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return atanf(_X); } 
#line 507 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl atan2(float _Y, float _X) 
#line 508 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return atan2f(_Y, _X); } 
#line 509 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl ceil(float _X) 
#line 510 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return ceilf(_X); } 
#line 511 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl cos(float _X) 
#line 512 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return cosf(_X); } 
#line 513 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl cosh(float _X) 
#line 514 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return coshf(_X); } 
#line 515 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl exp(float _X) 
#line 516 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return expf(_X); } 
#line 517 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl fabs(float _X) 
#line 518 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return fabsf(_X); } 
#line 519 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl floor(float _X) 
#line 520 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return floorf(_X); } 
#line 521 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl fmod(float _X, float _Y) 
#line 522 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return fmodf(_X, _Y); } 
#line 523 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl frexp(float _X, int *_Y) 
#line 524 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return frexpf(_X, _Y); } 
#line 525 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl ldexp(float _X, int _Y) 
#line 526 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return ldexpf(_X, _Y); } 
#line 527 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl log(float _X) 
#line 528 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return logf(_X); } 
#line 529 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl log10(float _X) 
#line 530 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return log10f(_X); } 
#line 531 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl modf(float _X, float *_Y) 
#line 532 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return modff(_X, _Y); } 
#line 533 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl pow(float _X, float _Y) 
#line 534 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return powf(_X, _Y); } 
#line 535 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl pow(float _X, int _Y) 
#line 536 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return _Pow_int(_X, _Y); } 
#line 537 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl sin(float _X) 
#line 538 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return sinf(_X); } 
#line 539 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl sinh(float _X) 
#line 540 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return sinhf(_X); } 
#line 541 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl sqrt(float _X) 
#line 542 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return sqrtf(_X); } 
#line 543 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl tan(float _X) 
#line 544 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return tanf(_X); } 
#line 545 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline float __cdecl tanh(float _X) 
#line 546 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return tanhf(_X); } 
#line 547 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl abs(long double _X) 
#line 548 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return fabsl(_X); } 
#line 549 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl acos(long double _X) 
#line 550 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return acosl(_X); } 
#line 551 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl asin(long double _X) 
#line 552 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return asinl(_X); } 
#line 553 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl atan(long double _X) 
#line 554 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return atanl(_X); } 
#line 555 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl atan2(long double _Y, long double _X) 
#line 556 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return atan2l(_Y, _X); } 
#line 557 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl ceil(long double _X) 
#line 558 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return ceill(_X); } 
#line 559 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl cos(long double _X) 
#line 560 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return cosl(_X); } 
#line 561 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl cosh(long double _X) 
#line 562 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return coshl(_X); } 
#line 563 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl exp(long double _X) 
#line 564 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return expl(_X); } 
#line 565 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl fabs(long double _X) 
#line 566 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return fabsl(_X); } 
#line 567 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl floor(long double _X) 
#line 568 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return floorl(_X); } 
#line 569 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl fmod(long double _X, long double _Y) 
#line 570 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return fmodl(_X, _Y); } 
#line 571 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl frexp(long double _X, int *_Y) 
#line 572 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return frexpl(_X, _Y); } 
#line 573 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl ldexp(long double _X, int _Y) 
#line 574 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return ldexpl(_X, _Y); } 
#line 575 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl log(long double _X) 
#line 576 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return logl(_X); } 
#line 577 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl log10(long double _X) 
#line 578 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return log10l(_X); } 
#line 579 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl modf(long double _X, long double *_Y) 
#line 580 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return modfl(_X, _Y); } 
#line 581 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl pow(long double _X, long double _Y) 
#line 582 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return powl(_X, _Y); } 
#line 583 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl pow(long double _X, int _Y) 
#line 584 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return _Pow_int(_X, _Y); } 
#line 585 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl sin(long double _X) 
#line 586 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return sinl(_X); } 
#line 587 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl sinh(long double _X) 
#line 588 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return sinhl(_X); } 
#line 589 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl sqrt(long double _X) 
#line 590 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return sqrtl(_X); } 
#line 591 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl tan(long double _X) 
#line 592 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return tanl(_X); } 
#line 593 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
inline long double __cdecl tanh(long double _X) 
#line 594 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
{ return tanhl(_X); } 
#line 599 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\math.h"
#pragma pack ( pop )
#line 28 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
#pragma pack ( push, 8 )
#line 52 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef int (__cdecl *_onexit_t)(void); }
#line 78 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef 
#line 75 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
struct _div_t { 
#line 76 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
int quot; 
#line 77 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
int rem; 
#line 78 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
} div_t; }
#line 83 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef 
#line 80 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
struct _ldiv_t { 
#line 81 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
long quot; 
#line 82 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
long rem; 
#line 83 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
} ldiv_t; }
#line 88 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef 
#line 85 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
struct _lldiv_t { 
#line 86 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
__int64 quot; 
#line 87 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
__int64 rem; 
#line 88 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
} lldiv_t; }
#line 102 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
#pragma pack ( 4 )
#line 105 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef 
#line 103 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
struct { 
#line 104 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
unsigned char ld[10]; 
#line 105 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
} _LDOUBLE; }
#pragma pack ( )
#line 124 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef 
#line 122 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
struct { 
#line 123 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
double x; 
#line 124 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
} _CRT_DOUBLE; }
#line 128 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef 
#line 126 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
struct { 
#line 127 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
float f; 
#line 128 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
} _CRT_FLOAT; }
#line 139 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef 
#line 134 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
struct { 
#line 138 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
long double x; 
#line 139 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
} _LONGDOUBLE; }
#line 143 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
#pragma pack ( 4 )
#line 146 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef 
#line 144 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
struct { 
#line 145 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
unsigned char ld12[12]; 
#line 146 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
} _LDBL12; }
#pragma pack ( )
#line 163 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" int __mb_cur_max; 
#line 168 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl ___mb_cur_max_func(); } 
#line 169 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl ___mb_cur_max_l_func(_locale_t); } 
#line 208 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef void (__cdecl *_purecall_handler)(void); }
#line 211 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { _purecall_handler __cdecl _set_purecall_handler(_purecall_handler ); } 
#line 212 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { _purecall_handler __cdecl _get_purecall_handler(); } 
#line 228 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef void (__cdecl *_invalid_parameter_handler)(const __wchar_t *, const __wchar_t *, const __wchar_t *, unsigned, uintptr_t); }
#line 231 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { _invalid_parameter_handler __cdecl _set_invalid_parameter_handler(_invalid_parameter_handler ); } 
#line 232 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { _invalid_parameter_handler __cdecl _get_invalid_parameter_handler(); } 
#line 256 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned long *__cdecl __doserrno(); } 
#line 259 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _set_doserrno(unsigned long ); } 
#line 260 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _get_doserrno(unsigned long * ); } 
#line 263 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { char **__cdecl __sys_errlist(); } 
#line 266 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int *__cdecl __sys_nerr(); } 
#line 283 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" int __argc; 
#line 284 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" char **__argv; 
#line 285 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" __wchar_t **__wargv; 
#line 299 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" char **_environ; 
#line 300 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" __wchar_t **_wenviron; 
#line 303 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" char *_pgmptr; 
#line 304 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" __wchar_t *_wpgmptr; 
#line 321 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _get_pgmptr(char ** ); } 
#line 322 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _get_wpgmptr(__wchar_t ** ); } 
#line 326 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" int _fmode; 
#line 332 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _set_fmode(int ); } 
#line 333 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _get_fmode(int * ); } 
#line 342 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template< class _CountofType, size_t _SizeOfArray> char (*__countof_helper(__unaligned _CountofType (& )[_SizeOfArray]))[_SizeOfArray]; 
#line 353 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(noreturn) void __cdecl exit(int ); } 
#line 354 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(noreturn) void __cdecl _exit(int ); } 
#line 355 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { void __cdecl abort(); } 
#line 358 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned __cdecl _set_abort_behavior(unsigned , unsigned ); } 
#line 367 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __int64 __cdecl _abs64(__int64); } 
#line 398 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl atexit(void (__cdecl *)(void)); } 
#line 405 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl atoi(const char * ); } 
#line 406 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl _atoi_l(const char * , _locale_t ); } 
#line 407 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { long __cdecl atol(const char * ); } 
#line 408 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { long __cdecl _atol_l(const char * , _locale_t ); } 
#line 412 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { void *__cdecl bsearch_s(const void * , const void * , rsize_t , rsize_t , int (__cdecl * )(void *, const void *, const void *), void * ); } 
#line 416 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { void *__cdecl bsearch(const void * , const void * , size_t , size_t , int (__cdecl * )(const void *, const void *)); } 
#line 421 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { void __cdecl qsort_s(void * , rsize_t , rsize_t , int (__cdecl * )(void *, const void *, const void *), void * ); } 
#line 425 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { void __cdecl qsort(void * , size_t , size_t , int (__cdecl * )(const void *, const void *)); } 
#line 429 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned short __cdecl _byteswap_ushort(unsigned short ); } 
#line 430 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned long __cdecl _byteswap_ulong(unsigned long ); } 
#line 431 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned __int64 __cdecl _byteswap_uint64(unsigned __int64 ); } 
#line 432 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { div_t __cdecl div(int , int ); } 
#line 433 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { char *__cdecl getenv(const char * ); } 
#line 435 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl getenv_s(size_t * , char * , rsize_t , const char * ); } 
#line 437 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl getenv_s ( size_t * _ReturnSize, char ( & _Dest ) [ _Size ], const char * _VarName ) throw ( ) { return getenv_s ( _ReturnSize, _Dest, _Size, _VarName ); }
#line 443 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _dupenv_s(char ** , size_t * , const char * ); } 
#line 449 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _itoa_s(int , char * , size_t , int ); } 
#line 450 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _itoa_s ( int _Value, char ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _itoa_s ( _Value, _Dest, _Size, _Radix ); }
#line 451 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { char *__cdecl _itoa(int , char * , int ); } 
#line 452 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _i64toa_s(__int64 , char * , size_t , int ); } 
#line 453 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { char *__cdecl _i64toa(__int64 , char * , int ); } 
#line 454 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _ui64toa_s(unsigned __int64 , char * , size_t , int ); } 
#line 455 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { char *__cdecl _ui64toa(unsigned __int64 , char * , int ); } 
#line 456 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __int64 __cdecl _atoi64(const char * ); } 
#line 457 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __int64 __cdecl _atoi64_l(const char * , _locale_t ); } 
#line 458 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __int64 __cdecl _strtoi64(const char * , char ** , int ); } 
#line 459 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __int64 __cdecl _strtoi64_l(const char * , char ** , int , _locale_t ); } 
#line 460 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned __int64 __cdecl _strtoui64(const char * , char ** , int ); } 
#line 461 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned __int64 __cdecl _strtoui64_l(const char * , char ** , int , _locale_t ); } 
#line 462 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { ldiv_t __cdecl ldiv(long , long ); } 
#line 463 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { lldiv_t __cdecl lldiv(__int64 , __int64 ); } 
#line 467 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
inline long abs(long _X) 
#line 468 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
{ 
#line 469 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
return labs(_X); 
#line 470 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
} 
#line 471 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
inline __int64 abs(__int64 _X) 
#line 472 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
{ 
#line 473 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
return llabs(_X); 
#line 474 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
} 
#line 475 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
inline ldiv_t div(long _A1, long _A2) 
#line 476 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
{ 
#line 477 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
return ldiv(_A1, _A2); 
#line 478 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
} 
#line 479 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
inline lldiv_t div(__int64 _A1, __int64 _A2) 
#line 480 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
{ 
#line 481 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
return lldiv(_A1, _A2); 
#line 482 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
} 
#line 485 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _ltoa_s(long , char * , size_t , int ); } 
#line 486 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ltoa_s ( long _Value, char ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _ltoa_s ( _Value, _Dest, _Size, _Radix ); }
#line 487 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { char *__cdecl _ltoa(long , char * , int ); } 
#line 488 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl mblen(const char * , size_t ); } 
#line 489 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl _mblen_l(const char * , size_t , _locale_t ); } 
#line 490 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { size_t __cdecl _mbstrlen(const char * ); } 
#line 491 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { size_t __cdecl _mbstrlen_l(const char * , _locale_t ); } 
#line 492 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { size_t __cdecl _mbstrnlen(const char * , size_t ); } 
#line 493 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { size_t __cdecl _mbstrnlen_l(const char * , size_t , _locale_t ); } 
#line 494 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl mbtowc(__wchar_t * , const char * , size_t ); } 
#line 495 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl _mbtowc_l(__wchar_t * , const char * , size_t , _locale_t ); } 
#line 496 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl mbstowcs_s(size_t * , __wchar_t * , size_t , const char * , size_t ); } 
#line 497 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl mbstowcs_s ( size_t * _PtNumOfCharConverted, wchar_t ( & _Dest ) [ _Size ], const char * _Source, size_t _MaxCount ) throw ( ) { return mbstowcs_s ( _PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount ); }
#line 498 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { size_t __cdecl mbstowcs(__wchar_t * , const char * , size_t ); } 
#line 500 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _mbstowcs_s_l(size_t * , __wchar_t * , size_t , const char * , size_t , _locale_t ); } 
#line 501 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _mbstowcs_s_l ( size_t * _PtNumOfCharConverted, wchar_t ( & _Dest ) [ _Size ], const char * _Source, size_t _MaxCount, _locale_t _Locale ) throw ( ) { return _mbstowcs_s_l ( _PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount, _Locale ); }
#line 502 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { size_t __cdecl _mbstowcs_l(__wchar_t * , const char * , size_t , _locale_t ); } 
#line 504 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl rand(); } 
#line 509 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl _set_error_mode(int ); } 
#line 511 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { void __cdecl srand(unsigned ); } 
#line 512 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { double __cdecl strtod(const char * , char ** ); } 
#line 513 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { double __cdecl _strtod_l(const char * , char ** , _locale_t ); } 
#line 514 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { long __cdecl strtol(const char * , char ** , int ); } 
#line 515 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { long __cdecl _strtol_l(const char * , char ** , int , _locale_t ); } 
#line 516 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned long __cdecl strtoul(const char * , char ** , int ); } 
#line 517 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned long __cdecl _strtoul_l(const char * , char ** , int , _locale_t ); } 
#line 520 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl system(const char * ); } 
#line 522 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _ultoa_s(unsigned long , char * , size_t , int ); } 
#line 523 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ultoa_s ( unsigned long _Value, char ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _ultoa_s ( _Value, _Dest, _Size, _Radix ); }
#line 524 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { char *__cdecl _ultoa(unsigned long , char * , int ); } 
#line 525 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl wctomb(char * , __wchar_t ); } 
#line 526 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl _wctomb_l(char * , __wchar_t , _locale_t ); } 
#line 528 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl wctomb_s(int * , char * , rsize_t , __wchar_t ); } 
#line 530 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _wctomb_s_l(int * , char * , size_t , __wchar_t , _locale_t ); } 
#line 531 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl wcstombs_s(size_t * , char * , size_t , const __wchar_t * , size_t ); } 
#line 532 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl wcstombs_s ( size_t * _PtNumOfCharConverted, char ( & _Dest ) [ _Size ], const wchar_t * _Source, size_t _MaxCount ) throw ( ) { return wcstombs_s ( _PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount ); }
#line 533 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { size_t __cdecl wcstombs(char * , const __wchar_t * , size_t ); } 
#line 534 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _wcstombs_s_l(size_t * , char * , size_t , const __wchar_t * , size_t , _locale_t ); } 
#line 535 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _wcstombs_s_l ( size_t * _PtNumOfCharConverted, char ( & _Dest ) [ _Size ], const wchar_t * _Source, size_t _MaxCount, _locale_t _Locale ) throw ( ) { return _wcstombs_s_l ( _PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount, _Locale ); }
#line 536 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { size_t __cdecl _wcstombs_l(char * , const __wchar_t * , size_t , _locale_t ); } 
#line 598 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(noalias) __declspec(restrict) void *__cdecl calloc(size_t , size_t ); } 
#line 599 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(noalias) void __cdecl free(void * ); } 
#line 600 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(noalias) __declspec(restrict) void *__cdecl malloc(size_t ); } 
#line 602 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(noalias) __declspec(restrict) void *__cdecl realloc(void * , size_t ); } 
#line 604 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(noalias) __declspec(restrict) void *__cdecl _recalloc(void * , size_t , size_t ); } 
#line 605 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(noalias) void __cdecl _aligned_free(void * ); } 
#line 606 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_malloc(size_t , size_t ); } 
#line 607 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_offset_malloc(size_t , size_t , size_t ); } 
#line 609 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_realloc(void * , size_t , size_t ); } 
#line 611 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_recalloc(void * , size_t , size_t , size_t ); } 
#line 613 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_offset_realloc(void * , size_t , size_t , size_t ); } 
#line 615 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_offset_recalloc(void * , size_t , size_t , size_t , size_t ); } 
#line 616 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { size_t __cdecl _aligned_msize(void * , size_t , size_t ); } 
#line 643 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _itow_s(int , __wchar_t * , size_t , int ); } 
#line 644 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _itow_s ( int _Value, wchar_t ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _itow_s ( _Value, _Dest, _Size, _Radix ); }
#line 645 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __wchar_t *__cdecl _itow(int , __wchar_t * , int ); } 
#line 646 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _ltow_s(long , __wchar_t * , size_t , int ); } 
#line 647 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ltow_s ( long _Value, wchar_t ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _ltow_s ( _Value, _Dest, _Size, _Radix ); }
#line 648 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __wchar_t *__cdecl _ltow(long , __wchar_t * , int ); } 
#line 649 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _ultow_s(unsigned long , __wchar_t * , size_t , int ); } 
#line 650 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ultow_s ( unsigned long _Value, wchar_t ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _ultow_s ( _Value, _Dest, _Size, _Radix ); }
#line 651 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __wchar_t *__cdecl _ultow(unsigned long , __wchar_t * , int ); } 
#line 652 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { double __cdecl wcstod(const __wchar_t * , __wchar_t ** ); } 
#line 653 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { double __cdecl _wcstod_l(const __wchar_t * , __wchar_t ** , _locale_t ); } 
#line 654 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { long __cdecl wcstol(const __wchar_t * , __wchar_t ** , int ); } 
#line 655 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { long __cdecl _wcstol_l(const __wchar_t * , __wchar_t ** , int , _locale_t ); } 
#line 656 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned long __cdecl wcstoul(const __wchar_t * , __wchar_t ** , int ); } 
#line 657 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned long __cdecl _wcstoul_l(const __wchar_t * , __wchar_t ** , int , _locale_t ); } 
#line 658 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __wchar_t *__cdecl _wgetenv(const __wchar_t * ); } 
#line 659 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _wgetenv_s(size_t * , __wchar_t * , size_t , const __wchar_t * ); } 
#line 660 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _wgetenv_s ( size_t * _ReturnSize, wchar_t ( & _Dest ) [ _Size ], const wchar_t * _VarName ) throw ( ) { return _wgetenv_s ( _ReturnSize, _Dest, _Size, _VarName ); }
#line 667 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _wdupenv_s(__wchar_t ** , size_t * , const __wchar_t * ); } 
#line 675 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl _wsystem(const __wchar_t * ); } 
#line 677 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { double __cdecl _wtof(const __wchar_t * ); } 
#line 678 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { double __cdecl _wtof_l(const __wchar_t * , _locale_t ); } 
#line 679 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl _wtoi(const __wchar_t * ); } 
#line 680 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl _wtoi_l(const __wchar_t * , _locale_t ); } 
#line 681 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { long __cdecl _wtol(const __wchar_t * ); } 
#line 682 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { long __cdecl _wtol_l(const __wchar_t * , _locale_t ); } 
#line 684 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _i64tow_s(__int64 , __wchar_t * , size_t , int ); } 
#line 685 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __wchar_t *__cdecl _i64tow(__int64 , __wchar_t * , int ); } 
#line 686 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _ui64tow_s(unsigned __int64 , __wchar_t * , size_t , int ); } 
#line 687 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __wchar_t *__cdecl _ui64tow(unsigned __int64 , __wchar_t * , int ); } 
#line 688 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __int64 __cdecl _wtoi64(const __wchar_t * ); } 
#line 689 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __int64 __cdecl _wtoi64_l(const __wchar_t * , _locale_t ); } 
#line 690 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __int64 __cdecl _wcstoi64(const __wchar_t * , __wchar_t ** , int ); } 
#line 691 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __int64 __cdecl _wcstoi64_l(const __wchar_t * , __wchar_t ** , int , _locale_t ); } 
#line 692 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned __int64 __cdecl _wcstoui64(const __wchar_t * , __wchar_t ** , int ); } 
#line 693 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned __int64 __cdecl _wcstoui64_l(const __wchar_t * , __wchar_t ** , int , _locale_t ); } 
#line 713 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { char *__cdecl _fullpath(char * , const char * , size_t ); } 
#line 721 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _ecvt_s(char * , size_t , double , int , int * , int * ); } 
#line 722 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ecvt_s ( char ( & _Dest ) [ _Size ], double _Value, int _NumOfDigits, int * _PtDec, int * _PtSign ) throw ( ) { return _ecvt_s ( _Dest, _Size, _Value, _NumOfDigits, _PtDec, _PtSign ); }
#line 723 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { char *__cdecl _ecvt(double , int , int * , int * ); } 
#line 724 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _fcvt_s(char * , size_t , double , int , int * , int * ); } 
#line 725 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _fcvt_s ( char ( & _Dest ) [ _Size ], double _Value, int _NumOfDigits, int * _PtDec, int * _PtSign ) throw ( ) { return _fcvt_s ( _Dest, _Size, _Value, _NumOfDigits, _PtDec, _PtSign ); }
#line 726 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { char *__cdecl _fcvt(double , int , int * , int * ); } 
#line 727 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _gcvt_s(char * , size_t , double , int ); } 
#line 728 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _gcvt_s ( char ( & _Dest ) [ _Size ], double _Value, int _NumOfDigits ) throw ( ) { return _gcvt_s ( _Dest, _Size, _Value, _NumOfDigits ); }
#line 729 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { char *__cdecl _gcvt(double , int , char * ); } 
#line 731 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl _atodbl(_CRT_DOUBLE * , char * ); } 
#line 732 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl _atoldbl(_LDOUBLE * , char * ); } 
#line 733 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl _atoflt(_CRT_FLOAT * , char * ); } 
#line 734 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl _atodbl_l(_CRT_DOUBLE * , char * , _locale_t ); } 
#line 735 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl _atoldbl_l(_LDOUBLE * , char * , _locale_t ); } 
#line 736 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl _atoflt_l(_CRT_FLOAT * , char * , _locale_t ); } 
#line 737 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned long __cdecl _lrotl(unsigned long , int ); } 
#line 738 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned long __cdecl _lrotr(unsigned long , int ); } 
#line 739 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _makepath_s(char * , size_t , const char * , const char * , const char * , const char * ); } 
#line 741 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _makepath_s ( char ( & _Path ) [ _Size ], const char * _Drive, const char * _Dir, const char * _Filename, const char * _Ext ) throw ( ) { return _makepath_s ( _Path, _Size, _Drive, _Dir, _Filename, _Ext ); }
#line 742 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { void __cdecl _makepath(char * , const char * , const char * , const char * , const char * ); } 
#line 769 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { _onexit_t __cdecl _onexit(_onexit_t ); } 
#line 774 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { void __cdecl perror(const char * ); } 
#line 777 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
#pragma warning (push)
#pragma warning (disable:6540)
extern "C" { int __cdecl _putenv(const char * ); } 
#line 780 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _putenv_s(const char * , const char * ); } 
#line 781 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned __cdecl _rotl(unsigned , int ); } 
#line 782 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned __int64 __cdecl _rotl64(unsigned __int64 , int ); } 
#line 783 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned __cdecl _rotr(unsigned , int ); } 
#line 784 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned __int64 __cdecl _rotr64(unsigned __int64 , int ); } 
#pragma warning (pop)
#line 787 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _searchenv_s(const char * , const char * , char * , size_t ); } 
#line 788 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _searchenv_s ( const char * _Filename, const char * _EnvVar, char ( & _ResultPath ) [ _Size ] ) throw ( ) { return _searchenv_s ( _Filename, _EnvVar, _ResultPath, _Size ); }
#line 789 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { void __cdecl _searchenv(const char * , const char * , char * ); } 
#line 791 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { void __cdecl _splitpath(const char * , char * , char * , char * , char * ); } 
#line 792 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _splitpath_s(const char * , char * , size_t , char * , size_t , char * , size_t , char * , size_t ); } 
#line 797 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template < size_t _DriveSize, size_t _DirSize, size_t _NameSize, size_t _ExtSize > inline errno_t __cdecl _splitpath_s ( const char * _Dest, char ( & _Drive ) [ _DriveSize ], char ( & _Dir ) [ _DirSize ], char ( & _Name ) [ _NameSize ], char ( & _Ext ) [ _ExtSize ] ) throw ( ) { return _splitpath_s ( _Dest, _Drive, _DriveSize, _Dir, _DirSize, _Name, _NameSize, _Ext, _ExtSize ); }
#line 799 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { void __cdecl _swab(char * , char * , int ); } 
#line 810 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __wchar_t *__cdecl _wfullpath(__wchar_t * , const __wchar_t * , size_t ); } 
#line 816 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _wmakepath_s(__wchar_t * , size_t , const __wchar_t * , const __wchar_t * , const __wchar_t * , const __wchar_t * ); } 
#line 818 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _wmakepath_s ( wchar_t ( & _ResultPath ) [ _Size ], const wchar_t * _Drive, const wchar_t * _Dir, const wchar_t * _Filename, const wchar_t * _Ext ) throw ( ) { return _wmakepath_s ( _ResultPath, _Size, _Drive, _Dir, _Filename, _Ext ); }
#line 819 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { void __cdecl _wmakepath(__wchar_t * , const __wchar_t * , const __wchar_t * , const __wchar_t * , const __wchar_t * ); } 
#line 822 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { void __cdecl _wperror(const __wchar_t * ); } 
#line 824 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl _wputenv(const __wchar_t * ); } 
#line 825 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _wputenv_s(const __wchar_t * , const __wchar_t * ); } 
#line 826 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _wsearchenv_s(const __wchar_t * , const __wchar_t * , __wchar_t * , size_t ); } 
#line 827 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _wsearchenv_s ( const wchar_t * _Filename, const wchar_t * _EnvVar, wchar_t ( & _ResultPath ) [ _Size ] ) throw ( ) { return _wsearchenv_s ( _Filename, _EnvVar, _ResultPath, _Size ); }
#line 828 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { void __cdecl _wsearchenv(const __wchar_t * , const __wchar_t * , __wchar_t * ); } 
#line 829 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { void __cdecl _wsplitpath(const __wchar_t * , __wchar_t * , __wchar_t * , __wchar_t * , __wchar_t * ); } 
#line 830 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _wsplitpath_s(const __wchar_t * , __wchar_t * , size_t , __wchar_t * , size_t , __wchar_t * , size_t , __wchar_t * , size_t ); } 
#line 835 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
template < size_t _DriveSize, size_t _DirSize, size_t _NameSize, size_t _ExtSize > inline errno_t __cdecl _wsplitpath_s ( const wchar_t * _Path, wchar_t ( & _Drive ) [ _DriveSize ], wchar_t ( & _Dir ) [ _DirSize ], wchar_t ( & _Name ) [ _NameSize ], wchar_t ( & _Ext ) [ _ExtSize ] ) throw ( ) { return _wsplitpath_s ( _Path, _Drive, _DriveSize, _Dir, _DirSize, _Name, _NameSize, _Ext, _ExtSize ); }
#line 841 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode in" "stead. See online help for details.")) void __cdecl _seterrormode(int ); } 
#line 842 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. S" "ee online help for details.")) void __cdecl _beep(unsigned , unsigned ); } 
#line 843 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. " "See online help for details.")) void __cdecl _sleep(unsigned long ); } 
#line 862 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
#pragma warning(push)
#pragma warning(disable: 4141)
extern "C" { char *__cdecl ecvt(double , int , int * , int * ); } 
#line 865 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { char *__cdecl fcvt(double , int , int * , int * ); } 
#line 866 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { char *__cdecl gcvt(double , int , char * ); } 
#line 867 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { char *__cdecl itoa(int , char * , int ); } 
#line 868 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { char *__cdecl ltoa(long , char * , int ); } 
#line 869 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl putenv(const char * ); } 
#line 870 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { void __cdecl swab(char * , char * , int ); } 
#line 871 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
extern "C" { char *__cdecl ultoa(unsigned long , char * , int ); } 
#pragma warning(pop)
extern "C" { _onexit_t __cdecl onexit(_onexit_t ); } 
#line 194 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
#pragma detect_mismatch("_MSC_VER", "1600")
#line 199 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
#pragma detect_mismatch("_ITERATOR_DEBUG_LEVEL", "0")
#line 43 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\use_ansi.h"
#pragma comment(lib, "libcpmt")
#line 884 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdlib.h"
#pragma pack ( pop )
#line 8 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
#pragma pack ( push, 8 )
#line 535 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
namespace std { 
#line 536 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
typedef bool _Bool; 
#line 537 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
}
#line 553 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
typedef __int64 _Longlong; 
#line 554 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
typedef unsigned __int64 _ULonglong; 
#line 576 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
typedef unsigned short char16_t; 
#line 577 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
typedef unsigned char32_t; 
#line 591 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
namespace std { 
#line 592 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
enum _Uninitialized { 
#line 594 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
_Noinit
#line 595 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
}; 
#line 599 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
#pragma warning(push)
#pragma warning(disable:4412)
class _Lockit { 
#line 624 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
public: __thiscall _Lockit(); 
#line 625 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
explicit __thiscall _Lockit(int); 
#line 626 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
__thiscall ~_Lockit(); 
#line 629 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
static void __cdecl _Lockit_ctor(int); 
#line 630 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
static void __cdecl _Lockit_dtor(int); 
#line 633 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
private: static void __cdecl _Lockit_ctor(_Lockit *); 
#line 634 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
static void __cdecl _Lockit_ctor(_Lockit *, int); 
#line 635 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
static void __cdecl _Lockit_dtor(_Lockit *); 
#line 637 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
_Lockit(const _Lockit &); 
#line 638 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
_Lockit &operator=(const _Lockit &); 
#line 640 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
int _Locktype; 
#line 655 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
}; 
#line 742 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
class _Mutex { 
#line 773 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
public: __thiscall _Mutex(_Uninitialized) 
#line 774 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
{ 
#line 775 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
} 
#line 777 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
__thiscall _Mutex(); 
#line 778 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
__thiscall ~_Mutex(); 
#line 779 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
void __thiscall _Lock(); 
#line 780 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
void __thiscall _Unlock(); 
#line 784 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
private: static void __cdecl _Mutex_ctor(_Mutex *); 
#line 785 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
static void __cdecl _Mutex_dtor(_Mutex *); 
#line 786 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
static void __cdecl _Mutex_Lock(_Mutex *); 
#line 787 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
static void __cdecl _Mutex_Unlock(_Mutex *); 
#line 789 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
_Mutex(const _Mutex &); 
#line 790 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
_Mutex &operator=(const _Mutex &); 
#line 791 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
void *_Mtx; 
#line 802 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
}; 
#line 804 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
class _Init_locks { 
#line 820 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
public: __thiscall _Init_locks(); 
#line 821 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
__thiscall ~_Init_locks(); 
#line 825 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
private: static void __cdecl _Init_locks_ctor(_Init_locks *); 
#line 826 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
static void __cdecl _Init_locks_dtor(_Init_locks *); 
#line 837 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
}; 
#line 839 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
#pragma warning(pop)
}
#line 849 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
void __cdecl _Atexit(void (__cdecl *)(void)); 
#line 851 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
typedef int _Mbstatet; 
#line 852 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
typedef unsigned long _Uint32t; 
#line 860 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\yvals.h"
#pragma pack ( pop )
#line 18 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
namespace std { 
#line 19 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::acosf;using ::asinf;
#line 20 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::atanf;using ::atan2f;using ::ceilf;
#line 21 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::cosf;using ::coshf;using ::expf;
#line 22 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::fabsf;using ::floorf;using ::fmodf;
#line 23 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::frexpf;using ::ldexpf;using ::logf;
#line 24 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::log10f;using ::modff;using ::powf;
#line 25 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::sinf;using ::sinhf;using ::sqrtf;
#line 26 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::tanf;using ::tanhf;
#line 28 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::acosl;using ::asinl;
#line 29 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::atanl;using ::atan2l;using ::ceill;
#line 30 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::cosl;using ::coshl;using ::expl;
#line 31 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::fabsl;using ::floorl;using ::fmodl;
#line 32 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::frexpl;using ::ldexpl;using ::logl;
#line 33 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::log10l;using ::modfl;using ::powl;
#line 34 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::sinl;using ::sinhl;using ::sqrtl;
#line 35 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::tanl;using ::tanhl;
#line 37 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::abs;
#line 39 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::acos;using ::asin;
#line 40 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::atan;using ::atan2;using ::ceil;
#line 41 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::cos;using ::cosh;using ::exp;
#line 42 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::fabs;using ::floor;using ::fmod;
#line 43 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::frexp;using ::ldexp;using ::log;
#line 44 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::log10;using ::modf;using ::pow;
#line 45 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::sin;using ::sinh;using ::sqrt;
#line 46 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
using ::tan;using ::tanh;
#line 47 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cmath"
}
#line 18 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cstdlib"
namespace std { 
#line 19 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cstdlib"
using ::size_t;using ::div_t;using ::ldiv_t;
#line 21 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cstdlib"
using ::abort;using ::abs;using ::abs;using ::abs;using ::abs;using ::abs;using ::abs;using ::atexit;
#line 22 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cstdlib"
using ::atof;using ::atoi;using ::atol;
#line 23 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cstdlib"
using ::bsearch;using ::calloc;using ::div;
#line 24 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cstdlib"
using ::exit;using ::free;using ::getenv;
#line 25 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cstdlib"
using ::labs;using ::ldiv;using ::malloc;
#line 26 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cstdlib"
using ::mblen;using ::mbstowcs;using ::mbtowc;
#line 27 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cstdlib"
using ::qsort;using ::rand;using ::realloc;
#line 28 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cstdlib"
using ::srand;using ::strtod;using ::strtol;
#line 29 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cstdlib"
using ::strtoul;using ::system;
#line 30 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cstdlib"
using ::wcstombs;using ::wctomb;
#line 32 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cstdlib"
using ::lldiv_t;
#line 34 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cstdlib"
using ::llabs;using ::lldiv;
#line 35 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\cstdlib"
}
#line 2379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline int signbit(long double a) 
#line 2380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return __signbitl(a); 
#line 2382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline int signbit(double a) 
#line 2396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return __signbit(a); 
#line 2398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline int signbit(float a) 
#line 2412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return __signbitf(a); 
#line 2414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline int isinf(long double a) 
#line 2417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return __isinfl(a); 
#line 2419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline int isinf(double a) 
#line 2433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return __isinf(a); 
#line 2435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline int isinf(float a) 
#line 2449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return __isinff(a); 
#line 2451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline int isnan(long double a) 
#line 2454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return __isnanl(a); 
#line 2456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline int isnan(double a) 
#line 2469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return __isnan(a); 
#line 2471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline int isnan(float a) 
#line 2484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return __isnanf(a); 
#line 2486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline int isfinite(long double a) 
#line 2489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return __finitel(a); 
#line 2491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline int isfinite(double a) 
#line 2505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return __finite(a); 
#line 2507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline int isfinite(float a) 
#line 2521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return __finitef(a); 
#line 2523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
template< class T> inline T _Pow_int(T, int); 
#line 2526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline __int64 abs(__int64); 
#line 2534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline long __cdecl abs(long); 
#line 2535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl abs(float); 
#line 2536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline double __cdecl abs(double); 
#line 2537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl fabs(float); 
#line 2538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl ceil(float); 
#line 2539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl floor(float); 
#line 2540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl sqrt(float); 
#line 2541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl pow(float, float); 
#line 2542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl pow(float, int); 
#line 2543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline double __cdecl pow(double, int); 
#line 2544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl log(float); 
#line 2545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl log10(float); 
#line 2546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl fmod(float, float); 
#line 2547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl modf(float, float *); 
#line 2548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl exp(float); 
#line 2549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl frexp(float, int *); 
#line 2550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl ldexp(float, int); 
#line 2551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl asin(float); 
#line 2552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl sin(float); 
#line 2553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl sinh(float); 
#line 2554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl acos(float); 
#line 2555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl cos(float); 
#line 2556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl cosh(float); 
#line 2557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl atan(float); 
#line 2558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl atan2(float, float); 
#line 2559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl tan(float); 
#line 2560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
inline float __cdecl tanh(float); 
#line 2566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float logb(float a) 
#line 2567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return logbf(a); 
#line 2569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline int ilogb(float a) 
#line 2572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return ilogbf(a); 
#line 2574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float scalbn(float a, int b) 
#line 2577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return scalbnf(a, b); 
#line 2579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float scalbln(float a, long b) 
#line 2582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return scalblnf(a, b); 
#line 2584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float exp2(float a) 
#line 2587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return exp2f(a); 
#line 2589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float exp10(float a) 
#line 2592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return exp10f(a); 
#line 2594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float expm1(float a) 
#line 2597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return expm1f(a); 
#line 2599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float log2(float a) 
#line 2602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return log2f(a); 
#line 2604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float log1p(float a) 
#line 2607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return log1pf(a); 
#line 2609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float rsqrt(float a) 
#line 2612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return rsqrtf(a); 
#line 2614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float acosh(float a) 
#line 2617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return acoshf(a); 
#line 2619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float asinh(float a) 
#line 2622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return asinhf(a); 
#line 2624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float atanh(float a) 
#line 2627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return atanhf(a); 
#line 2629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float hypot(float a, float b) 
#line 2632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return hypotf(a, b); 
#line 2634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float cbrt(float a) 
#line 2637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return cbrtf(a); 
#line 2639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float rcbrt(float a) 
#line 2642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return rcbrtf(a); 
#line 2644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float sinpi(float a) 
#line 2647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return sinpif(a); 
#line 2649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float cospi(float a) 
#line 2652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return cospif(a); 
#line 2654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline void sincos(float a, float *sptr, float *cptr) 
#line 2657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
sincosf(a, sptr, cptr); 
#line 2659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float j0(float a) 
#line 2662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return j0f(a); 
#line 2664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float j1(float a) 
#line 2667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return j1f(a); 
#line 2669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float jn(int n, float a) 
#line 2672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return jnf(n, a); 
#line 2674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float y0(float a) 
#line 2677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return y0f(a); 
#line 2679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float y1(float a) 
#line 2682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return y1f(a); 
#line 2684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float yn(int n, float a) 
#line 2687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return ynf(n, a); 
#line 2689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float erf(float a) 
#line 2692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return erff(a); 
#line 2694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float erfinv(float a) 
#line 2697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return erfinvf(a); 
#line 2699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float erfc(float a) 
#line 2702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return erfcf(a); 
#line 2704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float erfcinv(float a) 
#line 2707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return erfcinvf(a); 
#line 2709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float erfcx(float a) 
#line 2712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return erfcxf(a); 
#line 2714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float lgamma(float a) 
#line 2717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return lgammaf(a); 
#line 2719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float tgamma(float a) 
#line 2722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return tgammaf(a); 
#line 2724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float copysign(float a, float b) 
#line 2727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return copysignf(a, b); 
#line 2729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline double copysign(double a, float b) 
#line 2732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return copysign(a, (double)b); 
#line 2734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float copysign(float a, double b) 
#line 2737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return copysignf(a, (float)b); 
#line 2739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float nextafter(float a, float b) 
#line 2742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return nextafterf(a, b); 
#line 2744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float remainder(float a, float b) 
#line 2747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return remainderf(a, b); 
#line 2749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float remquo(float a, float b, int *quo) 
#line 2752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return remquof(a, b, quo); 
#line 2754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float round(float a) 
#line 2757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return roundf(a); 
#line 2759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline long lround(float a) 
#line 2762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return lroundf(a); 
#line 2764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline __int64 llround(float a) 
#line 2767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return llroundf(a); 
#line 2769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float trunc(float a) 
#line 2772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return truncf(a); 
#line 2774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float rint(float a) 
#line 2777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return rintf(a); 
#line 2779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline long lrint(float a) 
#line 2782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return lrintf(a); 
#line 2784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline __int64 llrint(float a) 
#line 2787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return llrintf(a); 
#line 2789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float nearbyint(float a) 
#line 2792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return nearbyintf(a); 
#line 2794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float fdim(float a, float b) 
#line 2797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return fdimf(a, b); 
#line 2799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float fma(float a, float b, float c) 
#line 2802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return fmaf(a, b, c); 
#line 2804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float fmax(float a, float b) 
#line 2807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return fmaxf(a, b); 
#line 2809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float fmin(float a, float b) 
#line 2812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return fminf(a, b); 
#line 2814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline unsigned min(unsigned a, unsigned b) 
#line 2817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return umin(a, b); 
#line 2819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline unsigned min(int a, unsigned b) 
#line 2822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return umin((unsigned)a, b); 
#line 2824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline unsigned min(unsigned a, int b) 
#line 2827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return umin(a, (unsigned)b); 
#line 2829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline __int64 min(__int64 a, __int64 b) 
#line 2832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return llmin(a, b); 
#line 2834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline unsigned __int64 min(unsigned __int64 a, unsigned __int64 b) 
#line 2837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return ullmin(a, b); 
#line 2839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline unsigned __int64 min(__int64 a, unsigned __int64 b) 
#line 2842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return ullmin((unsigned __int64)a, b); 
#line 2844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline unsigned __int64 min(unsigned __int64 a, __int64 b) 
#line 2847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return ullmin(a, (unsigned __int64)b); 
#line 2849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float min(float a, float b) 
#line 2852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return fminf(a, b); 
#line 2854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline double min(double a, double b) 
#line 2857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return fmin(a, b); 
#line 2859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline double min(float a, double b) 
#line 2862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return fmin((double)a, b); 
#line 2864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline double min(double a, float b) 
#line 2867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return fmin(a, (double)b); 
#line 2869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline unsigned max(unsigned a, unsigned b) 
#line 2872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return umax(a, b); 
#line 2874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline unsigned max(int a, unsigned b) 
#line 2877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return umax((unsigned)a, b); 
#line 2879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline unsigned max(unsigned a, int b) 
#line 2882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return umax(a, (unsigned)b); 
#line 2884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline __int64 max(__int64 a, __int64 b) 
#line 2887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return llmax(a, b); 
#line 2889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline unsigned __int64 max(unsigned __int64 a, unsigned __int64 b) 
#line 2892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return ullmax(a, b); 
#line 2894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline unsigned __int64 max(__int64 a, unsigned __int64 b) 
#line 2897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return ullmax((unsigned __int64)a, b); 
#line 2899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline unsigned __int64 max(unsigned __int64 a, __int64 b) 
#line 2902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return ullmax(a, (unsigned __int64)b); 
#line 2904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline float max(float a, float b) 
#line 2907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return fmaxf(a, b); 
#line 2909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline double max(double a, double b) 
#line 2912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return fmax(a, b); 
#line 2914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline double max(float a, double b) 
#line 2917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return fmax((double)a, b); 
#line 2919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 2921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
static __inline double max(double a, float b) 
#line 2922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
{ 
#line 2923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
return fmax(a, (double)b); 
#line 2924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
} 
#line 73 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_surface_types.h"
template< class T, int dim = 1> 
#line 74 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_surface_types.h"
struct surface : public surfaceReference { 
#line 76 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_surface_types.h"
surface() 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_surface_types.h"
{ 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< T> (); 
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_surface_types.h"
} 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_surface_types.h"
surface(cudaChannelFormatDesc desc) 
#line 82 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_surface_types.h"
{ 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_surface_types.h"
(channelDesc) = desc; 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_surface_types.h"
} 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_surface_types.h"
}; 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_surface_types.h"
template< int dim> 
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_surface_types.h"
struct surface< void, dim>  : public surfaceReference { 
#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_surface_types.h"
surface() 
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_surface_types.h"
{ 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< void> (); 
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_surface_types.h"
} 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_surface_types.h"
}; 
#line 73 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
template< class T, int texType = 1, cudaTextureReadMode mode = cudaReadModeElementType> 
#line 74 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
struct texture : public textureReference { 
#line 76 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
texture(int norm = 0, cudaTextureFilterMode 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
fMode = cudaFilterModePoint, cudaTextureAddressMode 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
aMode = cudaAddressModeClamp) 
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
{ 
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
(normalized) = norm; 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
(filterMode) = fMode; 
#line 82 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
((addressMode)[0]) = aMode; 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
((addressMode)[1]) = aMode; 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
((addressMode)[2]) = aMode; 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
(channelDesc) = cudaCreateChannelDesc< T> (); 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
(sRGB) = 0; 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
} 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
texture(int norm, cudaTextureFilterMode 
#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
fMode, cudaTextureAddressMode 
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
aMode, cudaChannelFormatDesc 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
desc) 
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
{ 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
(normalized) = norm; 
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
(filterMode) = fMode; 
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
((addressMode)[0]) = aMode; 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
((addressMode)[1]) = aMode; 
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
((addressMode)[2]) = aMode; 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
(channelDesc) = desc; 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
(sRGB) = 0; 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
} 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\cuda_texture_types.h"
}; 
#line 1103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline int mulhi(int a, int b) 
#line 1104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
#line 1106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}







#line 1115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 1108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline unsigned mulhi(unsigned a, unsigned b) 
#line 1109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
#line 1111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}







#line 1120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 1113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline unsigned mulhi(int a, unsigned b) 
#line 1114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
#line 1116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}







#line 1125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 1118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline unsigned mulhi(unsigned a, int b) 
#line 1119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
#line 1121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}







#line 1130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 1123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline __int64 mul64hi(__int64 a, __int64 b) 
#line 1124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
#line 1126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}







#line 1135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 1128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline unsigned __int64 mul64hi(unsigned __int64 a, unsigned __int64 b) 
#line 1129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
#line 1131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}







#line 1140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 1133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline unsigned __int64 mul64hi(__int64 a, unsigned __int64 b) 
#line 1134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
#line 1136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}







#line 1145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 1138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline unsigned __int64 mul64hi(unsigned __int64 a, __int64 b) 
#line 1139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
#line 1141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}







#line 1150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 1143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline int float_as_int(float a) 
#line 1144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;
#line 1146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}







#line 1155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 1148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline float int_as_float(int a) 
#line 1149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;
#line 1151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}







#line 1160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 1153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline float saturate(float a) 
#line 1154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;
#line 1156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}







#line 1165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 1158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline int mul24(int a, int b) 
#line 1159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
#line 1161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}







#line 1170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 1163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline unsigned umul24(unsigned a, unsigned b) 
#line 1164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
#line 1166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}







#line 1175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 1168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline void trap() 
#line 1169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;
#line 1171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}







#line 1180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 1174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline void brkpt(int c = 0) 
#line 1175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;(void)c;
#line 1177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}







#line 1186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 1179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline void syncthreads() 
#line 1180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;
#line 1182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}







#line 1191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 1184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline void prof_trigger(int e) 
#line 1185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;(void)e;
#line 1202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}





































#line 1241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 1204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline void threadfence(bool global = true) 
#line 1205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;(void)global;
#line 1207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}







#line 1216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 1209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline int float2int(float a, cudaRoundMode mode = cudaRoundZero) 
#line 1210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 1215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}







#line 1224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 1217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline unsigned float2uint(float a, cudaRoundMode mode = cudaRoundZero) 
#line 1218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 1223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}







#line 1232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 1225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline float int2float(int a, cudaRoundMode mode = cudaRoundNearest) 
#line 1226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 1231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}







#line 1240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 1233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
static __inline float uint2float(unsigned a, cudaRoundMode mode = cudaRoundNearest) 
#line 1234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 1239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
exit(___);}







#line 1248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_functions.h"
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
static __inline int atomicAdd(int *address, int val) 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
exit(___);}







#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicAdd(unsigned *address, unsigned val) 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
exit(___);}







#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
static __inline int atomicSub(int *address, int val) 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
exit(___);}







#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicSub(unsigned *address, unsigned val) 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
exit(___);}







#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
static __inline int atomicExch(int *address, int val) 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
exit(___);}







#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicExch(unsigned *address, unsigned val) 
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
exit(___);}







#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
static __inline float atomicExch(float *address, float val) 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
exit(___);}







#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
static __inline int atomicMin(int *address, int val) 
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
exit(___);}







#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicMin(unsigned *address, unsigned val) 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
exit(___);}







#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
static __inline int atomicMax(int *address, int val) 
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
exit(___);}







#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicMax(unsigned *address, unsigned val) 
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
exit(___);}







#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicInc(unsigned *address, unsigned val) 
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
exit(___);}







#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicDec(unsigned *address, unsigned val) 
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
exit(___);}







#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
static __inline int atomicAnd(int *address, int val) 
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
exit(___);}







#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicAnd(unsigned *address, unsigned val) 
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
exit(___);}







#line 178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
#line 171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
static __inline int atomicOr(int *address, int val) 
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
exit(___);}







#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicOr(unsigned *address, unsigned val) 
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
exit(___);}







#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
static __inline int atomicXor(int *address, int val) 
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
exit(___);}







#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicXor(unsigned *address, unsigned val) 
#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
exit(___);}







#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
static __inline int atomicCAS(int *address, int compare, int val) 
#line 192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
exit(___);}







#line 203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
#line 196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicCAS(unsigned *address, unsigned compare, unsigned val) 
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
#line 199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
exit(___);}







#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_11_atomic_functions.h"
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_12_atomic_functions.h"
static __inline unsigned __int64 atomicAdd(unsigned __int64 *address, unsigned __int64 val) 
#line 82 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_12_atomic_functions.h"
exit(___);}







#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_12_atomic_functions.h"
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_12_atomic_functions.h"
static __inline unsigned __int64 atomicExch(unsigned __int64 *address, unsigned __int64 val) 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_12_atomic_functions.h"
exit(___);}







#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_12_atomic_functions.h"
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_12_atomic_functions.h"
static __inline unsigned __int64 atomicCAS(unsigned __int64 *address, unsigned __int64 compare, unsigned __int64 val) 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_12_atomic_functions.h"
exit(___);}







#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_12_atomic_functions.h"
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_12_atomic_functions.h"
static __inline bool any(bool cond) 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)cond;
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_12_atomic_functions.h"
exit(___);}







#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_12_atomic_functions.h"
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_12_atomic_functions.h"
static __inline bool all(bool cond) 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)cond;
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_12_atomic_functions.h"
exit(___);}







#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_12_atomic_functions.h"
#line 521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
static __inline double fma(double a, double b, double c, cudaRoundMode mode) 
#line 522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)c;(void)mode;
#line 527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
exit(___);}







#line 536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
#line 529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
static __inline double dmul(double a, double b, cudaRoundMode mode = cudaRoundNearest) 
#line 530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
#line 535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
exit(___);}







#line 544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
#line 537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
static __inline double dadd(double a, double b, cudaRoundMode mode = cudaRoundNearest) 
#line 538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
#line 543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
exit(___);}







#line 552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
#line 545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
static __inline int double2int(double a, cudaRoundMode mode = cudaRoundZero) 
#line 546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
exit(___);}







#line 560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
#line 553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
static __inline unsigned double2uint(double a, cudaRoundMode mode = cudaRoundZero) 
#line 554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
exit(___);}







#line 568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
#line 561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
static __inline __int64 double2ll(double a, cudaRoundMode mode = cudaRoundZero) 
#line 562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
exit(___);}







#line 576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
#line 569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
static __inline unsigned __int64 double2ull(double a, cudaRoundMode mode = cudaRoundZero) 
#line 570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
exit(___);}







#line 584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
#line 577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
static __inline double ll2double(__int64 a, cudaRoundMode mode = cudaRoundNearest) 
#line 578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
exit(___);}







#line 592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
#line 585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
static __inline double ull2double(unsigned __int64 a, cudaRoundMode mode = cudaRoundNearest) 
#line 586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
exit(___);}







#line 600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
#line 593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
static __inline double int2double(int a, cudaRoundMode mode = cudaRoundNearest) 
#line 594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
exit(___);}







#line 605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
#line 598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
static __inline double uint2double(unsigned a, cudaRoundMode mode = cudaRoundNearest) 
#line 599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
exit(___);}







#line 610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
#line 603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
static __inline double float2double(float a, cudaRoundMode mode = cudaRoundNearest) 
#line 604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
exit(___);}







#line 615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_13_double_functions.h"
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_20_atomic_functions.h"
static __inline float atomicAdd(float *address, float val) 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_20_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_20_atomic_functions.h"
exit(___);}







#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_20_atomic_functions.h"
#line 239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_20_intrinsics.h"
static __inline unsigned ballot(bool pred) 
#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_20_intrinsics.h"
exit(___);}







#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_20_intrinsics.h"
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_20_intrinsics.h"
static __inline int syncthreads_count(bool pred) 
#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_20_intrinsics.h"
exit(___);}







#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_20_intrinsics.h"
#line 249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_20_intrinsics.h"
static __inline bool syncthreads_and(bool pred) 
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_20_intrinsics.h"
exit(___);}







#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_20_intrinsics.h"
#line 254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_20_intrinsics.h"
static __inline bool syncthreads_or(bool pred) 
#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_20_intrinsics.h"
exit(___);}







#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\sm_20_intrinsics.h"
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf1Dread(T *res, surface< void, 1>  surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)s;(void)mode;
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline T 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}











#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf1Dread(T *res, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)mode;
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline signed char surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned char surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uchar1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uchar2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uchar4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned short surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ushort1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ushort2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ushort4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uint1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uint2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uint4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline __int64 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned __int64 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline longlong1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulonglong1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline longlong2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulonglong2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned long surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulong1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulong2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulong4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf2Dread(T *res, surface< void, 2>  surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)s;(void)mode;
#line 456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline T 
#line 459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}











#line 479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf2Dread(T *res, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)mode;
#line 472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline signed char surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned char surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uchar1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uchar2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uchar4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned short surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ushort1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ushort2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ushort4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uint1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uint2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uint4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline __int64 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned __int64 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline longlong1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulonglong1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline longlong2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulonglong2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned long surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulong1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulong2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulong4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf3Dread(T *res, surface< void, 3>  surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
#line 804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline T 
#line 807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}











#line 827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf3Dread(T *res, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline signed char surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned char surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uchar1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uchar2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uchar4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned short surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ushort1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ushort2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ushort4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uint1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uint2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uint4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline __int64 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned __int64 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline longlong1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulonglong1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline longlong2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulonglong2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned long surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulong1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulong2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulong4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 1144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf1DLayeredread(T *res, surface< void, 241>  surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
#line 1152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline T 
#line 1155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}











#line 1175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 1165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf1DLayeredread(T *res, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)mode;
#line 1168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline signed char surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned char surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uchar1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uchar2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uchar4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned short surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ushort1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ushort2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ushort4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uint1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uint2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uint4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline __int64 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned __int64 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline longlong1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulonglong1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline longlong2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulonglong2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned long surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulong1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulong2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulong4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 1492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf2DLayeredread(T *res, surface< void, 242>  surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
#line 1500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline T 
#line 1503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}











#line 1523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 1513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf2DLayeredread(T *res, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline signed char surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned char surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uchar1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uchar2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uchar4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned short surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ushort1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ushort2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ushort4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uint1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uint2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uint4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline __int64 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned __int64 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline longlong1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulonglong1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline longlong2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulonglong2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned long surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulong1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulong2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulong4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 1840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surfCubemapread(T *res, surface< void, 12>  surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
#line 1848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline T 
#line 1851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}











#line 1871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 1861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surfCubemapread(T *res, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline signed char surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned char surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uchar1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uchar2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uchar4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned short surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ushort1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ushort2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 1979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ushort4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 1995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 1995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uint1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uint2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uint4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline __int64 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned __int64 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline longlong1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulonglong1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline longlong2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulonglong2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned long surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulong1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulong2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulong4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 2189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surfCubemapLayeredread(T *res, surface< void, 252>  surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
#line 2197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline T 
#line 2200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}











#line 2220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 2210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surfCubemapLayeredread(T *res, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline signed char surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned char surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uchar1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uchar2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline char4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uchar4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned short surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ushort1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ushort2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline short4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ushort4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uint1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uint2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline int4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline uint4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline __int64 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned __int64 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline longlong1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulonglong1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline longlong2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulonglong2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline unsigned long surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulong1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulong2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline long4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline ulong4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template<> static __inline float4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}









#line 2512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 2538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf1Dwrite(T val, surface< void, 1>  surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)s;(void)mode;
#line 2557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}

























#line 2584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 2560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf1Dwrite(T val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(signed char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(unsigned char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(char1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(uchar1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(char2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(uchar2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(char4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(uchar4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(short val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(unsigned short val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(short1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(ushort1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(short2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(ushort2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(short4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(ushort4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(int val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(unsigned val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(int1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(uint1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(int2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(uint2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(int4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(uint4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(__int64 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(unsigned __int64 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(longlong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(ulonglong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(longlong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(ulonglong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(long val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(unsigned long val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(long1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(ulong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(long2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(ulong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(long4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(ulong4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(float val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(float1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(float2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1Dwrite(float4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 2820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf2Dwrite(T val, surface< void, 2>  surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)s;(void)mode;
#line 2839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}

























#line 2866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 2842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf2Dwrite(T val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(signed char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(unsigned char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(char1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(uchar1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(char2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(uchar2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(char4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(uchar4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(short val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(unsigned short val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(short1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(ushort1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(short2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(ushort2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(short4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(ushort4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(int val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(unsigned val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(int1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(uint1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(int2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(uint2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(int4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(uint4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(__int64 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(unsigned __int64 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(longlong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 2995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(ulonglong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(longlong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 2998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(ulonglong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(long val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(unsigned long val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(long1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(ulong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(long2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(ulong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(long4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(ulong4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(float val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(float1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(float2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2Dwrite(float4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 3102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf3Dwrite(T val, surface< void, 3>  surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
#line 3121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}

























#line 3148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 3124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf3Dwrite(T val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(signed char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(unsigned char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(char1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(uchar1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(char2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(uchar2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(char4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(uchar4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(short val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(unsigned short val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(short1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(ushort1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(short2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(ushort2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(short4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(ushort4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(int val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(unsigned val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(int1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(uint1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(int2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(uint2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(int4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(uint4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(__int64 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(unsigned __int64 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(longlong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(ulonglong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(longlong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(ulonglong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(long val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(unsigned long val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(long1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(ulong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(long2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(ulong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(long4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(ulong4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(float val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(float1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(float2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf3Dwrite(float4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 3384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf1DLayeredwrite(T val, surface< void, 241>  surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
#line 3403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}

























#line 3430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 3406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf1DLayeredwrite(T val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(signed char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(unsigned char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(char1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(uchar1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(char2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(uchar2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(char4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(uchar4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(short val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(unsigned short val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(short1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(ushort1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(short2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(ushort2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(short4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(ushort4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(int val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(unsigned val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(int1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(uint1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(int2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(uint2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(int4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(uint4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(__int64 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(unsigned __int64 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(longlong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(ulonglong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(longlong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(ulonglong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(long val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(unsigned long val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(long1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(ulong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(long2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(ulong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(long4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(ulong4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(float val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(float1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(float2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf1DLayeredwrite(float4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 3666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf2DLayeredwrite(T val, surface< void, 242>  surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
#line 3685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}

























#line 3712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 3688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surf2DLayeredwrite(T val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(signed char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(unsigned char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(char1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(uchar1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(char2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(uchar2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(char4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(uchar4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(short val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(unsigned short val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(short1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(ushort1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(short2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(ushort2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(short4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(ushort4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(int val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(unsigned val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(int1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(uint1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(int2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(uint2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(int4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(uint4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(__int64 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(unsigned __int64 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(longlong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(ulonglong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(longlong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(ulonglong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(long val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(unsigned long val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(long1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(ulong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(long2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(ulong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(long4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(ulong4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(float val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(float1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(float2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surf2DLayeredwrite(float4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 3948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surfCubemapwrite(T val, surface< void, 12>  surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
#line 3967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}

























#line 3994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 3970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surfCubemapwrite(T val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 3973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 3979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(signed char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 3984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(unsigned char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 3989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 3998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(char1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 3994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 3996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(uchar1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 3999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(char2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(uchar2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(char4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(uchar4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(short val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(unsigned short val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(short1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(ushort1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(short2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(ushort2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(short4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(ushort4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(int val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(unsigned val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(int1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(uint1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(int2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(uint2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(int4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(uint4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(__int64 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(unsigned __int64 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(longlong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(ulonglong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(longlong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(ulonglong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(long val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(unsigned long val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(long1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(ulong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(long2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(ulong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(long4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(ulong4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(float val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(float1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(float2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapwrite(float4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 4230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surfCubemapLayeredwrite(T val, surface< void, 252>  surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
#line 4249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}

























#line 4276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
template< class T> static __inline void 
#line 4252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
surfCubemapLayeredwrite(T val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(signed char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(unsigned char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(char1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(uchar1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(char2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(uchar2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(char4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(uchar4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(short val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(unsigned short val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(short1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(ushort1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(short2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(ushort2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(short4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(ushort4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(int val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(unsigned val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(int1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(uint1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(int2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(uint2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(int4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(uint4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(__int64 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(unsigned __int64 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(longlong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(ulonglong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(longlong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(ulonglong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(long val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(unsigned long val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(long1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(ulong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(long2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(ulong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(long4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(ulong4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(float val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(float1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(float2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 4472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
static __inline void surfCubemapLayeredwrite(float4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
exit(___);}







#line 4484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\surface_functions.h"
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char tex1Dfetch(texture< char, 1, cudaReadModeElementType>  t, int x) 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline signed char tex1Dfetch(texture< signed char, 1, cudaReadModeElementType>  t, int x) 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned char tex1Dfetch(texture< unsigned char, 1, cudaReadModeElementType>  t, int x) 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char1 tex1Dfetch(texture< char1, 1, cudaReadModeElementType>  t, int x) 
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar1 tex1Dfetch(texture< uchar1, 1, cudaReadModeElementType>  t, int x) 
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char2 tex1Dfetch(texture< char2, 1, cudaReadModeElementType>  t, int x) 
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar2 tex1Dfetch(texture< uchar2, 1, cudaReadModeElementType>  t, int x) 
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char4 tex1Dfetch(texture< char4, 1, cudaReadModeElementType>  t, int x) 
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar4 tex1Dfetch(texture< uchar4, 1, cudaReadModeElementType>  t, int x) 
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short tex1Dfetch(texture< short, 1, cudaReadModeElementType>  t, int x) 
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned short tex1Dfetch(texture< unsigned short, 1, cudaReadModeElementType>  t, int x) 
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short1 tex1Dfetch(texture< short1, 1, cudaReadModeElementType>  t, int x) 
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort1 tex1Dfetch(texture< ushort1, 1, cudaReadModeElementType>  t, int x) 
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short2 tex1Dfetch(texture< short2, 1, cudaReadModeElementType>  t, int x) 
#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort2 tex1Dfetch(texture< ushort2, 1, cudaReadModeElementType>  t, int x) 
#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short4 tex1Dfetch(texture< short4, 1, cudaReadModeElementType>  t, int x) 
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort4 tex1Dfetch(texture< ushort4, 1, cudaReadModeElementType>  t, int x) 
#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int tex1Dfetch(texture< int, 1, cudaReadModeElementType>  t, int x) 
#line 232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned tex1Dfetch(texture< unsigned, 1, cudaReadModeElementType>  t, int x) 
#line 239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int1 tex1Dfetch(texture< int1, 1, cudaReadModeElementType>  t, int x) 
#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint1 tex1Dfetch(texture< uint1, 1, cudaReadModeElementType>  t, int x) 
#line 253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int2 tex1Dfetch(texture< int2, 1, cudaReadModeElementType>  t, int x) 
#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint2 tex1Dfetch(texture< uint2, 1, cudaReadModeElementType>  t, int x) 
#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int4 tex1Dfetch(texture< int4, 1, cudaReadModeElementType>  t, int x) 
#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint4 tex1Dfetch(texture< uint4, 1, cudaReadModeElementType>  t, int x) 
#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long tex1Dfetch(texture< long, 1, cudaReadModeElementType>  t, int x) 
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned long tex1Dfetch(texture< unsigned long, 1, cudaReadModeElementType>  t, int x) 
#line 303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long1 tex1Dfetch(texture< long1, 1, cudaReadModeElementType>  t, int x) 
#line 310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong1 tex1Dfetch(texture< ulong1, 1, cudaReadModeElementType>  t, int x) 
#line 317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long2 tex1Dfetch(texture< long2, 1, cudaReadModeElementType>  t, int x) 
#line 324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong2 tex1Dfetch(texture< ulong2, 1, cudaReadModeElementType>  t, int x) 
#line 331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long4 tex1Dfetch(texture< long4, 1, cudaReadModeElementType>  t, int x) 
#line 338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong4 tex1Dfetch(texture< ulong4, 1, cudaReadModeElementType>  t, int x) 
#line 345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex1Dfetch(texture< float, 1, cudaReadModeElementType>  t, int x) 
#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex1Dfetch(texture< float1, 1, cudaReadModeElementType>  t, int x) 
#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex1Dfetch(texture< float2, 1, cudaReadModeElementType>  t, int x) 
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex1Dfetch(texture< float4, 1, cudaReadModeElementType>  t, int x) 
#line 381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex1Dfetch(texture< char, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex1Dfetch(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex1Dfetch(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex1Dfetch(texture< char1, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex1Dfetch(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex1Dfetch(texture< char2, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex1Dfetch(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex1Dfetch(texture< char4, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex1Dfetch(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex1Dfetch(texture< short, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex1Dfetch(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex1Dfetch(texture< short1, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex1Dfetch(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex1Dfetch(texture< short2, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex1Dfetch(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex1Dfetch(texture< short4, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex1Dfetch(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char tex1D(texture< char, 1, cudaReadModeElementType>  t, float x) 
#line 546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline signed char tex1D(texture< signed char, 1, cudaReadModeElementType>  t, float x) 
#line 557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned char tex1D(texture< unsigned char, 1, cudaReadModeElementType>  t, float x) 
#line 564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char1 tex1D(texture< char1, 1, cudaReadModeElementType>  t, float x) 
#line 571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar1 tex1D(texture< uchar1, 1, cudaReadModeElementType>  t, float x) 
#line 578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char2 tex1D(texture< char2, 1, cudaReadModeElementType>  t, float x) 
#line 585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar2 tex1D(texture< uchar2, 1, cudaReadModeElementType>  t, float x) 
#line 592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char4 tex1D(texture< char4, 1, cudaReadModeElementType>  t, float x) 
#line 599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar4 tex1D(texture< uchar4, 1, cudaReadModeElementType>  t, float x) 
#line 606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short tex1D(texture< short, 1, cudaReadModeElementType>  t, float x) 
#line 619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned short tex1D(texture< unsigned short, 1, cudaReadModeElementType>  t, float x) 
#line 626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short1 tex1D(texture< short1, 1, cudaReadModeElementType>  t, float x) 
#line 633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort1 tex1D(texture< ushort1, 1, cudaReadModeElementType>  t, float x) 
#line 640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short2 tex1D(texture< short2, 1, cudaReadModeElementType>  t, float x) 
#line 647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort2 tex1D(texture< ushort2, 1, cudaReadModeElementType>  t, float x) 
#line 654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short4 tex1D(texture< short4, 1, cudaReadModeElementType>  t, float x) 
#line 661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort4 tex1D(texture< ushort4, 1, cudaReadModeElementType>  t, float x) 
#line 668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int tex1D(texture< int, 1, cudaReadModeElementType>  t, float x) 
#line 681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned tex1D(texture< unsigned, 1, cudaReadModeElementType>  t, float x) 
#line 688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int1 tex1D(texture< int1, 1, cudaReadModeElementType>  t, float x) 
#line 695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint1 tex1D(texture< uint1, 1, cudaReadModeElementType>  t, float x) 
#line 702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int2 tex1D(texture< int2, 1, cudaReadModeElementType>  t, float x) 
#line 709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint2 tex1D(texture< uint2, 1, cudaReadModeElementType>  t, float x) 
#line 716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int4 tex1D(texture< int4, 1, cudaReadModeElementType>  t, float x) 
#line 723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint4 tex1D(texture< uint4, 1, cudaReadModeElementType>  t, float x) 
#line 730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long tex1D(texture< long, 1, cudaReadModeElementType>  t, float x) 
#line 751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned long tex1D(texture< unsigned long, 1, cudaReadModeElementType>  t, float x) 
#line 758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long1 tex1D(texture< long1, 1, cudaReadModeElementType>  t, float x) 
#line 765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong1 tex1D(texture< ulong1, 1, cudaReadModeElementType>  t, float x) 
#line 772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long2 tex1D(texture< long2, 1, cudaReadModeElementType>  t, float x) 
#line 779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong2 tex1D(texture< ulong2, 1, cudaReadModeElementType>  t, float x) 
#line 786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long4 tex1D(texture< long4, 1, cudaReadModeElementType>  t, float x) 
#line 793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong4 tex1D(texture< ulong4, 1, cudaReadModeElementType>  t, float x) 
#line 800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex1D(texture< float, 1, cudaReadModeElementType>  t, float x) 
#line 815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex1D(texture< float1, 1, cudaReadModeElementType>  t, float x) 
#line 822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex1D(texture< float2, 1, cudaReadModeElementType>  t, float x) 
#line 829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex1D(texture< float4, 1, cudaReadModeElementType>  t, float x) 
#line 836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex1D(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex1D(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex1D(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex1D(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex1D(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex1D(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex1D(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex1D(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex1D(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex1D(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex1D(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex1D(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex1D(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex1D(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex1D(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex1D(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex1D(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char tex2D(texture< char, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline signed char tex2D(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned char tex2D(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char1 tex2D(texture< char1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar1 tex2D(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char2 tex2D(texture< char2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar2 tex2D(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char4 tex2D(texture< char4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar4 tex2D(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short tex2D(texture< short, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned short tex2D(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short1 tex2D(texture< short1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort1 tex2D(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short2 tex2D(texture< short2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort2 tex2D(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short4 tex2D(texture< short4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort4 tex2D(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int tex2D(texture< int, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned tex2D(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int1 tex2D(texture< int1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint1 tex2D(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int2 tex2D(texture< int2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint2 tex2D(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int4 tex2D(texture< int4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint4 tex2D(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long tex2D(texture< long, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned long tex2D(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long1 tex2D(texture< long1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong1 tex2D(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long2 tex2D(texture< long2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong2 tex2D(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long4 tex2D(texture< long4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong4 tex2D(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex2D(texture< float, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex2D(texture< float1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex2D(texture< float2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2D(texture< float4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex2D(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex2D(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex2D(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex2D(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex2D(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex2D(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex2D(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2D(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2D(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex2D(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex2D(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex2D(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex2D(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex2D(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex2D(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2D(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2D(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char tex1DLayered(texture< char, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline signed char tex1DLayered(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned char tex1DLayered(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char1 tex1DLayered(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar1 tex1DLayered(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char2 tex1DLayered(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar2 tex1DLayered(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char4 tex1DLayered(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar4 tex1DLayered(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short tex1DLayered(texture< short, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned short tex1DLayered(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short1 tex1DLayered(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort1 tex1DLayered(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short2 tex1DLayered(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort2 tex1DLayered(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short4 tex1DLayered(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort4 tex1DLayered(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int tex1DLayered(texture< int, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned tex1DLayered(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int1 tex1DLayered(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint1 tex1DLayered(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int2 tex1DLayered(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint2 tex1DLayered(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int4 tex1DLayered(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint4 tex1DLayered(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long tex1DLayered(texture< long, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned long tex1DLayered(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long1 tex1DLayered(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong1 tex1DLayered(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long2 tex1DLayered(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong2 tex1DLayered(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long4 tex1DLayered(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong4 tex1DLayered(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex1DLayered(texture< float, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex1DLayered(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex1DLayered(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex1DLayered(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex1DLayered(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex1DLayered(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex1DLayered(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex1DLayered(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex1DLayered(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex1DLayered(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex1DLayered(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex1DLayered(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex1DLayered(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex1DLayered(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex1DLayered(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex1DLayered(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex1DLayered(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex1DLayered(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex1DLayered(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex1DLayered(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex1DLayered(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 1903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char tex2DLayered(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline signed char tex2DLayered(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned char tex2DLayered(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char1 tex2DLayered(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar1 tex2DLayered(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char2 tex2DLayered(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar2 tex2DLayered(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char4 tex2DLayered(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar4 tex2DLayered(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short tex2DLayered(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned short tex2DLayered(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 1994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short1 tex2DLayered(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort1 tex2DLayered(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 1999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short2 tex2DLayered(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort2 tex2DLayered(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short4 tex2DLayered(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort4 tex2DLayered(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int tex2DLayered(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned tex2DLayered(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int1 tex2DLayered(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint1 tex2DLayered(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int2 tex2DLayered(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint2 tex2DLayered(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int4 tex2DLayered(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint4 tex2DLayered(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long tex2DLayered(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned long tex2DLayered(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long1 tex2DLayered(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong1 tex2DLayered(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long2 tex2DLayered(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong2 tex2DLayered(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long4 tex2DLayered(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong4 tex2DLayered(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex2DLayered(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex2DLayered(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex2DLayered(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2DLayered(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex2DLayered(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex2DLayered(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex2DLayered(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex2DLayered(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex2DLayered(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex2DLayered(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex2DLayered(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2DLayered(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2DLayered(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex2DLayered(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex2DLayered(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex2DLayered(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex2DLayered(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex2DLayered(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex2DLayered(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2DLayered(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2DLayered(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char tex3D(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline signed char tex3D(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned char tex3D(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char1 tex3D(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar1 tex3D(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char2 tex3D(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar2 tex3D(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char4 tex3D(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar4 tex3D(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short tex3D(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned short tex3D(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short1 tex3D(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort1 tex3D(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short2 tex3D(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort2 tex3D(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short4 tex3D(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort4 tex3D(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int tex3D(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned tex3D(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int1 tex3D(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint1 tex3D(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int2 tex3D(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint2 tex3D(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int4 tex3D(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint4 tex3D(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long tex3D(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned long tex3D(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long1 tex3D(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong1 tex3D(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long2 tex3D(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong2 tex3D(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long4 tex3D(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong4 tex3D(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex3D(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex3D(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex3D(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex3D(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex3D(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex3D(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex3D(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex3D(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex3D(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex3D(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex3D(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex3D(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex3D(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex3D(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float tex3D(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex3D(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 tex3D(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex3D(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 tex3D(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex3D(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex3D(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 2801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char texCubemap(texture< char, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline signed char texCubemap(texture< signed char, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned char texCubemap(texture< unsigned char, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char1 texCubemap(texture< char1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar1 texCubemap(texture< uchar1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char2 texCubemap(texture< char2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar2 texCubemap(texture< uchar2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char4 texCubemap(texture< char4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar4 texCubemap(texture< uchar4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short texCubemap(texture< short, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned short texCubemap(texture< unsigned short, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short1 texCubemap(texture< short1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort1 texCubemap(texture< ushort1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short2 texCubemap(texture< short2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort2 texCubemap(texture< ushort2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short4 texCubemap(texture< short4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort4 texCubemap(texture< ushort4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int texCubemap(texture< int, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned texCubemap(texture< unsigned, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int1 texCubemap(texture< int1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint1 texCubemap(texture< uint1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int2 texCubemap(texture< int2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint2 texCubemap(texture< uint2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int4 texCubemap(texture< int4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint4 texCubemap(texture< uint4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 2996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 2995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long texCubemap(texture< long, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned long texCubemap(texture< unsigned long, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long1 texCubemap(texture< long1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong1 texCubemap(texture< ulong1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long2 texCubemap(texture< long2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong2 texCubemap(texture< ulong2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long4 texCubemap(texture< long4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong4 texCubemap(texture< ulong4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float texCubemap(texture< float, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 texCubemap(texture< float1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 texCubemap(texture< float2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 texCubemap(texture< float4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float texCubemap(texture< char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float texCubemap(texture< signed char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float texCubemap(texture< unsigned char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 texCubemap(texture< char1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 texCubemap(texture< uchar1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 texCubemap(texture< char2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 texCubemap(texture< uchar2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 texCubemap(texture< char4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 texCubemap(texture< uchar4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float texCubemap(texture< short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float texCubemap(texture< unsigned short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 texCubemap(texture< short1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 texCubemap(texture< ushort1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 texCubemap(texture< short2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 texCubemap(texture< ushort2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 texCubemap(texture< short4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 texCubemap(texture< ushort4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char texCubemapLayered(texture< char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline signed char texCubemapLayered(texture< signed char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned char texCubemapLayered(texture< unsigned char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char1 texCubemapLayered(texture< char1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar1 texCubemapLayered(texture< uchar1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char2 texCubemapLayered(texture< char2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar2 texCubemapLayered(texture< uchar2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char4 texCubemapLayered(texture< char4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar4 texCubemapLayered(texture< uchar4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short texCubemapLayered(texture< short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned short texCubemapLayered(texture< unsigned short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short1 texCubemapLayered(texture< short1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort1 texCubemapLayered(texture< ushort1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short2 texCubemapLayered(texture< short2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort2 texCubemapLayered(texture< ushort2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short4 texCubemapLayered(texture< short4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort4 texCubemapLayered(texture< ushort4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int texCubemapLayered(texture< int, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned texCubemapLayered(texture< unsigned, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int1 texCubemapLayered(texture< int1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint1 texCubemapLayered(texture< uint1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int2 texCubemapLayered(texture< int2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint2 texCubemapLayered(texture< uint2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int4 texCubemapLayered(texture< int4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint4 texCubemapLayered(texture< uint4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long texCubemapLayered(texture< long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline unsigned long texCubemapLayered(texture< unsigned long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long1 texCubemapLayered(texture< long1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong1 texCubemapLayered(texture< ulong1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long2 texCubemapLayered(texture< long2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong2 texCubemapLayered(texture< ulong2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline long4 texCubemapLayered(texture< long4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ulong4 texCubemapLayered(texture< ulong4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float texCubemapLayered(texture< float, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 texCubemapLayered(texture< float1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 texCubemapLayered(texture< float2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 texCubemapLayered(texture< float4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}









#line 3545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float texCubemapLayered(texture< char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float texCubemapLayered(texture< signed char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float texCubemapLayered(texture< unsigned char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 texCubemapLayered(texture< char1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 texCubemapLayered(texture< uchar1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 texCubemapLayered(texture< char2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 texCubemapLayered(texture< uchar2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 texCubemapLayered(texture< char4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 texCubemapLayered(texture< uchar4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float texCubemapLayered(texture< short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float texCubemapLayered(texture< unsigned short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 texCubemapLayered(texture< short1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float1 texCubemapLayered(texture< ushort1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 texCubemapLayered(texture< short2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float2 texCubemapLayered(texture< ushort2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 texCubemapLayered(texture< short4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 texCubemapLayered(texture< ushort4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}











#line 3699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char4 tex2Dgather(texture< char, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char4 tex2Dgather(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar4 tex2Dgather(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char4 tex2Dgather(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar4 tex2Dgather(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char4 tex2Dgather(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar4 tex2Dgather(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char4 tex2Dgather(texture< char3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar4 tex2Dgather(texture< uchar3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline char4 tex2Dgather(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uchar4 tex2Dgather(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short4 tex2Dgather(texture< short, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort4 tex2Dgather(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short4 tex2Dgather(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort4 tex2Dgather(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short4 tex2Dgather(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort4 tex2Dgather(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short4 tex2Dgather(texture< short3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort4 tex2Dgather(texture< ushort3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline short4 tex2Dgather(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline ushort4 tex2Dgather(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int4 tex2Dgather(texture< int, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint4 tex2Dgather(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int4 tex2Dgather(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint4 tex2Dgather(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int4 tex2Dgather(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint4 tex2Dgather(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int4 tex2Dgather(texture< int3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint4 tex2Dgather(texture< uint3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline int4 tex2Dgather(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline uint4 tex2Dgather(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< float, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< float3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 3968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 3973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 3978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 3983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 3988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 3999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 3993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 4004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 3997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 3998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 4009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 4002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< char3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 4014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 4007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< uchar3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 4019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 4012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 4024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 4017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 4029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 4022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 4034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 4027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 4039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 4032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 4044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 4037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 4049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 4042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 4054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 4047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 4059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 4052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< short3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 4064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 4057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< ushort3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 4069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 4062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 4074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 4067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
static __inline float4 tex2Dgather(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
exit(___);}







#line 4079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\texture_fetch_functions.h"
#line 66 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_launch_parameters.h"
extern "C" const uint3 threadIdx; 
#line 67 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_launch_parameters.h"
extern "C" const uint3 blockIdx; 
#line 68 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_launch_parameters.h"
extern "C" const dim3 blockDim; 
#line 69 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_launch_parameters.h"
extern "C" const dim3 gridDim; 
#line 70 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\device_launch_parameters.h"
extern "C" const int warpSize; 
#line 120 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T> __inline cudaError_t 
#line 121 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaSetupArgument(T 
#line 122 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
arg, size_t 
#line 123 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
offset) 
#line 125 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 126 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaSetupArgument((const void *)(&arg), sizeof(T), offset); 
#line 127 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 159 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
static __inline cudaError_t cudaEventCreate(cudaEvent_t *
#line 160 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
event, unsigned 
#line 161 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
flags) 
#line 163 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 164 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaEventCreateWithFlags(event, flags); 
#line 165 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 222 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
static __inline cudaError_t cudaMallocHost(void **
#line 223 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
ptr, size_t 
#line 224 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
size, unsigned 
#line 225 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
flags) 
#line 227 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 228 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaHostAlloc(ptr, size, flags); 
#line 229 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 231 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T> __inline cudaError_t 
#line 232 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaHostAlloc(T **
#line 233 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
ptr, size_t 
#line 234 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
size, unsigned 
#line 235 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
flags) 
#line 237 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 238 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaHostAlloc((void **)((void *)ptr), size, flags); 
#line 239 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 241 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T> __inline cudaError_t 
#line 242 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaHostGetDevicePointer(T **
#line 243 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
pDevice, void *
#line 244 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
pHost, unsigned 
#line 245 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
flags) 
#line 247 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 248 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaHostGetDevicePointer((void **)((void *)pDevice), pHost, flags); 
#line 249 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 251 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T> __inline cudaError_t 
#line 252 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaMalloc(T **
#line 253 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
devPtr, size_t 
#line 254 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
size) 
#line 256 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 257 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaMalloc((void **)((void *)devPtr), size); 
#line 258 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 260 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T> __inline cudaError_t 
#line 261 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaMallocHost(T **
#line 262 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
ptr, size_t 
#line 263 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
size, unsigned 
#line 264 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
flags = (0)) 
#line 266 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 267 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaMallocHost((void **)((void *)ptr), size, flags); 
#line 268 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 270 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T> __inline cudaError_t 
#line 271 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaMallocPitch(T **
#line 272 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
devPtr, size_t *
#line 273 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
pitch, size_t 
#line 274 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
width, size_t 
#line 275 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
height) 
#line 277 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 278 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaMallocPitch((void **)((void *)devPtr), pitch, width, height); 
#line 279 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 289 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
static __inline cudaError_t cudaMemcpyToSymbol(char *
#line 290 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
symbol, const void *
#line 291 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
src, size_t 
#line 292 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
count, size_t 
#line 293 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
offset = (0), cudaMemcpyKind 
#line 294 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
kind = cudaMemcpyHostToDevice) 
#line 296 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 297 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaMemcpyToSymbol((const char *)symbol, src, count, offset, kind); 
#line 298 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 300 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T> __inline cudaError_t 
#line 301 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaMemcpyToSymbol(const T &
#line 302 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
symbol, const void *
#line 303 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
src, size_t 
#line 304 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
count, size_t 
#line 305 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
offset = (0), cudaMemcpyKind 
#line 306 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
kind = cudaMemcpyHostToDevice) 
#line 308 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 309 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaMemcpyToSymbol((const char *)(&symbol), src, count, offset, kind); 
#line 310 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 312 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
static __inline cudaError_t cudaMemcpyToSymbolAsync(char *
#line 313 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
symbol, const void *
#line 314 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
src, size_t 
#line 315 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
count, size_t 
#line 316 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
offset = (0), cudaMemcpyKind 
#line 317 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
kind = cudaMemcpyHostToDevice, cudaStream_t 
#line 318 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
stream = 0) 
#line 320 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 321 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaMemcpyToSymbolAsync((const char *)symbol, src, count, offset, kind, stream); 
#line 322 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 324 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T> __inline cudaError_t 
#line 325 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaMemcpyToSymbolAsync(const T &
#line 326 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
symbol, const void *
#line 327 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
src, size_t 
#line 328 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
count, size_t 
#line 329 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
offset = (0), cudaMemcpyKind 
#line 330 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
kind = cudaMemcpyHostToDevice, cudaStream_t 
#line 331 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
stream = 0) 
#line 333 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 334 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaMemcpyToSymbolAsync((const char *)(&symbol), src, count, offset, kind, stream); 
#line 335 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 343 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
static __inline cudaError_t cudaMemcpyFromSymbol(void *
#line 344 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
dst, char *
#line 345 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
symbol, size_t 
#line 346 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
count, size_t 
#line 347 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
offset = (0), cudaMemcpyKind 
#line 348 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
kind = cudaMemcpyDeviceToHost) 
#line 350 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 351 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaMemcpyFromSymbol(dst, (const char *)symbol, count, offset, kind); 
#line 352 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 354 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T> __inline cudaError_t 
#line 355 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaMemcpyFromSymbol(void *
#line 356 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
dst, const T &
#line 357 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
symbol, size_t 
#line 358 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
count, size_t 
#line 359 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
offset = (0), cudaMemcpyKind 
#line 360 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
kind = cudaMemcpyDeviceToHost) 
#line 362 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 363 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaMemcpyFromSymbol(dst, (const char *)(&symbol), count, offset, kind); 
#line 364 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 366 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
static __inline cudaError_t cudaMemcpyFromSymbolAsync(void *
#line 367 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
dst, char *
#line 368 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
symbol, size_t 
#line 369 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
count, size_t 
#line 370 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
offset = (0), cudaMemcpyKind 
#line 371 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
kind = cudaMemcpyDeviceToHost, cudaStream_t 
#line 372 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
stream = 0) 
#line 374 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 375 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaMemcpyFromSymbolAsync(dst, (const char *)symbol, count, offset, kind, stream); 
#line 376 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 378 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T> __inline cudaError_t 
#line 379 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaMemcpyFromSymbolAsync(void *
#line 380 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
dst, const T &
#line 381 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
symbol, size_t 
#line 382 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
count, size_t 
#line 383 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
offset = (0), cudaMemcpyKind 
#line 384 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
kind = cudaMemcpyDeviceToHost, cudaStream_t 
#line 385 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
stream = 0) 
#line 387 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 388 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaMemcpyFromSymbolAsync(dst, (const char *)(&symbol), count, offset, kind, stream); 
#line 389 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 391 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
static __inline cudaError_t cudaGetSymbolAddress(void **
#line 392 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
devPtr, char *
#line 393 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
symbol) 
#line 395 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 396 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaGetSymbolAddress(devPtr, (const char *)symbol); 
#line 397 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 424 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T> __inline cudaError_t 
#line 425 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaGetSymbolAddress(void **
#line 426 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
devPtr, const T &
#line 427 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
symbol) 
#line 429 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 430 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaGetSymbolAddress(devPtr, (const char *)(&symbol)); 
#line 431 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 439 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
static __inline cudaError_t cudaGetSymbolSize(size_t *
#line 440 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
size, char *
#line 441 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
symbol) 
#line 443 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 444 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaGetSymbolSize(size, (const char *)symbol); 
#line 445 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 472 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T> __inline cudaError_t 
#line 473 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaGetSymbolSize(size_t *
#line 474 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
size, const T &
#line 475 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
symbol) 
#line 477 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 478 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaGetSymbolSize(size, (const char *)(&symbol)); 
#line 479 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 521 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> __inline cudaError_t 
#line 522 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaBindTexture(size_t *
#line 523 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 524 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
tex, const void *
#line 525 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
#line 526 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
desc, size_t 
#line 527 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
size = (4294967295U)) 
#line 529 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 530 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaBindTexture(offset, &tex, devPtr, &desc, size); 
#line 531 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 566 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> __inline cudaError_t 
#line 567 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaBindTexture(size_t *
#line 568 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 569 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
tex, const void *
#line 570 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
devPtr, size_t 
#line 571 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
size = (4294967295U)) 
#line 573 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 574 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaBindTexture(offset, tex, devPtr, (tex.channelDesc), size); 
#line 575 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 622 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> __inline cudaError_t 
#line 623 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaBindTexture2D(size_t *
#line 624 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 625 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
tex, const void *
#line 626 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
#line 627 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
desc, size_t 
#line 628 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
width, size_t 
#line 629 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
height, size_t 
#line 630 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
pitch) 
#line 632 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 633 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaBindTexture2D(offset, &tex, devPtr, &desc, width, height, pitch); 
#line 634 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 680 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> __inline cudaError_t 
#line 681 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaBindTexture2D(size_t *
#line 682 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 683 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
tex, const void *
#line 684 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
devPtr, size_t 
#line 685 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
width, size_t 
#line 686 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
height, size_t 
#line 687 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
pitch) 
#line 689 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 690 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaBindTexture2D(offset, &tex, devPtr, &(tex.texture< T, dim, readMode> ::channelDesc), width, height, pitch); 
#line 691 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 722 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> __inline cudaError_t 
#line 723 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode>  &
#line 724 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
tex, const cudaArray *
#line 725 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
array, const cudaChannelFormatDesc &
#line 726 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
desc) 
#line 728 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 729 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaBindTextureToArray(&tex, array, &desc); 
#line 730 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 760 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> __inline cudaError_t 
#line 761 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode>  &
#line 762 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
tex, const cudaArray *
#line 763 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
array) 
#line 765 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 766 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaChannelFormatDesc desc; 
#line 767 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaError_t err = cudaGetChannelDesc(&desc, array); 
#line 769 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToArray(tex, array, desc) : err; 
#line 770 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 799 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> __inline cudaError_t 
#line 800 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaUnbindTexture(const texture< T, dim, readMode>  &
#line 801 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
tex) 
#line 803 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 804 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaUnbindTexture(&tex); 
#line 805 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 839 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> __inline cudaError_t 
#line 840 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaGetTextureAlignmentOffset(size_t *
#line 841 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 842 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
tex) 
#line 844 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 845 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaGetTextureAlignmentOffset(offset, &tex); 
#line 846 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 900 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T> __inline cudaError_t 
#line 901 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaFuncSetCacheConfig(T *
#line 902 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
func, cudaFuncCache 
#line 903 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cacheConfig) 
#line 905 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 906 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaFuncSetCacheConfig((const char *)func, cacheConfig); 
#line 907 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 944 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T> __inline cudaError_t 
#line 945 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaLaunch(T *
#line 946 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
entry) 
#line 948 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 949 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaLaunch((const char *)entry); 
#line 950 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 984 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T> __inline cudaError_t 
#line 985 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaFuncGetAttributes(cudaFuncAttributes *
#line 986 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
attr, T *
#line 987 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
entry) 
#line 989 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 990 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaFuncGetAttributes(attr, (const char *)entry); 
#line 991 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 1013 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T, int dim> __inline cudaError_t 
#line 1014 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim>  &
#line 1015 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
surf, const cudaArray *
#line 1016 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
array, const cudaChannelFormatDesc &
#line 1017 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
desc) 
#line 1019 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 1020 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return cudaBindSurfaceToArray(&surf, array, &desc); 
#line 1021 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 1042 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
template< class T, int dim> __inline cudaError_t 
#line 1043 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim>  &
#line 1044 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
surf, const cudaArray *
#line 1045 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
array) 
#line 1047 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
{ 
#line 1048 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaChannelFormatDesc desc; 
#line 1049 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
cudaError_t err = cudaGetChannelDesc(&desc, array); 
#line 1051 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindSurfaceToArray(surf, array, desc) : err; 
#line 1052 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda_runtime.h"
} 
#line 56 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
typedef struct impl_info_tag *MEX_impl_info; 
#line 86 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef unsigned char uchar_T; 
#line 87 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef unsigned short ushort_T; 
#line 88 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef unsigned long ulong_T; 
#line 210 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef signed char int8_T; 
#line 225 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef unsigned char uint8_T; 
#line 241 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef short int16_T; 
#line 257 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef unsigned short uint16_T; 
#line 273 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef int int32_T; 
#line 289 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef unsigned uint32_T; 
#line 350 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef float real32_T; 
#line 364 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef double real64_T; 
#line 408 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef __int64 int64_T; 
#line 444 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef unsigned __int64 uint64_T; 
#line 500 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef real64_T real_T; 
#line 509 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef real_T time_T; 
#line 521 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef unsigned char boolean_T; 
#line 527 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef char char_T; 
#line 533 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef int int_T; 
#line 539 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef unsigned uint_T; 
#line 545 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef unsigned char byte_T; 
#line 557 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef 
#line 555 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
struct { 
#line 556 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
real32_T re, im; 
#line 557 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
} creal32_T; 
#line 566 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef 
#line 564 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
struct { 
#line 565 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
real64_T re, im; 
#line 566 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
} creal64_T; 
#line 575 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef 
#line 573 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
struct { 
#line 574 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
real_T re, im; 
#line 575 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
} creal_T; 
#line 586 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef 
#line 584 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
struct { 
#line 585 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
int8_T re, im; 
#line 586 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
} cint8_T; 
#line 595 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef 
#line 593 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
struct { 
#line 594 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
uint8_T re, im; 
#line 595 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
} cuint8_T; 
#line 604 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef 
#line 602 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
struct { 
#line 603 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
int16_T re, im; 
#line 604 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
} cint16_T; 
#line 613 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef 
#line 611 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
struct { 
#line 612 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
uint16_T re, im; 
#line 613 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
} cuint16_T; 
#line 622 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef 
#line 620 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
struct { 
#line 621 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
int32_T re, im; 
#line 622 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
} cint32_T; 
#line 631 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef 
#line 629 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
struct { 
#line 630 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
uint32_T re, im; 
#line 631 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
} cuint32_T; 
#line 640 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef 
#line 638 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
struct { 
#line 639 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
int64_T re, im; 
#line 640 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
} cint64_T; 
#line 649 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef 
#line 647 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
struct { 
#line 648 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
uint64_T re, im; 
#line 649 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
} cuint64_T; 
#line 722 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
__forceinline uint64_T double_to_uint64_helper(double d) { 
#line 723 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
union double_to_uint64_union_type { 
#line 724 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
double dd; 
#line 725 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
uint64_T i64; 
#line 726 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
} di; 
#line 727 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
(di.dd) = d; 
#line 728 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
return (((di.i64) & (4503599627370495i64)) | (4503599627370496i64)) << 11; 
#line 729 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
} 
#line 796 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef size_t mwSize; 
#line 797 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef size_t mwIndex; 
#line 798 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef ptrdiff_t mwSignedIndex; 
#line 821 "C:/Program Files/MATLAB/R2011b/extern/include\\tmwtypes.h"
typedef __wchar_t CHAR16_T; 
#line 299 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
typedef struct mxArray_tag mxArray; 
#line 304 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
typedef void (*mxFunctionPtr)(int , mxArray * [], int , mxArray * []); 
#line 314 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
typedef bool mxLogical; 
#line 319 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
typedef CHAR16_T mxChar; 
#line 353 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
typedef 
#line 325 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
enum { 
#line 326 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxUNKNOWN_CLASS, 
#line 327 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxCELL_CLASS, 
#line 328 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxSTRUCT_CLASS, 
#line 329 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxLOGICAL_CLASS, 
#line 330 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxCHAR_CLASS, 
#line 331 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxVOID_CLASS, 
#line 332 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxDOUBLE_CLASS, 
#line 333 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxSINGLE_CLASS, 
#line 334 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxINT8_CLASS, 
#line 335 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxUINT8_CLASS, 
#line 336 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxINT16_CLASS, 
#line 337 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxUINT16_CLASS, 
#line 338 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxINT32_CLASS, 
#line 339 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxUINT32_CLASS, 
#line 340 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxINT64_CLASS, 
#line 341 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxUINT64_CLASS, 
#line 342 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxFUNCTION_CLASS, 
#line 343 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxOPAQUE_CLASS, 
#line 344 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxOBJECT_CLASS, 
#line 346 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxINDEX_CLASS = 15, 
#line 351 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxSPARSE_CLASS = 5
#line 353 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
} mxClassID; 
#line 363 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
typedef 
#line 359 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
enum { 
#line 360 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxREAL, 
#line 361 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
mxCOMPLEX
#line 363 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
} mxComplexity; 
#line 374 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void *mxMalloc(size_t ); 
#line 382 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void *mxCalloc(size_t , size_t ); 
#line 391 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void mxFree(void * ); 
#line 397 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void *mxRealloc(void * , size_t ); 
#line 403 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxClassID mxGetClassID(const mxArray * ); 
#line 409 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void *mxGetData(const mxArray * ); 
#line 417 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void mxSetData(mxArray * , void * ); 
#line 427 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsNumeric(const mxArray * ); 
#line 433 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsCell(const mxArray * ); 
#line 439 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsLogical(const mxArray * ); 
#line 445 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsChar(const mxArray * ); 
#line 451 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsStruct(const mxArray * ); 
#line 457 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsOpaque(const mxArray * ); 
#line 463 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsFunctionHandle(const mxArray * ); 
#line 471 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsObject(const mxArray * ); 
#line 479 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void *mxGetImagData(const mxArray * ); 
#line 487 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void mxSetImagData(mxArray * , void * ); 
#line 496 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsComplex(const mxArray * ); 
#line 502 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsSparse(const mxArray * ); 
#line 509 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsDouble(const mxArray * ); 
#line 516 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsSingle(const mxArray * ); 
#line 523 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsInt8(const mxArray * ); 
#line 530 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsUint8(const mxArray * ); 
#line 537 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsInt16(const mxArray * ); 
#line 544 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsUint16(const mxArray * ); 
#line 551 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsInt32(const mxArray * ); 
#line 558 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsUint32(const mxArray * ); 
#line 565 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsInt64(const mxArray * ); 
#line 572 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsUint64(const mxArray * ); 
#line 578 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mwSize mxGetNumberOfDimensions_730(const mxArray * ); 
#line 584 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" const mwSize *mxGetDimensions_730(const mxArray * ); 
#line 590 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" size_t mxGetNumberOfElements(const mxArray * ); 
#line 598 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" double *mxGetPr(const mxArray * ); 
#line 606 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void mxSetPr(mxArray * , double * ); 
#line 615 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" double *mxGetPi(const mxArray * ); 
#line 623 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void mxSetPi(mxArray * , double * ); 
#line 632 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxChar *mxGetChars(const mxArray * ); 
#line 642 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" int mxGetUserBits(const mxArray * ); 
#line 652 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void mxSetUserBits(mxArray * , int ); 
#line 661 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" double mxGetScalar(const mxArray * ); 
#line 676 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsFromGlobalWS(const mxArray * ); 
#line 682 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void mxSetFromGlobalWS(mxArray * , bool ); 
#line 688 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" size_t mxGetM(const mxArray * ); 
#line 694 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void mxSetM_730(mxArray * , mwSize ); 
#line 700 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" size_t mxGetN(const mxArray * ); 
#line 706 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsEmpty(const mxArray * ); 
#line 714 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mwIndex *mxGetIr_730(const mxArray * ); 
#line 720 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void mxSetIr_730(mxArray * , mwIndex * ); 
#line 726 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mwIndex *mxGetJc_730(const mxArray * ); 
#line 732 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void mxSetJc_730(mxArray * , mwIndex * ); 
#line 738 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mwSize mxGetNzmax_730(const mxArray * ); 
#line 744 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void mxSetNzmax_730(mxArray * , mwSize ); 
#line 750 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" size_t mxGetElementSize(const mxArray * ); 
#line 757 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mwIndex mxCalcSingleSubscript_730(const mxArray * , mwSize , const mwIndex * ); 
#line 764 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" int mxGetNumberOfFields(const mxArray * ); 
#line 772 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxGetCell_730(const mxArray * , mwIndex ); 
#line 778 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void mxSetCell_730(mxArray * , mwIndex , mxArray * ); 
#line 784 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" const char *mxGetFieldNameByNumber(const mxArray * , int ); 
#line 790 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" int mxGetFieldNumber(const mxArray * , const char * ); 
#line 797 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxGetFieldByNumber_730(const mxArray * , mwIndex , int ); 
#line 803 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void mxSetFieldByNumber_730(mxArray * , mwIndex , int , mxArray * ); 
#line 811 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxGetField_730(const mxArray * , mwIndex , const char * ); 
#line 818 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void mxSetField_730(mxArray * , mwIndex , const char * , mxArray * ); 
#line 828 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxGetProperty_730(const mxArray * , const mwIndex , const char * ); 
#line 836 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void mxSetProperty_730(mxArray * , mwIndex , const char * , const mxArray * ); 
#line 842 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" const char *mxGetClassName(const mxArray * ); 
#line 848 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsClass(const mxArray * , const char * ); 
#line 860 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxCreateNumericMatrix_730(mwSize , mwSize , mxClassID , mxComplexity ); 
#line 869 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void mxSetN_730(mxArray * , mwSize ); 
#line 876 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" int mxSetDimensions_730(mxArray * , const mwSize * , mwSize ); 
#line 882 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void mxDestroyArray(mxArray * ); 
#line 891 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxCreateNumericArray_730(mwSize , const mwSize * , mxClassID , mxComplexity ); 
#line 898 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxCreateCharArray_730(mwSize , const mwSize * ); 
#line 905 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxCreateDoubleMatrix_730(mwSize , mwSize , mxComplexity ); 
#line 911 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxLogical *mxGetLogicals(const mxArray * ); 
#line 917 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxCreateLogicalArray_730(mwSize , const mwSize * ); 
#line 927 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxCreateLogicalMatrix_730(mwSize , mwSize ); 
#line 936 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxCreateLogicalScalar(bool ); 
#line 942 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsLogicalScalar(const mxArray * ); 
#line 948 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsLogicalScalarTrue(const mxArray * ); 
#line 955 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxCreateDoubleScalar(double ); 
#line 961 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxCreateSparse_730(mwSize , mwSize , mwSize , mxComplexity ); 
#line 967 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxCreateSparseLogicalMatrix_730(mwSize , mwSize , mwSize ); 
#line 975 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void mxGetNChars_730(const mxArray * , char * , mwSize ); 
#line 986 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" int mxGetString_730(const mxArray * , char * , mwSize ); 
#line 994 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" char *mxArrayToString(const mxArray * ); 
#line 1002 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxCreateStringFromNChars_730(const char * , mwSize ); 
#line 1009 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxCreateString(const char * ); 
#line 1015 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxCreateCharMatrixFromStrings_730(mwSize , const char ** ); 
#line 1022 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxCreateCellMatrix_730(mwSize , mwSize ); 
#line 1029 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxCreateCellArray_730(mwSize , const mwSize * ); 
#line 1036 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxCreateStructMatrix_730(size_t , size_t , int , const char ** ); 
#line 1043 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxCreateStructArray_730(mwSize , const mwSize * , int , const char ** ); 
#line 1050 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" mxArray *mxDuplicateArray(const mxArray * ); 
#line 1058 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" int mxSetClassName(mxArray * , const char * ); 
#line 1065 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" int mxAddField(mxArray * , const char * ); 
#line 1072 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" void mxRemoveField(mxArray * , int ); 
#line 1078 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" double mxGetEps(); 
#line 1084 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" double mxGetInf(); 
#line 1090 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" double mxGetNaN(); 
#line 1107 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsFinite(double ); 
#line 1115 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsInf(double ); 
#line 1123 "c:\\program files\\matlab\\r2011b\\extern\\include\\matrix.h"
extern "C" bool mxIsNaN(double ); 
#line 28 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\assert.h"
extern "C" { void __cdecl _wassert(const __wchar_t * , const __wchar_t * , unsigned ); } 
#line 64 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" { typedef void (*mex_exit_fn)(void); }
#line 73 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
typedef 
#line 69 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
struct mexGlobalTableEntry_Tag { 
#line 71 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
const char *name; 
#line 72 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
mxArray **variable; 
#line 73 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
} mexGlobalTableEntry, *mexGlobalTable; 
#line 88 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
typedef 
#line 82 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
struct mexFunctionTableEntry_tag { 
#line 83 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
const char *name; 
#line 84 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
mxFunctionPtr f; 
#line 85 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
int nargin; 
#line 86 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
int nargout; 
#line 87 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
struct _mexLocalFunctionTable *local_function_table; 
#line 88 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
} mexFunctionTableEntry, *mexFunctionTable; 
#line 93 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
typedef 
#line 90 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
struct _mexLocalFunctionTable { 
#line 91 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
size_t length; 
#line 92 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
mexFunctionTable entries; 
#line 93 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
} _mexLocalFunctionTable, *mexLocalFunctionTable; 
#line 98 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
typedef 
#line 95 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
struct { 
#line 96 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
void (*initialize)(void); 
#line 97 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
void (*terminate)(void); 
#line 98 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
} _mexInitTermTableEntry, *mexInitTermTableEntry; 
#line 112 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
typedef 
#line 102 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
struct { 
#line 103 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
int version; 
#line 104 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
int file_function_table_length; 
#line 105 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
mexFunctionTable file_function_table; 
#line 106 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
int global_variable_table_length; 
#line 107 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
mexGlobalTable global_variable_table; 
#line 108 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
int npaths; 
#line 109 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
const char **paths; 
#line 110 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
int init_term_table_length; 
#line 111 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
mexInitTermTableEntry init_term_table; 
#line 112 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
} _mex_information, *mex_information; 
#line 114 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
typedef mex_information (*fn_mex_file)(void); 
#line 116 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
typedef void (*fn_clean_up_after_error)(void); 
#line 117 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
typedef const char *(*fn_simple_function_to_string)(mxFunctionPtr ); 
#line 119 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
typedef void (*fn_mex_enter_mex_library)(mex_information ); 
#line 120 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
typedef fn_mex_enter_mex_library fn_mex_exit_mex_library; 
#line 122 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
typedef mexLocalFunctionTable (*fn_mex_get_local_function_table)(void); 
#line 123 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
typedef mexLocalFunctionTable (*fn_mex_set_local_function_table)(mexLocalFunctionTable); 
#line 145 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" void mexFunction(int , mxArray * [], int , const mxArray * []); 
#line 26 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
#pragma pack ( push, 8 )
#line 56 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { struct _iobuf { 
#line 57 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
char *_ptr; 
#line 58 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
int _cnt; 
#line 59 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
char *_base; 
#line 60 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
int _flag; 
#line 61 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
int _file; 
#line 62 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
int _charbuf; 
#line 63 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
int _bufsiz; 
#line 64 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
char *_tmpfname; 
#line 65 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
}; }
#line 66 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { typedef _iobuf FILE; }
#line 129 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { FILE *__cdecl __iob_func(); } 
#line 145 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { typedef __int64 fpos_t; }
#line 186 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _filbuf(FILE * ); } 
#line 187 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _flsbuf(int , FILE * ); } 
#line 192 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { FILE *__cdecl _fsopen(const char * , const char * , int ); } 
#line 195 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { void __cdecl clearerr(FILE * ); } 
#line 197 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { errno_t __cdecl clearerr_s(FILE * ); } 
#line 199 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl fclose(FILE * ); } 
#line 200 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _fcloseall(); } 
#line 205 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { FILE *__cdecl _fdopen(int , const char * ); } 
#line 208 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl feof(FILE * ); } 
#line 209 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl ferror(FILE * ); } 
#line 210 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl fflush(FILE * ); } 
#line 211 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl fgetc(FILE * ); } 
#line 212 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _fgetchar(); } 
#line 213 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl fgetpos(FILE * , fpos_t * ); } 
#line 214 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { char *__cdecl fgets(char * , int , FILE * ); } 
#line 219 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _fileno(FILE * ); } 
#line 227 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { char *__cdecl _tempnam(const char * , const char * ); } 
#line 233 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _flushall(); } 
#line 234 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { FILE *__cdecl fopen(const char * , const char * ); } 
#line 236 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { errno_t __cdecl fopen_s(FILE ** , const char * , const char * ); } 
#line 238 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl fprintf(FILE * , const char * , ...); } 
#line 240 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl fprintf_s(FILE * , const char * , ...); } 
#line 242 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl fputc(int , FILE * ); } 
#line 243 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _fputchar(int ); } 
#line 244 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl fputs(const char * , FILE * ); } 
#line 245 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { size_t __cdecl fread(void * , size_t , size_t , FILE * ); } 
#line 247 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { size_t __cdecl fread_s(void * , size_t , size_t , size_t , FILE * ); } 
#line 249 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { FILE *__cdecl freopen(const char * , const char * , FILE * ); } 
#line 251 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { errno_t __cdecl freopen_s(FILE ** , const char * , const char * , FILE * ); } 
#line 253 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl fscanf(FILE * , const char * , ...); } 
#line 254 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _fscanf_l(FILE * , const char * , _locale_t , ...); } 
#pragma warning(push)
#pragma warning(disable:6530)
#line 258 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl fscanf_s(FILE * , const char * , ...); } 
#line 260 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _fscanf_s_l(FILE * , const char * , _locale_t , ...); } 
#pragma warning(pop)
extern "C" { int __cdecl fsetpos(FILE * , const fpos_t * ); } 
#line 263 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl fseek(FILE * , long , int ); } 
#line 264 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { long __cdecl ftell(FILE * ); } 
#line 266 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _fseeki64(FILE * , __int64 , int ); } 
#line 267 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { __int64 __cdecl _ftelli64(FILE * ); } 
#line 269 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { size_t __cdecl fwrite(const void * , size_t , size_t , FILE * ); } 
#line 270 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl getc(FILE * ); } 
#line 271 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl getchar(); } 
#line 272 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _getmaxstdio(); } 
#line 274 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { char *__cdecl gets_s(char * , rsize_t ); } 
#line 276 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
template < size_t _Size > inline char * __cdecl gets_s ( char ( & _Buffer ) [ _Size ] ) throw ( ) { return gets_s ( _Buffer, _Size ); }
#line 277 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { char *__cdecl gets(char * ); } 
#line 278 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _getw(FILE * ); } 
#line 283 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _pclose(FILE * ); } 
#line 284 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { FILE *__cdecl _popen(const char * , const char * ); } 
#line 285 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl printf(const char * , ...); } 
#line 287 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl printf_s(const char * , ...); } 
#line 289 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl putc(int , FILE * ); } 
#line 290 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl putchar(int ); } 
#line 291 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl puts(const char * ); } 
#line 292 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _putw(int , FILE * ); } 
#line 295 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl remove(const char * ); } 
#line 296 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl rename(const char * , const char * ); } 
#line 297 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _unlink(const char * ); } 
#line 299 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl unlink(const char * ); } 
#line 302 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { void __cdecl rewind(FILE * ); } 
#line 303 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _rmtmp(); } 
#line 304 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl scanf(const char * , ...); } 
#line 305 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _scanf_l(const char * , _locale_t , ...); } 
#pragma warning(push)
#pragma warning(disable:6530)
#line 309 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl scanf_s(const char * , ...); } 
#line 311 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _scanf_s_l(const char * , _locale_t , ...); } 
#pragma warning(pop)
extern "C" { void __cdecl setbuf(FILE * , char * ); } 
#line 314 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _setmaxstdio(int ); } 
#line 315 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { unsigned __cdecl _set_output_format(unsigned ); } 
#line 316 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { unsigned __cdecl _get_output_format(); } 
#line 317 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl setvbuf(FILE * , char * , int , size_t ); } 
#line 318 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _snprintf_s(char * , size_t , size_t , const char * , ...); } 
#line 319 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
__pragma(warning(push)) __pragma(warning(disable: 4793)) template < size_t _Size > inline int __cdecl _snprintf_s ( char ( & _Dest ) [ _Size ], size_t _MaxCount, const char * _Format, ... ) throw ( ) { va_list _ArgList; ( __va_start ( & _ArgList, _Format ) ); return _vsnprintf_s ( _Dest, _Size, _MaxCount, _Format, _ArgList ); }__pragma(warning(pop)) 
#line 321 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl sprintf_s(char * , size_t , const char * , ...); } 
#line 323 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
__pragma(warning(push)) __pragma(warning(disable: 4793)) template < size_t _Size > inline int __cdecl sprintf_s ( char ( & _Dest ) [ _Size ], const char * _Format, ... ) throw ( ) { va_list _ArgList; ( __va_start ( & _ArgList, _Format ) ); return vsprintf_s ( _Dest, _Size, _Format, _ArgList ); }__pragma(warning(pop)) 
#line 324 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _scprintf(const char * , ...); } 
#line 325 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl sscanf(const char * , const char * , ...); } 
#line 326 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _sscanf_l(const char * , const char * , _locale_t , ...); } 
#pragma warning(push)
#pragma warning(disable:6530)
#line 330 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl sscanf_s(const char * , const char * , ...); } 
#line 332 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _sscanf_s_l(const char * , const char * , _locale_t , ...); } 
#line 333 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _snscanf(const char * , size_t , const char * , ...); } 
#line 334 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _snscanf_l(const char * , size_t , const char * , _locale_t , ...); } 
#line 335 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _snscanf_s(const char * , size_t , const char * , ...); } 
#line 336 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _snscanf_s_l(const char * , size_t , const char * , _locale_t , ...); } 
#pragma warning(pop)
extern "C" { FILE *__cdecl tmpfile(); } 
#line 340 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { errno_t __cdecl tmpfile_s(FILE ** ); } 
#line 341 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { errno_t __cdecl tmpnam_s(char * , rsize_t ); } 
#line 343 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
template < size_t _Size > inline errno_t __cdecl tmpnam_s ( char ( & _Buf ) [ _Size ] ) throw ( ) { return tmpnam_s ( _Buf, _Size ); }
#line 344 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { char *__cdecl tmpnam(char * ); } 
#line 345 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl ungetc(int , FILE * ); } 
#line 346 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl vfprintf(FILE * , const char * , va_list ); } 
#line 348 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl vfprintf_s(FILE * , const char * , va_list ); } 
#line 350 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl vprintf(const char * , va_list ); } 
#line 352 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl vprintf_s(const char * , va_list ); } 
#line 354 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl vsnprintf(char * , size_t , const char * , va_list ); } 
#line 356 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl vsnprintf_s(char * , size_t , size_t , const char * , va_list ); } 
#line 357 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
template < size_t _Size > inline int __cdecl vsnprintf_s ( char ( & _Dest ) [ _Size ], size_t _MaxCount, const char * _Format, va_list _Args ) throw ( ) { return vsnprintf_s ( _Dest, _Size, _MaxCount, _Format, _Args ); }
#line 359 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vsnprintf_s(char * , size_t , size_t , const char * , va_list ); } 
#line 360 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
template < size_t _Size > inline int __cdecl _vsnprintf_s ( char ( & _Dest ) [ _Size ], size_t _MaxCount, const char * _Format, va_list _Args ) throw ( ) { return _vsnprintf_s ( _Dest, _Size, _MaxCount, _Format, _Args ); }
#pragma warning(push)
#pragma warning(disable:4793)
extern "C" { int __cdecl _snprintf(char * , size_t , const char * , ...); } extern "C" { int __cdecl _vsnprintf(char * , size_t , const char * , va_list ); } 
#pragma warning(pop)
#line 366 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl vsprintf_s(char * , size_t , const char * , va_list ); } 
#line 367 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
template < size_t _Size > inline int __cdecl vsprintf_s ( char ( & _Dest ) [ _Size ], const char * _Format, va_list _Args ) throw ( ) { return vsprintf_s ( _Dest, _Size, _Format, _Args ); }
#line 369 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
#pragma warning(push)
#pragma warning(disable:4793)
extern "C" { int __cdecl sprintf(char * , const char * , ...); } extern "C" { int __cdecl vsprintf(char * , const char * , va_list ); } 
#pragma warning(pop)
extern "C" { int __cdecl _vscprintf(const char * , va_list ); } 
#line 374 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _snprintf_c(char * , size_t , const char * , ...); } 
#line 375 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vsnprintf_c(char * , size_t , const char * , va_list ); } 
#line 377 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _fprintf_p(FILE * , const char * , ...); } 
#line 378 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _printf_p(const char * , ...); } 
#line 379 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _sprintf_p(char * , size_t , const char * , ...); } 
#line 380 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vfprintf_p(FILE * , const char * , va_list ); } 
#line 381 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vprintf_p(const char * , va_list ); } 
#line 382 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vsprintf_p(char * , size_t , const char * , va_list ); } 
#line 383 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _scprintf_p(const char * , ...); } 
#line 384 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vscprintf_p(const char * , va_list ); } 
#line 385 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _set_printf_count_output(int ); } 
#line 386 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _get_printf_count_output(); } 
#line 388 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _printf_l(const char * , _locale_t , ...); } 
#line 389 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _printf_p_l(const char * , _locale_t , ...); } 
#line 390 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _printf_s_l(const char * , _locale_t , ...); } 
#line 391 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vprintf_l(const char * , _locale_t , va_list ); } 
#line 392 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vprintf_p_l(const char * , _locale_t , va_list ); } 
#line 393 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vprintf_s_l(const char * , _locale_t , va_list ); } 
#line 395 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _fprintf_l(FILE * , const char * , _locale_t , ...); } 
#line 396 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _fprintf_p_l(FILE * , const char * , _locale_t , ...); } 
#line 397 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _fprintf_s_l(FILE * , const char * , _locale_t , ...); } 
#line 398 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vfprintf_l(FILE * , const char * , _locale_t , va_list ); } 
#line 399 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vfprintf_p_l(FILE * , const char * , _locale_t , va_list ); } 
#line 400 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vfprintf_s_l(FILE * , const char * , _locale_t , va_list ); } 
#line 402 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _sprintf_l(char * , const char * , _locale_t , ...); } 
#line 403 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _sprintf_p_l(char * , size_t , const char * , _locale_t , ...); } 
#line 404 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _sprintf_s_l(char * , size_t , const char * , _locale_t , ...); } 
#line 405 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vsprintf_l(char * , const char * , _locale_t, va_list ); } 
#line 406 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vsprintf_p_l(char * , size_t , const char * , _locale_t , va_list ); } 
#line 407 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vsprintf_s_l(char * , size_t , const char * , _locale_t , va_list ); } 
#line 409 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _scprintf_l(const char * , _locale_t , ...); } 
#line 410 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _scprintf_p_l(const char * , _locale_t , ...); } 
#line 411 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vscprintf_l(const char * , _locale_t , va_list ); } 
#line 412 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vscprintf_p_l(const char * , _locale_t , va_list ); } 
#line 414 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _snprintf_l(char * , size_t , const char * , _locale_t , ...); } 
#line 415 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _snprintf_c_l(char * , size_t , const char * , _locale_t , ...); } 
#line 416 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _snprintf_s_l(char * , size_t , size_t , const char * , _locale_t , ...); } 
#line 417 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vsnprintf_l(char * , size_t , const char * , _locale_t , va_list ); } 
#line 418 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vsnprintf_c_l(char * , size_t , const char *, _locale_t , va_list ); } 
#line 419 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vsnprintf_s_l(char * , size_t , size_t , const char * , _locale_t , va_list ); } 
#line 432 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { FILE *__cdecl _wfsopen(const __wchar_t * , const __wchar_t * , int ); } 
#line 435 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { wint_t __cdecl fgetwc(FILE * ); } 
#line 436 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { wint_t __cdecl _fgetwchar(); } 
#line 437 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { wint_t __cdecl fputwc(__wchar_t , FILE * ); } 
#line 438 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { wint_t __cdecl _fputwchar(__wchar_t ); } 
#line 439 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { wint_t __cdecl getwc(FILE * ); } 
#line 440 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { inline wint_t __cdecl getwchar(); } 
#line 441 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { wint_t __cdecl putwc(__wchar_t , FILE * ); } 
#line 442 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { inline wint_t __cdecl putwchar(__wchar_t ); } 
#line 443 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { wint_t __cdecl ungetwc(wint_t , FILE * ); } 
#line 445 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { __wchar_t *__cdecl fgetws(__wchar_t * , int , FILE * ); } 
#line 446 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl fputws(const __wchar_t * , FILE * ); } 
#line 447 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { __wchar_t *__cdecl _getws_s(__wchar_t * , size_t ); } 
#line 448 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
template < size_t _Size > inline wchar_t * __cdecl _getws_s ( wchar_t ( & _String ) [ _Size ] ) throw ( ) { return _getws_s ( _String, _Size ); }
#line 449 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { __wchar_t *__cdecl _getws(__wchar_t * ); } 
#line 450 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _putws(const __wchar_t * ); } 
#line 452 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl fwprintf(FILE * , const __wchar_t * , ...); } 
#line 454 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl fwprintf_s(FILE * , const __wchar_t * , ...); } 
#line 456 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl wprintf(const __wchar_t * , ...); } 
#line 458 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl wprintf_s(const __wchar_t * , ...); } 
#line 460 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _scwprintf(const __wchar_t * , ...); } 
#line 461 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl vfwprintf(FILE * , const __wchar_t * , va_list ); } 
#line 463 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl vfwprintf_s(FILE * , const __wchar_t * , va_list ); } 
#line 465 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl vwprintf(const __wchar_t * , va_list ); } 
#line 467 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl vwprintf_s(const __wchar_t * , va_list ); } 
#line 471 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl swprintf_s(__wchar_t * , size_t , const __wchar_t * , ...); } 
#line 473 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
__pragma(warning(push)) __pragma(warning(disable: 4793)) template < size_t _Size > inline int __cdecl swprintf_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Format, ... ) throw ( ) { va_list _ArgList; ( __va_start ( & _ArgList, _Format ) ); return vswprintf_s ( _Dest, _Size, _Format, _ArgList ); }__pragma(warning(pop)) 
#line 475 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl vswprintf_s(__wchar_t * , size_t , const __wchar_t * , va_list ); } 
#line 477 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
template < size_t _Size > inline int __cdecl vswprintf_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Format, va_list _Args ) throw ( ) { return vswprintf_s ( _Dest, _Size, _Format, _Args ); }
#line 479 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _swprintf_c(__wchar_t * , size_t , const __wchar_t * , ...); } 
#line 480 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vswprintf_c(__wchar_t * , size_t , const __wchar_t * , va_list ); } 
#line 482 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _snwprintf_s(__wchar_t * , size_t , size_t , const __wchar_t * , ...); } 
#line 483 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
__pragma(warning(push)) __pragma(warning(disable: 4793)) template < size_t _Size > inline int __cdecl _snwprintf_s ( wchar_t ( & _Dest ) [ _Size ], size_t _Count, const wchar_t * _Format, ... ) throw ( ) { va_list _ArgList; ( __va_start ( & _ArgList, _Format ) ); return _vsnwprintf_s ( _Dest, _Size, _Count, _Format, _ArgList ); }__pragma(warning(pop)) 
#line 484 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vsnwprintf_s(__wchar_t * , size_t , size_t , const __wchar_t * , va_list ); } 
#line 485 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
template < size_t _Size > inline int __cdecl _vsnwprintf_s ( wchar_t ( & _Dest ) [ _Size ], size_t _Count, const wchar_t * _Format, va_list _Args ) throw ( ) { return _vsnwprintf_s ( _Dest, _Size, _Count, _Format, _Args ); }
#pragma warning(push)
#pragma warning(disable:4793)
extern "C" { int __cdecl _snwprintf(__wchar_t * , size_t , const __wchar_t * , ...); } extern "C" { int __cdecl _vsnwprintf(__wchar_t * , size_t , const __wchar_t * , va_list ); } 
#pragma warning(pop)
#line 491 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _fwprintf_p(FILE * , const __wchar_t * , ...); } 
#line 492 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _wprintf_p(const __wchar_t * , ...); } 
#line 493 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vfwprintf_p(FILE * , const __wchar_t * , va_list ); } 
#line 494 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vwprintf_p(const __wchar_t * , va_list ); } 
#line 495 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _swprintf_p(__wchar_t * , size_t , const __wchar_t * , ...); } 
#line 496 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vswprintf_p(__wchar_t * , size_t , const __wchar_t * , va_list ); } 
#line 497 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _scwprintf_p(const __wchar_t * , ...); } 
#line 498 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vscwprintf_p(const __wchar_t * , va_list ); } 
#line 500 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _wprintf_l(const __wchar_t * , _locale_t , ...); } 
#line 501 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _wprintf_p_l(const __wchar_t * , _locale_t , ...); } 
#line 502 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _wprintf_s_l(const __wchar_t * , _locale_t , ...); } 
#line 503 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vwprintf_l(const __wchar_t * , _locale_t , va_list ); } 
#line 504 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vwprintf_p_l(const __wchar_t * , _locale_t , va_list ); } 
#line 505 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vwprintf_s_l(const __wchar_t * , _locale_t , va_list ); } 
#line 507 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _fwprintf_l(FILE * , const __wchar_t * , _locale_t , ...); } 
#line 508 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _fwprintf_p_l(FILE * , const __wchar_t * , _locale_t , ...); } 
#line 509 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _fwprintf_s_l(FILE * , const __wchar_t * , _locale_t , ...); } 
#line 510 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vfwprintf_l(FILE * , const __wchar_t * , _locale_t , va_list ); } 
#line 511 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vfwprintf_p_l(FILE * , const __wchar_t * , _locale_t , va_list ); } 
#line 512 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vfwprintf_s_l(FILE * , const __wchar_t * , _locale_t , va_list ); } 
#line 514 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _swprintf_c_l(__wchar_t * , size_t , const __wchar_t * , _locale_t , ...); } 
#line 515 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _swprintf_p_l(__wchar_t * , size_t , const __wchar_t * , _locale_t , ...); } 
#line 516 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _swprintf_s_l(__wchar_t * , size_t , const __wchar_t * , _locale_t , ...); } 
#line 517 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vswprintf_c_l(__wchar_t * , size_t , const __wchar_t * , _locale_t , va_list ); } 
#line 518 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vswprintf_p_l(__wchar_t * , size_t , const __wchar_t * , _locale_t , va_list ); } 
#line 519 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vswprintf_s_l(__wchar_t * , size_t , const __wchar_t * , _locale_t , va_list ); } 
#line 521 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _scwprintf_l(const __wchar_t * , _locale_t , ...); } 
#line 522 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _scwprintf_p_l(const __wchar_t * , _locale_t , ...); } 
#line 523 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vscwprintf_p_l(const __wchar_t * , _locale_t , va_list ); } 
#line 525 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _snwprintf_l(__wchar_t * , size_t , const __wchar_t * , _locale_t , ...); } 
#line 526 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _snwprintf_s_l(__wchar_t * , size_t , size_t , const __wchar_t * , _locale_t , ...); } 
#line 527 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vsnwprintf_l(__wchar_t * , size_t , const __wchar_t * , _locale_t , va_list ); } 
#line 528 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vsnwprintf_s_l(__wchar_t * , size_t , size_t , const __wchar_t * , _locale_t , va_list ); } 
#line 542 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
#pragma warning(push)
#pragma warning(disable:4141 4996 4793)
extern "C" { __declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) int __cdecl _swprintf(__wchar_t * , const __wchar_t * , ...); } extern "C" { __declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) int __cdecl _vswprintf(__wchar_t * , const __wchar_t * , va_list ); } 
#line 545 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { __declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) int __cdecl __swprintf_l(__wchar_t * , const __wchar_t * , _locale_t , ...); } extern "C" { __declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) int __cdecl __vswprintf_l(__wchar_t * , const __wchar_t * , _locale_t , va_list ); } 
#pragma warning(pop)
#line 34 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4793 4412 )
extern "C" { static __inline int swprintf(__wchar_t *_String, size_t _Count, const __wchar_t *_Format, ...) 
#line 37 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
{ 
#line 38 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
va_list _Arglist; 
#line 39 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
int _Ret; 
#line 40 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
__va_start(&_Arglist, _Format); 
#line 41 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
_Ret = _vswprintf_c_l(_String, _Count, _Format, 0, _Arglist); 
#line 42 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
_Arglist = ((va_list)0); 
#line 43 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
return _Ret; 
#line 44 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
} } 
#pragma warning( pop )
#line 47 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4412 )
extern "C" { static __inline int __cdecl vswprintf(__wchar_t *_String, size_t _Count, const __wchar_t *_Format, va_list _Ap) 
#line 50 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
{ 
#line 51 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
return _vswprintf_c_l(_String, _Count, _Format, 0, _Ap); 
#line 52 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
} } 
#pragma warning( pop )
#line 58 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4793 4412 )
extern "C" { static __inline int _swprintf_l(__wchar_t *_String, size_t _Count, const __wchar_t *_Format, _locale_t _Plocinfo, ...) 
#line 61 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
{ 
#line 62 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
va_list _Arglist; 
#line 63 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
int _Ret; 
#line 64 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
__va_start(&_Arglist, _Plocinfo); 
#line 65 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
_Ret = _vswprintf_c_l(_String, _Count, _Format, _Plocinfo, _Arglist); 
#line 66 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
_Arglist = ((va_list)0); 
#line 67 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
return _Ret; 
#line 68 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
} } 
#pragma warning( pop )
#line 71 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4412 )
extern "C" { static __inline int __cdecl _vswprintf_l(__wchar_t *_String, size_t _Count, const __wchar_t *_Format, _locale_t _Plocinfo, va_list _Ap) 
#line 74 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
{ 
#line 75 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
return _vswprintf_c_l(_String, _Count, _Format, _Plocinfo, _Ap); 
#line 76 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
} } 
#pragma warning( pop )
#line 80 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4996 )
#line 83 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4793 4141 )
__declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) __inline int swprintf(__wchar_t *_String, const __wchar_t *_Format, ...) 
#line 86 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
{ 
#line 87 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
va_list _Arglist; 
#line 88 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
__va_start(&_Arglist, _Format); 
#line 89 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
int _Ret = _vswprintf(_String, _Format, _Arglist); 
#line 90 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
_Arglist = ((va_list)0); 
#line 91 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
return _Ret; 
#line 92 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
} 
#pragma warning( pop )
#line 95 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4141 )
__declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) __inline int __cdecl vswprintf(__wchar_t *_String, const __wchar_t *_Format, va_list _Ap) 
#line 98 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
{ 
#line 99 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
return _vswprintf(_String, _Format, _Ap); 
#line 100 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
} 
#pragma warning( pop )
#line 103 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4793 4141 )
__declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) __inline int _swprintf_l(__wchar_t *_String, const __wchar_t *_Format, _locale_t _Plocinfo, ...) 
#line 106 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
{ 
#line 107 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
va_list _Arglist; 
#line 108 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
__va_start(&_Arglist, _Plocinfo); 
#line 109 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
int _Ret = __vswprintf_l(_String, _Format, _Plocinfo, _Arglist); 
#line 110 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
_Arglist = ((va_list)0); 
#line 111 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
return _Ret; 
#line 112 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
} 
#pragma warning( pop )
#line 115 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4141 )
__declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) __inline int __cdecl _vswprintf_l(__wchar_t *_String, const __wchar_t *_Format, _locale_t _Plocinfo, va_list _Ap) 
#line 118 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
{ 
#line 119 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
return __vswprintf_l(_String, _Format, _Plocinfo, _Ap); 
#line 120 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
} 
#pragma warning( pop )
#line 123 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\swprintf.inl"
#pragma warning( pop )
#line 566 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { __wchar_t *__cdecl _wtempnam(const __wchar_t * , const __wchar_t * ); } 
#line 572 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vscwprintf(const __wchar_t * , va_list ); } 
#line 573 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _vscwprintf_l(const __wchar_t * , _locale_t , va_list ); } 
#line 574 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl fwscanf(FILE * , const __wchar_t * , ...); } 
#line 575 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _fwscanf_l(FILE * , const __wchar_t * , _locale_t , ...); } 
#pragma warning(push)
#pragma warning(disable:6530)
#line 579 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl fwscanf_s(FILE * , const __wchar_t * , ...); } 
#line 581 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _fwscanf_s_l(FILE * , const __wchar_t * , _locale_t , ...); } 
#line 582 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl swscanf(const __wchar_t * , const __wchar_t * , ...); } 
#line 583 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _swscanf_l(const __wchar_t * , const __wchar_t * , _locale_t , ...); } 
#line 585 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl swscanf_s(const __wchar_t * , const __wchar_t * , ...); } 
#line 587 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _swscanf_s_l(const __wchar_t * , const __wchar_t * , _locale_t , ...); } 
#line 588 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _snwscanf(const __wchar_t * , size_t , const __wchar_t * , ...); } 
#line 589 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _snwscanf_l(const __wchar_t * , size_t , const __wchar_t * , _locale_t , ...); } 
#line 590 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _snwscanf_s(const __wchar_t * , size_t , const __wchar_t * , ...); } 
#line 591 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _snwscanf_s_l(const __wchar_t * , size_t , const __wchar_t * , _locale_t , ...); } 
#line 592 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl wscanf(const __wchar_t * , ...); } 
#line 593 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _wscanf_l(const __wchar_t * , _locale_t , ...); } 
#line 595 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl wscanf_s(const __wchar_t * , ...); } 
#line 597 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _wscanf_s_l(const __wchar_t * , _locale_t , ...); } 
#pragma warning(pop)
#line 600 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { FILE *__cdecl _wfdopen(int , const __wchar_t * ); } 
#line 601 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { FILE *__cdecl _wfopen(const __wchar_t * , const __wchar_t * ); } 
#line 602 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { errno_t __cdecl _wfopen_s(FILE ** , const __wchar_t * , const __wchar_t * ); } 
#line 603 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { FILE *__cdecl _wfreopen(const __wchar_t * , const __wchar_t * , FILE * ); } 
#line 604 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { errno_t __cdecl _wfreopen_s(FILE ** , const __wchar_t * , const __wchar_t * , FILE * ); } 
#line 610 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { FILE *__cdecl _wpopen(const __wchar_t * , const __wchar_t * ); } 
#line 611 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _wremove(const __wchar_t * ); } 
#line 612 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { errno_t __cdecl _wtmpnam_s(__wchar_t * , size_t ); } 
#line 613 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
template < size_t _Size > inline errno_t __cdecl _wtmpnam_s ( wchar_t ( & _Buffer ) [ _Size ] ) throw ( ) { return _wtmpnam_s ( _Buffer, _Size ); }
#line 614 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { __wchar_t *__cdecl _wtmpnam(__wchar_t * ); } 
#line 616 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { wint_t __cdecl _fgetwc_nolock(FILE * ); } 
#line 617 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { wint_t __cdecl _fputwc_nolock(__wchar_t , FILE * ); } 
#line 618 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { wint_t __cdecl _ungetwc_nolock(wint_t , FILE * ); } 
#line 626 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { inline wint_t __cdecl getwchar() 
#line 627 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
{ return fgetwc(&(__iob_func()[0])); } } 
#line 628 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { inline wint_t __cdecl putwchar(__wchar_t _C) 
#line 629 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
{ return fputwc(_C, &(__iob_func()[1])); } } 
#line 675 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { void __cdecl _lock_file(FILE * ); } 
#line 676 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { void __cdecl _unlock_file(FILE * ); } 
#line 678 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _fclose_nolock(FILE * ); } 
#line 679 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _fflush_nolock(FILE * ); } 
#line 680 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { size_t __cdecl _fread_nolock(void * , size_t , size_t , FILE * ); } 
#line 681 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { size_t __cdecl _fread_nolock_s(void * , size_t , size_t , size_t , FILE * ); } 
#line 682 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _fseek_nolock(FILE * , long , int ); } 
#line 683 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { long __cdecl _ftell_nolock(FILE * ); } 
#line 684 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _fseeki64_nolock(FILE * , __int64 , int ); } 
#line 685 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { __int64 __cdecl _ftelli64_nolock(FILE * ); } 
#line 686 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { size_t __cdecl _fwrite_nolock(const void * , size_t , size_t , FILE * ); } 
#line 687 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl _ungetc_nolock(int , FILE * ); } 
#line 714 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { char *__cdecl tempnam(const char * , const char * ); } 
#line 720 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl fcloseall(); } 
#line 721 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { FILE *__cdecl fdopen(int , const char * ); } 
#line 722 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl fgetchar(); } 
#line 723 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl fileno(FILE * ); } 
#line 724 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl flushall(); } 
#line 725 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl fputchar(int ); } 
#line 726 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl getw(FILE * ); } 
#line 727 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl putw(int , FILE * ); } 
#line 728 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
extern "C" { int __cdecl rmtmp(); } 
#line 736 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\stdio.h"
#pragma pack ( pop )
#line 168 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" void mexErrMsgTxt(const char * ); 
#line 177 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" void mexErrMsgIdAndTxt(const char * , const char * , ...); 
#line 188 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" void mexWarnMsgTxt(const char * ); 
#line 199 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" void mexWarnMsgIdAndTxt(const char * , const char * , ...); 
#line 209 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" int mexPrintf(const char * , ...); 
#line 224 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" void mexMakeArrayPersistent(mxArray * ); 
#line 234 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" void mexMakeMemoryPersistent(void * ); 
#line 240 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" int mexSet(double , const char * , mxArray * ); 
#line 244 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" const mxArray *mexGet(double , const char * ); 
#line 250 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" int mexCallMATLAB(int , mxArray * [], int , mxArray * [], const char * ); 
#line 262 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" mxArray *mexCallMATLABWithTrap(int , mxArray * [], int , mxArray * [], const char * ); 
#line 276 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" void mexSetTrapFlag(int ); 
#line 283 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" void mexPrintAssertion(const char * , const char * , int , const char * ); 
#line 293 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" bool mexIsGlobal(const mxArray * ); 
#line 300 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" int mexPutVariable(const char * , const char * , const mxArray * ); 
#line 311 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" const mxArray *mexGetVariablePtr(const char * , const char * ); 
#line 321 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" mxArray *mexGetVariable(const char * , const char * ); 
#line 330 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" void mexLock(); 
#line 336 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" void mexUnlock(); 
#line 342 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" bool mexIsLocked(); 
#line 348 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" const char *mexFunctionName(); 
#line 355 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" int mexEvalString(const char * ); 
#line 364 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" mxArray *mexEvalStringWithTrap(const char * ); 
#line 372 "C:/Program Files/MATLAB/R2011b/extern/include\\mex.h"
extern "C" int mexAtExit(mex_exit_fn ); 
#line 28 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
typedef unsigned uint; 
#line 29 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
typedef unsigned short ushort; 
#line 68 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 make_float2(float s) 
#line 69 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 70 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2(s, s); 
#line 71 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 72 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 make_float2(float3 a) 
#line 73 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 74 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2(a.x, a.y); 
#line 75 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 76 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 make_float2(int2 a) 
#line 77 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 78 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2((float)(a.x), (float)(a.y)); 
#line 79 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 80 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 make_float2(uint2 a) 
#line 81 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 82 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2((float)(a.x), (float)(a.y)); 
#line 83 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 85 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int2 make_int2(int s) 
#line 86 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 87 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int2(s, s); 
#line 88 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 89 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int2 make_int2(int3 a) 
#line 90 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 91 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int2(a.x, a.y); 
#line 92 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 93 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int2 make_int2(uint2 a) 
#line 94 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 95 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int2((int)(a.x), (int)(a.y)); 
#line 96 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 97 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int2 make_int2(float2 a) 
#line 98 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 99 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int2((int)(a.x), (int)(a.y)); 
#line 100 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 102 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint2 make_uint2(uint s) 
#line 103 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 104 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint2(s, s); 
#line 105 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 106 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint2 make_uint2(uint3 a) 
#line 107 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 108 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint2(a.x, a.y); 
#line 109 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 110 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint2 make_uint2(int2 a) 
#line 111 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 112 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint2((uint)(a.x), (uint)(a.y)); 
#line 113 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 115 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 make_float3(float s) 
#line 116 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 117 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3(s, s, s); 
#line 118 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 119 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 make_float3(float2 a) 
#line 120 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 121 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3(a.x, a.y, (0.0F)); 
#line 122 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 123 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 make_float3(float2 a, float s) 
#line 124 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 125 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3(a.x, a.y, s); 
#line 126 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 127 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 make_float3(float4 a) 
#line 128 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 129 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3(a.x, a.y, a.z); 
#line 130 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 131 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 make_float3(int3 a) 
#line 132 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 133 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3((float)(a.x), (float)(a.y), (float)(a.z)); 
#line 134 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 135 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 make_float3(uint3 a) 
#line 136 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 137 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3((float)(a.x), (float)(a.y), (float)(a.z)); 
#line 138 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 140 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int3 make_int3(int s) 
#line 141 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 142 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int3(s, s, s); 
#line 143 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 144 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int3 make_int3(int2 a) 
#line 145 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 146 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int3(a.x, a.y, 0); 
#line 147 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 148 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int3 make_int3(int2 a, int s) 
#line 149 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 150 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int3(a.x, a.y, s); 
#line 151 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 152 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int3 make_int3(uint3 a) 
#line 153 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 154 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int3((int)(a.x), (int)(a.y), (int)(a.z)); 
#line 155 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 156 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int3 make_int3(float3 a) 
#line 157 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 158 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int3((int)(a.x), (int)(a.y), (int)(a.z)); 
#line 159 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 161 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint3 make_uint3(uint s) 
#line 162 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 163 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint3(s, s, s); 
#line 164 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 165 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint3 make_uint3(uint2 a) 
#line 166 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 167 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint3(a.x, a.y, 0); 
#line 168 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 169 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint3 make_uint3(uint2 a, uint s) 
#line 170 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 171 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint3(a.x, a.y, s); 
#line 172 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 173 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint3 make_uint3(uint4 a) 
#line 174 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 175 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint3(a.x, a.y, a.z); 
#line 176 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 177 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint3 make_uint3(int3 a) 
#line 178 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 179 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint3((uint)(a.x), (uint)(a.y), (uint)(a.z)); 
#line 180 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 182 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 make_float4(float s) 
#line 183 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 184 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4(s, s, s, s); 
#line 185 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 186 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 make_float4(float3 a) 
#line 187 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 188 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4(a.x, a.y, a.z, (0.0F)); 
#line 189 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 190 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 make_float4(float3 a, float w) 
#line 191 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 192 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4(a.x, a.y, a.z, w); 
#line 193 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 194 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 make_float4(int4 a) 
#line 195 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 196 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4((float)(a.x), (float)(a.y), (float)(a.z), (float)(a.w)); 
#line 197 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 198 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 make_float4(uint4 a) 
#line 199 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 200 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4((float)(a.x), (float)(a.y), (float)(a.z), (float)(a.w)); 
#line 201 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 203 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int4 make_int4(int s) 
#line 204 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 205 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int4(s, s, s, s); 
#line 206 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 207 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int4 make_int4(int3 a) 
#line 208 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 209 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int4(a.x, a.y, a.z, 0); 
#line 210 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 211 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int4 make_int4(int3 a, int w) 
#line 212 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 213 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int4(a.x, a.y, a.z, w); 
#line 214 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 215 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int4 make_int4(uint4 a) 
#line 216 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 217 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int4((int)(a.x), (int)(a.y), (int)(a.z), (int)(a.w)); 
#line 218 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 219 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int4 make_int4(float4 a) 
#line 220 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 221 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int4((int)(a.x), (int)(a.y), (int)(a.z), (int)(a.w)); 
#line 222 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 225 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint4 make_uint4(uint s) 
#line 226 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 227 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint4(s, s, s, s); 
#line 228 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 229 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint4 make_uint4(uint3 a) 
#line 230 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 231 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint4(a.x, a.y, a.z, 0); 
#line 232 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 233 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint4 make_uint4(uint3 a, uint w) 
#line 234 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 235 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint4(a.x, a.y, a.z, w); 
#line 236 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 237 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint4 make_uint4(int4 a) 
#line 238 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 239 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint4((uint)(a.x), (uint)(a.y), (uint)(a.z), (uint)(a.w)); 
#line 240 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 246 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 operator-(float2 &a) 
#line 247 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 248 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2(-(a.x), -(a.y)); 
#line 249 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 250 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int2 operator-(int2 &a) 
#line 251 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 252 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int2(-(a.x), -(a.y)); 
#line 253 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 254 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 operator-(float3 &a) 
#line 255 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 256 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3(-(a.x), -(a.y), -(a.z)); 
#line 257 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 258 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int3 operator-(int3 &a) 
#line 259 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 260 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int3(-(a.x), -(a.y), -(a.z)); 
#line 261 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 262 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 operator-(float4 &a) 
#line 263 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 264 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4(-(a.x), -(a.y), -(a.z), -(a.w)); 
#line 265 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 266 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int4 operator-(int4 &a) 
#line 267 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 268 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int4(-(a.x), -(a.y), -(a.z), -(a.w)); 
#line 269 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 275 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 operator+(float2 a, float2 b) 
#line 276 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 277 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2((a.x) + (b.x), (a.y) + (b.y)); 
#line 278 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 279 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator+=(float2 &a, float2 b) 
#line 280 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 281 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) += (b.x); (a.y) += (b.y); 
#line 282 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 283 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 operator+(float2 a, float b) 
#line 284 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 285 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2((a.x) + b, (a.y) + b); 
#line 286 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 287 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 operator+(float b, float2 a) 
#line 288 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 289 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2((a.x) + b, (a.y) + b); 
#line 290 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 291 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator+=(float2 &a, float b) 
#line 292 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 293 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) += b; (a.y) += b; 
#line 294 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 296 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int2 operator+(int2 a, int2 b) 
#line 297 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 298 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int2((a.x) + (b.x), (a.y) + (b.y)); 
#line 299 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 300 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator+=(int2 &a, int2 b) 
#line 301 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 302 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) += (b.x); (a.y) += (b.y); 
#line 303 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 304 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int2 operator+(int2 a, int b) 
#line 305 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 306 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int2((a.x) + b, (a.y) + b); 
#line 307 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 308 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int2 operator+(int b, int2 a) 
#line 309 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 310 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int2((a.x) + b, (a.y) + b); 
#line 311 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 312 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator+=(int2 &a, int b) 
#line 313 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 314 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) += b; (a.y) += b; 
#line 315 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 317 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint2 operator+(uint2 a, uint2 b) 
#line 318 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 319 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint2((a.x) + (b.x), (a.y) + (b.y)); 
#line 320 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 321 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator+=(uint2 &a, uint2 b) 
#line 322 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 323 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) += (b.x); (a.y) += (b.y); 
#line 324 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 325 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint2 operator+(uint2 a, uint b) 
#line 326 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 327 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint2((a.x) + b, (a.y) + b); 
#line 328 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 329 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint2 operator+(uint b, uint2 a) 
#line 330 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 331 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint2((a.x) + b, (a.y) + b); 
#line 332 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 333 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator+=(uint2 &a, uint b) 
#line 334 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 335 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) += b; (a.y) += b; 
#line 336 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 339 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 operator+(float3 a, float3 b) 
#line 340 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 341 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3((a.x) + (b.x), (a.y) + (b.y), (a.z) + (b.z)); 
#line 342 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 343 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator+=(float3 &a, float3 b) 
#line 344 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 345 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) += (b.x); (a.y) += (b.y); (a.z) += (b.z); 
#line 346 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 347 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 operator+(float3 a, float b) 
#line 348 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 349 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3((a.x) + b, (a.y) + b, (a.z) + b); 
#line 350 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 351 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator+=(float3 &a, float b) 
#line 352 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 353 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) += b; (a.y) += b; (a.z) += b; 
#line 354 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 356 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int3 operator+(int3 a, int3 b) 
#line 357 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 358 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int3((a.x) + (b.x), (a.y) + (b.y), (a.z) + (b.z)); 
#line 359 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 360 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator+=(int3 &a, int3 b) 
#line 361 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 362 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) += (b.x); (a.y) += (b.y); (a.z) += (b.z); 
#line 363 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 364 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int3 operator+(int3 a, int b) 
#line 365 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 366 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int3((a.x) + b, (a.y) + b, (a.z) + b); 
#line 367 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 368 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator+=(int3 &a, int b) 
#line 369 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 370 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) += b; (a.y) += b; (a.z) += b; 
#line 371 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 373 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint3 operator+(uint3 a, uint3 b) 
#line 374 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 375 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint3((a.x) + (b.x), (a.y) + (b.y), (a.z) + (b.z)); 
#line 376 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 377 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator+=(uint3 &a, uint3 b) 
#line 378 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 379 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) += (b.x); (a.y) += (b.y); (a.z) += (b.z); 
#line 380 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 381 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint3 operator+(uint3 a, uint b) 
#line 382 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 383 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint3((a.x) + b, (a.y) + b, (a.z) + b); 
#line 384 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 385 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator+=(uint3 &a, uint b) 
#line 386 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 387 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) += b; (a.y) += b; (a.z) += b; 
#line 388 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 390 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int3 operator+(int b, int3 a) 
#line 391 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 392 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int3((a.x) + b, (a.y) + b, (a.z) + b); 
#line 393 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 394 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint3 operator+(uint b, uint3 a) 
#line 395 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 396 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint3((a.x) + b, (a.y) + b, (a.z) + b); 
#line 397 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 398 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 operator+(float b, float3 a) 
#line 399 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 400 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3((a.x) + b, (a.y) + b, (a.z) + b); 
#line 401 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 403 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 operator+(float4 a, float4 b) 
#line 404 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 405 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4((a.x) + (b.x), (a.y) + (b.y), (a.z) + (b.z), (a.w) + (b.w)); 
#line 406 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 407 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator+=(float4 &a, float4 b) 
#line 408 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 409 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) += (b.x); (a.y) += (b.y); (a.z) += (b.z); (a.w) += (b.w); 
#line 410 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 411 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 operator+(float4 a, float b) 
#line 412 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 413 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4((a.x) + b, (a.y) + b, (a.z) + b, (a.w) + b); 
#line 414 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 415 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 operator+(float b, float4 a) 
#line 416 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 417 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4((a.x) + b, (a.y) + b, (a.z) + b, (a.w) + b); 
#line 418 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 419 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator+=(float4 &a, float b) 
#line 420 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 421 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) += b; (a.y) += b; (a.z) += b; (a.w) += b; 
#line 422 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 424 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int4 operator+(int4 a, int4 b) 
#line 425 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 426 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int4((a.x) + (b.x), (a.y) + (b.y), (a.z) + (b.z), (a.w) + (b.w)); 
#line 427 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 428 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator+=(int4 &a, int4 b) 
#line 429 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 430 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) += (b.x); (a.y) += (b.y); (a.z) += (b.z); (a.w) += (b.w); 
#line 431 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 432 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int4 operator+(int4 a, int b) 
#line 433 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 434 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int4((a.x) + b, (a.y) + b, (a.z) + b, (a.w) + b); 
#line 435 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 436 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int4 operator+(int b, int4 a) 
#line 437 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 438 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int4((a.x) + b, (a.y) + b, (a.z) + b, (a.w) + b); 
#line 439 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 440 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator+=(int4 &a, int b) 
#line 441 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 442 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) += b; (a.y) += b; (a.z) += b; (a.w) += b; 
#line 443 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 445 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint4 operator+(uint4 a, uint4 b) 
#line 446 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 447 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint4((a.x) + (b.x), (a.y) + (b.y), (a.z) + (b.z), (a.w) + (b.w)); 
#line 448 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 449 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator+=(uint4 &a, uint4 b) 
#line 450 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 451 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) += (b.x); (a.y) += (b.y); (a.z) += (b.z); (a.w) += (b.w); 
#line 452 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 453 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint4 operator+(uint4 a, uint b) 
#line 454 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 455 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint4((a.x) + b, (a.y) + b, (a.z) + b, (a.w) + b); 
#line 456 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 457 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint4 operator+(uint b, uint4 a) 
#line 458 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 459 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint4((a.x) + b, (a.y) + b, (a.z) + b, (a.w) + b); 
#line 460 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 461 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator+=(uint4 &a, uint b) 
#line 462 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 463 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) += b; (a.y) += b; (a.z) += b; (a.w) += b; 
#line 464 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 470 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 operator-(float2 a, float2 b) 
#line 471 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 472 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2((a.x) - (b.x), (a.y) - (b.y)); 
#line 473 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 474 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator-=(float2 &a, float2 b) 
#line 475 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 476 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) -= (b.x); (a.y) -= (b.y); 
#line 477 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 478 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 operator-(float2 a, float b) 
#line 479 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 480 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2((a.x) - b, (a.y) - b); 
#line 481 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 482 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 operator-(float b, float2 a) 
#line 483 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 484 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2(b - (a.x), b - (a.y)); 
#line 485 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 486 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator-=(float2 &a, float b) 
#line 487 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 488 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) -= b; (a.y) -= b; 
#line 489 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 491 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int2 operator-(int2 a, int2 b) 
#line 492 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 493 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int2((a.x) - (b.x), (a.y) - (b.y)); 
#line 494 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 495 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator-=(int2 &a, int2 b) 
#line 496 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 497 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) -= (b.x); (a.y) -= (b.y); 
#line 498 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 499 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int2 operator-(int2 a, int b) 
#line 500 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 501 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int2((a.x) - b, (a.y) - b); 
#line 502 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 503 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int2 operator-(int b, int2 a) 
#line 504 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 505 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int2(b - (a.x), b - (a.y)); 
#line 506 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 507 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator-=(int2 &a, int b) 
#line 508 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 509 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) -= b; (a.y) -= b; 
#line 510 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 512 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint2 operator-(uint2 a, uint2 b) 
#line 513 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 514 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint2((a.x) - (b.x), (a.y) - (b.y)); 
#line 515 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 516 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator-=(uint2 &a, uint2 b) 
#line 517 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 518 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) -= (b.x); (a.y) -= (b.y); 
#line 519 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 520 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint2 operator-(uint2 a, uint b) 
#line 521 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 522 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint2((a.x) - b, (a.y) - b); 
#line 523 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 524 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint2 operator-(uint b, uint2 a) 
#line 525 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 526 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint2(b - (a.x), b - (a.y)); 
#line 527 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 528 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator-=(uint2 &a, uint b) 
#line 529 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 530 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) -= b; (a.y) -= b; 
#line 531 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 533 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 operator-(float3 a, float3 b) 
#line 534 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 535 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3((a.x) - (b.x), (a.y) - (b.y), (a.z) - (b.z)); 
#line 536 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 537 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator-=(float3 &a, float3 b) 
#line 538 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 539 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) -= (b.x); (a.y) -= (b.y); (a.z) -= (b.z); 
#line 540 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 541 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 operator-(float3 a, float b) 
#line 542 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 543 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3((a.x) - b, (a.y) - b, (a.z) - b); 
#line 544 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 545 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 operator-(float b, float3 a) 
#line 546 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 547 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3(b - (a.x), b - (a.y), b - (a.z)); 
#line 548 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 549 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator-=(float3 &a, float b) 
#line 550 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 551 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) -= b; (a.y) -= b; (a.z) -= b; 
#line 552 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 554 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int3 operator-(int3 a, int3 b) 
#line 555 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 556 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int3((a.x) - (b.x), (a.y) - (b.y), (a.z) - (b.z)); 
#line 557 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 558 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator-=(int3 &a, int3 b) 
#line 559 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 560 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) -= (b.x); (a.y) -= (b.y); (a.z) -= (b.z); 
#line 561 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 562 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int3 operator-(int3 a, int b) 
#line 563 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 564 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int3((a.x) - b, (a.y) - b, (a.z) - b); 
#line 565 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 566 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int3 operator-(int b, int3 a) 
#line 567 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 568 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int3(b - (a.x), b - (a.y), b - (a.z)); 
#line 569 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 570 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator-=(int3 &a, int b) 
#line 571 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 572 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) -= b; (a.y) -= b; (a.z) -= b; 
#line 573 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 575 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint3 operator-(uint3 a, uint3 b) 
#line 576 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 577 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint3((a.x) - (b.x), (a.y) - (b.y), (a.z) - (b.z)); 
#line 578 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 579 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator-=(uint3 &a, uint3 b) 
#line 580 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 581 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) -= (b.x); (a.y) -= (b.y); (a.z) -= (b.z); 
#line 582 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 583 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint3 operator-(uint3 a, uint b) 
#line 584 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 585 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint3((a.x) - b, (a.y) - b, (a.z) - b); 
#line 586 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 587 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint3 operator-(uint b, uint3 a) 
#line 588 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 589 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint3(b - (a.x), b - (a.y), b - (a.z)); 
#line 590 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 591 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator-=(uint3 &a, uint b) 
#line 592 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 593 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) -= b; (a.y) -= b; (a.z) -= b; 
#line 594 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 596 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 operator-(float4 a, float4 b) 
#line 597 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 598 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4((a.x) - (b.x), (a.y) - (b.y), (a.z) - (b.z), (a.w) - (b.w)); 
#line 599 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 600 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator-=(float4 &a, float4 b) 
#line 601 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 602 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) -= (b.x); (a.y) -= (b.y); (a.z) -= (b.z); (a.w) -= (b.w); 
#line 603 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 604 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 operator-(float4 a, float b) 
#line 605 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 606 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4((a.x) - b, (a.y) - b, (a.z) - b, (a.w) - b); 
#line 607 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 608 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator-=(float4 &a, float b) 
#line 609 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 610 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) -= b; (a.y) -= b; (a.z) -= b; (a.w) -= b; 
#line 611 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 613 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int4 operator-(int4 a, int4 b) 
#line 614 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 615 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int4((a.x) - (b.x), (a.y) - (b.y), (a.z) - (b.z), (a.w) - (b.w)); 
#line 616 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 617 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator-=(int4 &a, int4 b) 
#line 618 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 619 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) -= (b.x); (a.y) -= (b.y); (a.z) -= (b.z); (a.w) -= (b.w); 
#line 620 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 621 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int4 operator-(int4 a, int b) 
#line 622 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 623 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int4((a.x) - b, (a.y) - b, (a.z) - b, (a.w) - b); 
#line 624 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 625 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int4 operator-(int b, int4 a) 
#line 626 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 627 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int4(b - (a.x), b - (a.y), b - (a.z), b - (a.w)); 
#line 628 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 629 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator-=(int4 &a, int b) 
#line 630 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 631 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) -= b; (a.y) -= b; (a.z) -= b; (a.w) -= b; 
#line 632 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 634 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint4 operator-(uint4 a, uint4 b) 
#line 635 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 636 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint4((a.x) - (b.x), (a.y) - (b.y), (a.z) - (b.z), (a.w) - (b.w)); 
#line 637 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 638 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator-=(uint4 &a, uint4 b) 
#line 639 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 640 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) -= (b.x); (a.y) -= (b.y); (a.z) -= (b.z); (a.w) -= (b.w); 
#line 641 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 642 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint4 operator-(uint4 a, uint b) 
#line 643 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 644 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint4((a.x) - b, (a.y) - b, (a.z) - b, (a.w) - b); 
#line 645 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 646 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint4 operator-(uint b, uint4 a) 
#line 647 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 648 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint4(b - (a.x), b - (a.y), b - (a.z), b - (a.w)); 
#line 649 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 650 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator-=(uint4 &a, uint b) 
#line 651 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 652 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) -= b; (a.y) -= b; (a.z) -= b; (a.w) -= b; 
#line 653 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 659 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 operator*(float2 a, float2 b) 
#line 660 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 661 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2((a.x) * (b.x), (a.y) * (b.y)); 
#line 662 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 663 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator*=(float2 &a, float2 b) 
#line 664 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 665 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) *= (b.x); (a.y) *= (b.y); 
#line 666 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 667 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 operator*(float2 a, float b) 
#line 668 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 669 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2((a.x) * b, (a.y) * b); 
#line 670 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 671 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 operator*(float b, float2 a) 
#line 672 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 673 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2(b * (a.x), b * (a.y)); 
#line 674 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 675 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator*=(float2 &a, float b) 
#line 676 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 677 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) *= b; (a.y) *= b; 
#line 678 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 680 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int2 operator*(int2 a, int2 b) 
#line 681 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 682 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int2((a.x) * (b.x), (a.y) * (b.y)); 
#line 683 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 684 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator*=(int2 &a, int2 b) 
#line 685 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 686 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) *= (b.x); (a.y) *= (b.y); 
#line 687 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 688 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int2 operator*(int2 a, int b) 
#line 689 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 690 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int2((a.x) * b, (a.y) * b); 
#line 691 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 692 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int2 operator*(int b, int2 a) 
#line 693 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 694 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int2(b * (a.x), b * (a.y)); 
#line 695 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 696 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator*=(int2 &a, int b) 
#line 697 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 698 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) *= b; (a.y) *= b; 
#line 699 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 701 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint2 operator*(uint2 a, uint2 b) 
#line 702 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 703 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint2((a.x) * (b.x), (a.y) * (b.y)); 
#line 704 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 705 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator*=(uint2 &a, uint2 b) 
#line 706 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 707 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) *= (b.x); (a.y) *= (b.y); 
#line 708 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 709 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint2 operator*(uint2 a, uint b) 
#line 710 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 711 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint2((a.x) * b, (a.y) * b); 
#line 712 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 713 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint2 operator*(uint b, uint2 a) 
#line 714 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 715 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint2(b * (a.x), b * (a.y)); 
#line 716 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 717 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator*=(uint2 &a, uint b) 
#line 718 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 719 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) *= b; (a.y) *= b; 
#line 720 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 722 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 operator*(float3 a, float3 b) 
#line 723 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 724 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3((a.x) * (b.x), (a.y) * (b.y), (a.z) * (b.z)); 
#line 725 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 726 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator*=(float3 &a, float3 b) 
#line 727 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 728 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) *= (b.x); (a.y) *= (b.y); (a.z) *= (b.z); 
#line 729 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 730 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 operator*(float3 a, float b) 
#line 731 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 732 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3((a.x) * b, (a.y) * b, (a.z) * b); 
#line 733 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 734 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 operator*(float b, float3 a) 
#line 735 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 736 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3(b * (a.x), b * (a.y), b * (a.z)); 
#line 737 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 738 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator*=(float3 &a, float b) 
#line 739 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 740 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) *= b; (a.y) *= b; (a.z) *= b; 
#line 741 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 743 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int3 operator*(int3 a, int3 b) 
#line 744 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 745 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int3((a.x) * (b.x), (a.y) * (b.y), (a.z) * (b.z)); 
#line 746 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 747 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator*=(int3 &a, int3 b) 
#line 748 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 749 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) *= (b.x); (a.y) *= (b.y); (a.z) *= (b.z); 
#line 750 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 751 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int3 operator*(int3 a, int b) 
#line 752 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 753 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int3((a.x) * b, (a.y) * b, (a.z) * b); 
#line 754 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 755 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int3 operator*(int b, int3 a) 
#line 756 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 757 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int3(b * (a.x), b * (a.y), b * (a.z)); 
#line 758 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 759 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator*=(int3 &a, int b) 
#line 760 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 761 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) *= b; (a.y) *= b; (a.z) *= b; 
#line 762 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 764 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint3 operator*(uint3 a, uint3 b) 
#line 765 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 766 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint3((a.x) * (b.x), (a.y) * (b.y), (a.z) * (b.z)); 
#line 767 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 768 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator*=(uint3 &a, uint3 b) 
#line 769 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 770 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) *= (b.x); (a.y) *= (b.y); (a.z) *= (b.z); 
#line 771 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 772 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint3 operator*(uint3 a, uint b) 
#line 773 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 774 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint3((a.x) * b, (a.y) * b, (a.z) * b); 
#line 775 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 776 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint3 operator*(uint b, uint3 a) 
#line 777 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 778 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint3(b * (a.x), b * (a.y), b * (a.z)); 
#line 779 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 780 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator*=(uint3 &a, uint b) 
#line 781 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 782 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) *= b; (a.y) *= b; (a.z) *= b; 
#line 783 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 785 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 operator*(float4 a, float4 b) 
#line 786 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 787 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4((a.x) * (b.x), (a.y) * (b.y), (a.z) * (b.z), (a.w) * (b.w)); 
#line 788 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 789 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator*=(float4 &a, float4 b) 
#line 790 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 791 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) *= (b.x); (a.y) *= (b.y); (a.z) *= (b.z); (a.w) *= (b.w); 
#line 792 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 793 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 operator*(float4 a, float b) 
#line 794 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 795 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4((a.x) * b, (a.y) * b, (a.z) * b, (a.w) * b); 
#line 796 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 797 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 operator*(float b, float4 a) 
#line 798 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 799 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4(b * (a.x), b * (a.y), b * (a.z), b * (a.w)); 
#line 800 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 801 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator*=(float4 &a, float b) 
#line 802 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 803 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) *= b; (a.y) *= b; (a.z) *= b; (a.w) *= b; 
#line 804 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 806 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int4 operator*(int4 a, int4 b) 
#line 807 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 808 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int4((a.x) * (b.x), (a.y) * (b.y), (a.z) * (b.z), (a.w) * (b.w)); 
#line 809 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 810 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator*=(int4 &a, int4 b) 
#line 811 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 812 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) *= (b.x); (a.y) *= (b.y); (a.z) *= (b.z); (a.w) *= (b.w); 
#line 813 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 814 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int4 operator*(int4 a, int b) 
#line 815 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 816 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int4((a.x) * b, (a.y) * b, (a.z) * b, (a.w) * b); 
#line 817 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 818 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int4 operator*(int b, int4 a) 
#line 819 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 820 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int4(b * (a.x), b * (a.y), b * (a.z), b * (a.w)); 
#line 821 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 822 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator*=(int4 &a, int b) 
#line 823 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 824 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) *= b; (a.y) *= b; (a.z) *= b; (a.w) *= b; 
#line 825 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 827 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint4 operator*(uint4 a, uint4 b) 
#line 828 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 829 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint4((a.x) * (b.x), (a.y) * (b.y), (a.z) * (b.z), (a.w) * (b.w)); 
#line 830 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 831 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator*=(uint4 &a, uint4 b) 
#line 832 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 833 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) *= (b.x); (a.y) *= (b.y); (a.z) *= (b.z); (a.w) *= (b.w); 
#line 834 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 835 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint4 operator*(uint4 a, uint b) 
#line 836 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 837 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint4((a.x) * b, (a.y) * b, (a.z) * b, (a.w) * b); 
#line 838 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 839 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint4 operator*(uint b, uint4 a) 
#line 840 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 841 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint4(b * (a.x), b * (a.y), b * (a.z), b * (a.w)); 
#line 842 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 843 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator*=(uint4 &a, uint b) 
#line 844 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 845 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) *= b; (a.y) *= b; (a.z) *= b; (a.w) *= b; 
#line 846 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 852 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 operator/(float2 a, float2 b) 
#line 853 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 854 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2((a.x) / (b.x), (a.y) / (b.y)); 
#line 855 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 856 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator/=(float2 &a, float2 b) 
#line 857 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 858 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) /= (b.x); (a.y) /= (b.y); 
#line 859 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 860 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 operator/(float2 a, float b) 
#line 861 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 862 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2((a.x) / b, (a.y) / b); 
#line 863 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 864 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator/=(float2 &a, float b) 
#line 865 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 866 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) /= b; (a.y) /= b; 
#line 867 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 868 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 operator/(float b, float2 a) 
#line 869 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 870 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2(b / (a.x), b / (a.y)); 
#line 871 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 873 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 operator/(float3 a, float3 b) 
#line 874 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 875 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3((a.x) / (b.x), (a.y) / (b.y), (a.z) / (b.z)); 
#line 876 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 877 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator/=(float3 &a, float3 b) 
#line 878 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 879 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) /= (b.x); (a.y) /= (b.y); (a.z) /= (b.z); 
#line 880 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 881 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 operator/(float3 a, float b) 
#line 882 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 883 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3((a.x) / b, (a.y) / b, (a.z) / b); 
#line 884 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 885 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator/=(float3 &a, float b) 
#line 886 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 887 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) /= b; (a.y) /= b; (a.z) /= b; 
#line 888 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 889 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 operator/(float b, float3 a) 
#line 890 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 891 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3(b / (a.x), b / (a.y), b / (a.z)); 
#line 892 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 894 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 operator/(float4 a, float4 b) 
#line 895 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 896 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4((a.x) / (b.x), (a.y) / (b.y), (a.z) / (b.z), (a.w) / (b.w)); 
#line 897 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 898 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator/=(float4 &a, float4 b) 
#line 899 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 900 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) /= (b.x); (a.y) /= (b.y); (a.z) /= (b.z); (a.w) /= (b.w); 
#line 901 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 902 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 operator/(float4 a, float b) 
#line 903 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 904 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4((a.x) / b, (a.y) / b, (a.z) / b, (a.w) / b); 
#line 905 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 906 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline void operator/=(float4 &a, float b) 
#line 907 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 908 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
(a.x) /= b; (a.y) /= b; (a.z) /= b; (a.w) /= b; 
#line 909 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 910 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 operator/(float b, float4 a) { 
#line 911 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4(b / (a.x), b / (a.y), b / (a.z), b / (a.w)); 
#line 912 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 918 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 fminf(float2 a, float2 b) 
#line 919 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 920 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2(fminf(a.x, b.x), fminf(a.y, b.y)); 
#line 921 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 922 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 fminf(float3 a, float3 b) 
#line 923 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 924 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3(fminf(a.x, b.x), fminf(a.y, b.y), fminf(a.z, b.z)); 
#line 925 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 926 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 fminf(float4 a, float4 b) 
#line 927 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 928 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4(fminf(a.x, b.x), fminf(a.y, b.y), fminf(a.z, b.z), fminf(a.w, b.w)); 
#line 929 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 931 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int2 min(int2 a, int2 b) 
#line 932 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 933 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int2(min(a.x, b.x), min(a.y, b.y)); 
#line 934 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 935 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int3 min(int3 a, int3 b) 
#line 936 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 937 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int3(min(a.x, b.x), min(a.y, b.y), min(a.z, b.z)); 
#line 938 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 939 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int4 min(int4 a, int4 b) 
#line 940 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 941 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int4(min(a.x, b.x), min(a.y, b.y), min(a.z, b.z), min(a.w, b.w)); 
#line 942 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 944 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint2 min(uint2 a, uint2 b) 
#line 945 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 946 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint2(min(a.x, b.x), min(a.y, b.y)); 
#line 947 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 948 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint3 min(uint3 a, uint3 b) 
#line 949 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 950 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint3(min(a.x, b.x), min(a.y, b.y), min(a.z, b.z)); 
#line 951 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 952 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint4 min(uint4 a, uint4 b) 
#line 953 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 954 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint4(min(a.x, b.x), min(a.y, b.y), min(a.z, b.z), min(a.w, b.w)); 
#line 955 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 961 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 fmaxf(float2 a, float2 b) 
#line 962 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 963 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2(fmaxf(a.x, b.x), fmaxf(a.y, b.y)); 
#line 964 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 965 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 fmaxf(float3 a, float3 b) 
#line 966 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 967 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3(fmaxf(a.x, b.x), fmaxf(a.y, b.y), fmaxf(a.z, b.z)); 
#line 968 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 969 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 fmaxf(float4 a, float4 b) 
#line 970 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 971 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4(fmaxf(a.x, b.x), fmaxf(a.y, b.y), fmaxf(a.z, b.z), fmaxf(a.w, b.w)); 
#line 972 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 974 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int2 max(int2 a, int2 b) 
#line 975 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 976 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int2(max(a.x, b.x), max(a.y, b.y)); 
#line 977 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 978 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int3 max(int3 a, int3 b) 
#line 979 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 980 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int3(max(a.x, b.x), max(a.y, b.y), max(a.z, b.z)); 
#line 981 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 982 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int4 max(int4 a, int4 b) 
#line 983 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 984 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int4(max(a.x, b.x), max(a.y, b.y), max(a.z, b.z), max(a.w, b.w)); 
#line 985 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 987 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint2 max(uint2 a, uint2 b) 
#line 988 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 989 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint2(max(a.x, b.x), max(a.y, b.y)); 
#line 990 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 991 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint3 max(uint3 a, uint3 b) 
#line 992 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 993 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint3(max(a.x, b.x), max(a.y, b.y), max(a.z, b.z)); 
#line 994 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 995 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint4 max(uint4 a, uint4 b) 
#line 996 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 997 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint4(max(a.x, b.x), max(a.y, b.y), max(a.z, b.z), max(a.w, b.w)); 
#line 998 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1005 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float lerp(float a, float b, float t) 
#line 1006 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1007 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return a + (t * (b - a)); 
#line 1008 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1009 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 lerp(float2 a, float2 b, float t) 
#line 1010 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1011 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return (a + ((t * ((b - a))))); 
#line 1012 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1013 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 lerp(float3 a, float3 b, float t) 
#line 1014 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1015 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return (a + ((t * ((b - a))))); 
#line 1016 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1017 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 lerp(float4 a, float4 b, float t) 
#line 1018 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1019 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return (a + ((t * ((b - a))))); 
#line 1020 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1027 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float clamp(float f, float a, float b) 
#line 1028 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1029 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return fmaxf(a, fminf(f, b)); 
#line 1030 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1031 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int clamp(int f, int a, int b) 
#line 1032 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1033 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return max(a, min(f, b)); 
#line 1034 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1035 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint clamp(uint f, uint a, uint b) 
#line 1036 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1037 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return max(a, min(f, b)); 
#line 1038 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1040 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 clamp(float2 v, float a, float b) 
#line 1041 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1042 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2(clamp(v.x, a, b), clamp(v.y, a, b)); 
#line 1043 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1044 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 clamp(float2 v, float2 a, float2 b) 
#line 1045 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1046 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2(clamp(v.x, a.x, b.x), clamp(v.y, a.y, b.y)); 
#line 1047 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1048 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 clamp(float3 v, float a, float b) 
#line 1049 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1050 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3(clamp(v.x, a, b), clamp(v.y, a, b), clamp(v.z, a, b)); 
#line 1051 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1052 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 clamp(float3 v, float3 a, float3 b) 
#line 1053 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1054 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3(clamp(v.x, a.x, b.x), clamp(v.y, a.y, b.y), clamp(v.z, a.z, b.z)); 
#line 1055 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1056 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 clamp(float4 v, float a, float b) 
#line 1057 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1058 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4(clamp(v.x, a, b), clamp(v.y, a, b), clamp(v.z, a, b), clamp(v.w, a, b)); 
#line 1059 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1060 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 clamp(float4 v, float4 a, float4 b) 
#line 1061 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1062 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4(clamp(v.x, a.x, b.x), clamp(v.y, a.y, b.y), clamp(v.z, a.z, b.z), clamp(v.w, a.w, b.w)); 
#line 1063 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1065 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int2 clamp(int2 v, int a, int b) 
#line 1066 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1067 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int2(clamp(v.x, a, b), clamp(v.y, a, b)); 
#line 1068 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1069 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int2 clamp(int2 v, int2 a, int2 b) 
#line 1070 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1071 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int2(clamp(v.x, a.x, b.x), clamp(v.y, a.y, b.y)); 
#line 1072 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1073 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int3 clamp(int3 v, int a, int b) 
#line 1074 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1075 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int3(clamp(v.x, a, b), clamp(v.y, a, b), clamp(v.z, a, b)); 
#line 1076 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1077 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int3 clamp(int3 v, int3 a, int3 b) 
#line 1078 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1079 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int3(clamp(v.x, a.x, b.x), clamp(v.y, a.y, b.y), clamp(v.z, a.z, b.z)); 
#line 1080 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1081 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int4 clamp(int4 v, int a, int b) 
#line 1082 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1083 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int4(clamp(v.x, a, b), clamp(v.y, a, b), clamp(v.z, a, b), clamp(v.w, a, b)); 
#line 1084 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1085 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int4 clamp(int4 v, int4 a, int4 b) 
#line 1086 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1087 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int4(clamp(v.x, a.x, b.x), clamp(v.y, a.y, b.y), clamp(v.z, a.z, b.z), clamp(v.w, a.w, b.w)); 
#line 1088 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1090 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint2 clamp(uint2 v, uint a, uint b) 
#line 1091 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1092 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint2(clamp(v.x, a, b), clamp(v.y, a, b)); 
#line 1093 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1094 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint2 clamp(uint2 v, uint2 a, uint2 b) 
#line 1095 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1096 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint2(clamp(v.x, a.x, b.x), clamp(v.y, a.y, b.y)); 
#line 1097 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1098 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint3 clamp(uint3 v, uint a, uint b) 
#line 1099 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1100 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint3(clamp(v.x, a, b), clamp(v.y, a, b), clamp(v.z, a, b)); 
#line 1101 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1102 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint3 clamp(uint3 v, uint3 a, uint3 b) 
#line 1103 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1104 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint3(clamp(v.x, a.x, b.x), clamp(v.y, a.y, b.y), clamp(v.z, a.z, b.z)); 
#line 1105 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1106 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint4 clamp(uint4 v, uint a, uint b) 
#line 1107 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1108 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint4(clamp(v.x, a, b), clamp(v.y, a, b), clamp(v.z, a, b), clamp(v.w, a, b)); 
#line 1109 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1110 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint4 clamp(uint4 v, uint4 a, uint4 b) 
#line 1111 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1112 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_uint4(clamp(v.x, a.x, b.x), clamp(v.y, a.y, b.y), clamp(v.z, a.z, b.z), clamp(v.w, a.w, b.w)); 
#line 1113 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1119 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float dot(float2 a, float2 b) 
#line 1120 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1121 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return ((a.x) * (b.x)) + ((a.y) * (b.y)); 
#line 1122 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1123 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float dot(float3 a, float3 b) 
#line 1124 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1125 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return (((a.x) * (b.x)) + ((a.y) * (b.y))) + ((a.z) * (b.z)); 
#line 1126 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1127 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float dot(float4 a, float4 b) 
#line 1128 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1129 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return ((((a.x) * (b.x)) + ((a.y) * (b.y))) + ((a.z) * (b.z))) + ((a.w) * (b.w)); 
#line 1130 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1132 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int dot(int2 a, int2 b) 
#line 1133 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1134 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return ((a.x) * (b.x)) + ((a.y) * (b.y)); 
#line 1135 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1136 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int dot(int3 a, int3 b) 
#line 1137 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1138 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return (((a.x) * (b.x)) + ((a.y) * (b.y))) + ((a.z) * (b.z)); 
#line 1139 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1140 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int dot(int4 a, int4 b) 
#line 1141 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1142 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return ((((a.x) * (b.x)) + ((a.y) * (b.y))) + ((a.z) * (b.z))) + ((a.w) * (b.w)); 
#line 1143 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1145 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint dot(uint2 a, uint2 b) 
#line 1146 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1147 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return ((a.x) * (b.x)) + ((a.y) * (b.y)); 
#line 1148 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1149 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint dot(uint3 a, uint3 b) 
#line 1150 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1151 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return (((a.x) * (b.x)) + ((a.y) * (b.y))) + ((a.z) * (b.z)); 
#line 1152 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1153 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline uint dot(uint4 a, uint4 b) 
#line 1154 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1155 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return ((((a.x) * (b.x)) + ((a.y) * (b.y))) + ((a.z) * (b.z))) + ((a.w) * (b.w)); 
#line 1156 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1162 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float length(float2 v) 
#line 1163 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1164 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return sqrtf(dot(v, v)); 
#line 1165 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1166 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float length(float3 v) 
#line 1167 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1168 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return sqrtf(dot(v, v)); 
#line 1169 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1170 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float length(float4 v) 
#line 1171 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1172 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return sqrtf(dot(v, v)); 
#line 1173 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1179 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 normalize(float2 v) 
#line 1180 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1181 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
float invLen = rsqrtf(dot(v, v)); 
#line 1182 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return (v * invLen); 
#line 1183 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1184 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 normalize(float3 v) 
#line 1185 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1186 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
float invLen = rsqrtf(dot(v, v)); 
#line 1187 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return (v * invLen); 
#line 1188 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1189 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 normalize(float4 v) 
#line 1190 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1191 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
float invLen = rsqrtf(dot(v, v)); 
#line 1192 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return (v * invLen); 
#line 1193 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1199 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 floorf(float2 v) 
#line 1200 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1201 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2(floorf(v.x), floorf(v.y)); 
#line 1202 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1203 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 floorf(float3 v) 
#line 1204 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1205 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3(floorf(v.x), floorf(v.y), floorf(v.z)); 
#line 1206 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1207 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 floorf(float4 v) 
#line 1208 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1209 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4(floorf(v.x), floorf(v.y), floorf(v.z), floorf(v.w)); 
#line 1210 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1216 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float fracf(float v) 
#line 1217 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1218 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return v - floorf(v); 
#line 1219 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1220 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 fracf(float2 v) 
#line 1221 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1222 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2(fracf(v.x), fracf(v.y)); 
#line 1223 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1224 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 fracf(float3 v) 
#line 1225 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1226 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3(fracf(v.x), fracf(v.y), fracf(v.z)); 
#line 1227 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1228 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 fracf(float4 v) 
#line 1229 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1230 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4(fracf(v.x), fracf(v.y), fracf(v.z), fracf(v.w)); 
#line 1231 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1237 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 fmodf(float2 a, float2 b) 
#line 1238 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1239 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2(fmodf(a.x, b.x), fmodf(a.y, b.y)); 
#line 1240 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1241 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 fmodf(float3 a, float3 b) 
#line 1242 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1243 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3(fmodf(a.x, b.x), fmodf(a.y, b.y), fmodf(a.z, b.z)); 
#line 1244 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1245 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 fmodf(float4 a, float4 b) 
#line 1246 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1247 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4(fmodf(a.x, b.x), fmodf(a.y, b.y), fmodf(a.z, b.z), fmodf(a.w, b.w)); 
#line 1248 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1254 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 fabs(float2 v) 
#line 1255 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1256 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float2(fabs(v.x), fabs(v.y)); 
#line 1257 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1258 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 fabs(float3 v) 
#line 1259 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1260 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3(fabs(v.x), fabs(v.y), fabs(v.z)); 
#line 1261 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1262 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 fabs(float4 v) 
#line 1263 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1264 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float4(fabs(v.x), fabs(v.y), fabs(v.z), fabs(v.w)); 
#line 1265 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1267 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int2 abs(int2 v) 
#line 1268 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1269 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int2(abs(v.x), abs(v.y)); 
#line 1270 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1271 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int3 abs(int3 v) 
#line 1272 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1273 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int3(abs(v.x), abs(v.y), abs(v.z)); 
#line 1274 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1275 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline int4 abs(int4 v) 
#line 1276 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1277 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_int4(abs(v.x), abs(v.y), abs(v.z), abs(v.w)); 
#line 1278 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1286 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 reflect(float3 i, float3 n) 
#line 1287 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1288 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return (i - ((((((2.0F)) * n)) * (dot(n, i))))); 
#line 1289 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1295 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 cross(float3 a, float3 b) 
#line 1296 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1297 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return make_float3(((a.y) * (b.z)) - ((a.z) * (b.y)), ((a.z) * (b.x)) - ((a.x) * (b.z)), ((a.x) * (b.y)) - ((a.y) * (b.x))); 
#line 1298 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1307 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float smoothstep(float a, float b, float x) 
#line 1308 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1309 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
float y = clamp((x - a) / (b - a), (0.0F), (1.0F)); 
#line 1310 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return (y * y) * ((3.0F) - ((2.0F) * y)); 
#line 1311 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1312 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float2 smoothstep(float2 a, float2 b, float2 x) 
#line 1313 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1314 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
float2 y = clamp((((x - a)) / ((b - a))), (0.0F), (1.0F)); 
#line 1315 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return (((y * y)) * (((make_float2((3.0F))) - (((make_float2((2.0F))) * y))))); 
#line 1316 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1317 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float3 smoothstep(float3 a, float3 b, float3 x) 
#line 1318 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1319 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
float3 y = clamp((((x - a)) / ((b - a))), (0.0F), (1.0F)); 
#line 1320 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return (((y * y)) * (((make_float3((3.0F))) - (((make_float3((2.0F))) * y))))); 
#line 1321 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 1322 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
inline float4 smoothstep(float4 a, float4 b, float4 x) 
#line 1323 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
{ 
#line 1324 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
float4 y = clamp((((x - a)) / ((b - a))), (0.0F), (1.0F)); 
#line 1325 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
return (((y * y)) * (((make_float4((3.0F))) - (((make_float4((2.0F))) * y))))); 
#line 1326 "c:\\users\\admin\\documents\\matlab\\nate\\winds-2-2012\\cuda\\source\\cutil_math.h"
} 
#line 157 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef unsigned __int64 CUdeviceptr; }
#line 164 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef int CUdevice; }
#line 165 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef struct CUctx_st *CUcontext; }
#line 166 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef struct CUmod_st *CUmodule; }
#line 167 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef struct CUfunc_st *CUfunction; }
#line 168 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef struct CUarray_st *CUarray; }
#line 169 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef struct CUtexref_st *CUtexref; }
#line 170 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef struct CUsurfref_st *CUsurfref; }
#line 171 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef CUevent_st *CUevent; }
#line 172 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef CUstream_st *CUstream; }
#line 173 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef struct CUgraphicsResource_st *CUgraphicsResource; }
#line 177 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 175 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
struct CUuuid_st { 
#line 176 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
char bytes[16]; 
#line 177 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUuuid; }
#line 189 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 187 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
struct CUipcEventHandle_st { 
#line 188 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
char reserved[64]; 
#line 189 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUipcEventHandle; }
#line 193 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 191 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
struct CUipcMemHandle_st { 
#line 192 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
char reserved[64]; 
#line 193 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUipcMemHandle; }
#line 197 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 195 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
enum CUipcMem_flags_enum { 
#line 196 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_IPC_MEM_LAZY_ENABLE_PEER_ACCESS = 1
#line 197 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUipcMem_flags; }
#line 216 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 204 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
enum CUctx_flags_enum { 
#line 205 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_CTX_SCHED_AUTO, 
#line 206 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_CTX_SCHED_SPIN, 
#line 207 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_CTX_SCHED_YIELD, 
#line 208 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_CTX_SCHED_BLOCKING_SYNC = 4, 
#line 209 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_CTX_BLOCKING_SYNC = 4, 
#line 212 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_CTX_SCHED_MASK = 7, 
#line 213 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_CTX_MAP_HOST, 
#line 214 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_CTX_LMEM_RESIZE_TO_MAX = 16, 
#line 215 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_CTX_FLAGS_MASK = 31
#line 216 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUctx_flags; }
#line 226 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 221 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
enum CUevent_flags_enum { 
#line 222 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_EVENT_DEFAULT, 
#line 223 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_EVENT_BLOCKING_SYNC, 
#line 224 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_EVENT_DISABLE_TIMING, 
#line 225 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_EVENT_INTERPROCESS = 4
#line 226 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUevent_flags; }
#line 240 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 231 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
enum CUarray_format_enum { 
#line 232 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_AD_FORMAT_UNSIGNED_INT8 = 1, 
#line 233 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_AD_FORMAT_UNSIGNED_INT16, 
#line 234 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_AD_FORMAT_UNSIGNED_INT32, 
#line 235 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_AD_FORMAT_SIGNED_INT8 = 8, 
#line 236 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_AD_FORMAT_SIGNED_INT16, 
#line 237 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_AD_FORMAT_SIGNED_INT32, 
#line 238 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_AD_FORMAT_HALF = 16, 
#line 239 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_AD_FORMAT_FLOAT = 32
#line 240 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUarray_format; }
#line 250 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 245 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
enum CUaddress_mode_enum { 
#line 246 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_TR_ADDRESS_MODE_WRAP, 
#line 247 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_TR_ADDRESS_MODE_CLAMP, 
#line 248 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_TR_ADDRESS_MODE_MIRROR, 
#line 249 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_TR_ADDRESS_MODE_BORDER
#line 250 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUaddress_mode; }
#line 258 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 255 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
enum CUfilter_mode_enum { 
#line 256 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_TR_FILTER_MODE_POINT, 
#line 257 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_TR_FILTER_MODE_LINEAR
#line 258 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUfilter_mode; }
#line 341 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 263 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
enum CUdevice_attribute_enum { 
#line 264 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_BLOCK = 1, 
#line 265 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_X, 
#line 266 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Y, 
#line 267 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Z, 
#line 268 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_X, 
#line 269 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Y, 
#line 270 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Z, 
#line 271 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK, 
#line 272 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_SHARED_MEMORY_PER_BLOCK = 8, 
#line 273 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_TOTAL_CONSTANT_MEMORY, 
#line 274 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_WARP_SIZE, 
#line 275 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_PITCH, 
#line 276 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_BLOCK, 
#line 277 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_REGISTERS_PER_BLOCK = 12, 
#line 278 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_CLOCK_RATE, 
#line 279 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_ALIGNMENT, 
#line 280 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_GPU_OVERLAP, 
#line 281 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT, 
#line 282 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_KERNEL_EXEC_TIMEOUT, 
#line 283 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_INTEGRATED, 
#line 284 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_MAP_HOST_MEMORY, 
#line 285 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_MODE, 
#line 286 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_WIDTH, 
#line 287 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_WIDTH, 
#line 288 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_HEIGHT, 
#line 289 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH, 
#line 290 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT, 
#line 291 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH, 
#line 292 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_WIDTH, 
#line 293 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_HEIGHT, 
#line 294 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_LAYERS, 
#line 295 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_WIDTH = 27, 
#line 296 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_HEIGHT, 
#line 297 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_NUMSLICES, 
#line 298 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_SURFACE_ALIGNMENT, 
#line 299 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_CONCURRENT_KERNELS, 
#line 300 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_ECC_ENABLED, 
#line 301 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_BUS_ID, 
#line 302 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_DEVICE_ID, 
#line 303 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_TCC_DRIVER, 
#line 304 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MEMORY_CLOCK_RATE, 
#line 305 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_GLOBAL_MEMORY_BUS_WIDTH, 
#line 306 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_L2_CACHE_SIZE, 
#line 307 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_MULTIPROCESSOR, 
#line 308 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_ASYNC_ENGINE_COUNT, 
#line 309 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_UNIFIED_ADDRESSING, 
#line 310 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_WIDTH, 
#line 311 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_LAYERS, 
#line 312 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_TEX2D_GATHER, 
#line 313 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_WIDTH, 
#line 314 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_HEIGHT, 
#line 315 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH_ALTERNATE, 
#line 316 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT_ALTERNATE, 
#line 317 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH_ALTERNATE, 
#line 318 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_DOMAIN_ID, 
#line 319 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_PITCH_ALIGNMENT, 
#line 320 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_WIDTH, 
#line 321 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_WIDTH, 
#line 322 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_LAYERS, 
#line 323 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_WIDTH, 
#line 324 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_WIDTH, 
#line 325 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_HEIGHT, 
#line 326 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_WIDTH, 
#line 327 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_HEIGHT, 
#line 328 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_DEPTH, 
#line 329 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_WIDTH, 
#line 330 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_LAYERS, 
#line 331 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_WIDTH, 
#line 332 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_HEIGHT, 
#line 333 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_LAYERS, 
#line 334 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_WIDTH, 
#line 335 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_WIDTH, 
#line 336 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_LAYERS, 
#line 337 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LINEAR_WIDTH, 
#line 338 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_WIDTH, 
#line 339 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_HEIGHT, 
#line 340 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_PITCH
#line 341 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUdevice_attribute; }
#line 357 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 346 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
struct CUdevprop_st { 
#line 347 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
int maxThreadsPerBlock; 
#line 348 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
int maxThreadsDim[3]; 
#line 349 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
int maxGridSize[3]; 
#line 350 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
int sharedMemPerBlock; 
#line 351 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
int totalConstantMemory; 
#line 352 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
int SIMDWidth; 
#line 353 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
int memPitch; 
#line 354 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
int regsPerBlock; 
#line 355 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
int clockRate; 
#line 356 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
int textureAlign; 
#line 357 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUdevprop; }
#line 367 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 362 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
enum CUpointer_attribute_enum { 
#line 363 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_POINTER_ATTRIBUTE_CONTEXT = 1, 
#line 364 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_POINTER_ATTRIBUTE_MEMORY_TYPE, 
#line 365 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_POINTER_ATTRIBUTE_DEVICE_POINTER, 
#line 366 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_POINTER_ATTRIBUTE_HOST_POINTER
#line 367 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUpointer_attribute; }
#line 422 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 372 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
enum CUfunction_attribute_enum { 
#line 378 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_FUNC_ATTRIBUTE_MAX_THREADS_PER_BLOCK, 
#line 385 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_FUNC_ATTRIBUTE_SHARED_SIZE_BYTES, 
#line 391 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_FUNC_ATTRIBUTE_CONST_SIZE_BYTES, 
#line 396 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_FUNC_ATTRIBUTE_LOCAL_SIZE_BYTES, 
#line 401 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_FUNC_ATTRIBUTE_NUM_REGS, 
#line 410 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_FUNC_ATTRIBUTE_PTX_VERSION, 
#line 419 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_FUNC_ATTRIBUTE_BINARY_VERSION, 
#line 421 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_FUNC_ATTRIBUTE_MAX
#line 422 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUfunction_attribute; }
#line 432 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 427 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
enum CUfunc_cache_enum { 
#line 428 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_FUNC_CACHE_PREFER_NONE, 
#line 429 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_FUNC_CACHE_PREFER_SHARED, 
#line 430 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_FUNC_CACHE_PREFER_L1, 
#line 431 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_FUNC_CACHE_PREFER_EQUAL
#line 432 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUfunc_cache; }
#line 442 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 437 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
enum CUmemorytype_enum { 
#line 438 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_MEMORYTYPE_HOST = 1, 
#line 439 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_MEMORYTYPE_DEVICE, 
#line 440 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_MEMORYTYPE_ARRAY, 
#line 441 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_MEMORYTYPE_UNIFIED
#line 442 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUmemorytype; }
#line 452 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 447 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
enum CUcomputemode_enum { 
#line 448 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_COMPUTEMODE_DEFAULT, 
#line 449 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_COMPUTEMODE_EXCLUSIVE, 
#line 450 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_COMPUTEMODE_PROHIBITED, 
#line 451 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_COMPUTEMODE_EXCLUSIVE_PROCESS
#line 452 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUcomputemode; }
#line 544 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 457 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
enum CUjit_option_enum { 
#line 463 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_JIT_MAX_REGISTERS, 
#line 476 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_JIT_THREADS_PER_BLOCK, 
#line 483 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_JIT_WALL_TIME, 
#line 491 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_JIT_INFO_LOG_BUFFER, 
#line 499 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_JIT_INFO_LOG_BUFFER_SIZE_BYTES, 
#line 507 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_JIT_ERROR_LOG_BUFFER, 
#line 515 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_JIT_ERROR_LOG_BUFFER_SIZE_BYTES, 
#line 522 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_JIT_OPTIMIZATION_LEVEL, 
#line 529 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_JIT_TARGET_FROM_CUCONTEXT, 
#line 535 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_JIT_TARGET, 
#line 542 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_JIT_FALLBACK_STRATEGY
#line 544 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUjit_option; }
#line 557 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 549 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
enum CUjit_target_enum { 
#line 551 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_TARGET_COMPUTE_10, 
#line 552 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_TARGET_COMPUTE_11, 
#line 553 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_TARGET_COMPUTE_12, 
#line 554 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_TARGET_COMPUTE_13, 
#line 555 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_TARGET_COMPUTE_20, 
#line 556 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_TARGET_COMPUTE_21
#line 557 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUjit_target; }
#line 568 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 562 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
enum CUjit_fallback_enum { 
#line 564 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_PREFER_PTX, 
#line 566 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_PREFER_BINARY
#line 568 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUjit_fallback; }
#line 579 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 573 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
enum CUgraphicsRegisterFlags_enum { 
#line 574 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_NONE, 
#line 575 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_READ_ONLY, 
#line 576 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_WRITE_DISCARD, 
#line 577 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_SURFACE_LDST = 4, 
#line 578 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_TEXTURE_GATHER = 8
#line 579 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUgraphicsRegisterFlags; }
#line 588 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 584 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
enum CUgraphicsMapResourceFlags_enum { 
#line 585 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_NONE, 
#line 586 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_READ_ONLY, 
#line 587 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_WRITE_DISCARD
#line 588 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUgraphicsMapResourceFlags; }
#line 600 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 593 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
enum CUarray_cubemap_face_enum { 
#line 594 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_CUBEMAP_FACE_POSITIVE_X, 
#line 595 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_X, 
#line 596 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Y, 
#line 597 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Y, 
#line 598 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Z, 
#line 599 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Z
#line 600 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUarray_cubemap_face; }
#line 609 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 605 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
enum CUlimit_enum { 
#line 606 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_LIMIT_STACK_SIZE, 
#line 607 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_LIMIT_PRINTF_FIFO_SIZE, 
#line 608 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CU_LIMIT_MALLOC_HEAP_SIZE
#line 609 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUlimit; }
#line 918 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 614 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
enum cudaError_enum { 
#line 620 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_SUCCESS, 
#line 626 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_INVALID_VALUE, 
#line 632 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_OUT_OF_MEMORY, 
#line 638 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_NOT_INITIALIZED, 
#line 643 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_DEINITIALIZED, 
#line 649 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_PROFILER_DISABLED, 
#line 654 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_PROFILER_NOT_INITIALIZED, 
#line 659 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_PROFILER_ALREADY_STARTED, 
#line 664 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_PROFILER_ALREADY_STOPPED, 
#line 669 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_NO_DEVICE = 100, 
#line 675 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_INVALID_DEVICE, 
#line 682 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_INVALID_IMAGE = 200, 
#line 692 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_INVALID_CONTEXT, 
#line 701 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_CURRENT, 
#line 706 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_MAP_FAILED = 205, 
#line 711 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_UNMAP_FAILED, 
#line 717 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_ARRAY_IS_MAPPED, 
#line 722 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_ALREADY_MAPPED, 
#line 730 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_NO_BINARY_FOR_GPU, 
#line 735 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_ALREADY_ACQUIRED, 
#line 740 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_NOT_MAPPED, 
#line 746 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_ARRAY, 
#line 752 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_POINTER, 
#line 758 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_ECC_UNCORRECTABLE, 
#line 764 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_UNSUPPORTED_LIMIT, 
#line 771 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_IN_USE, 
#line 776 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_INVALID_SOURCE = 300, 
#line 781 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_FILE_NOT_FOUND, 
#line 786 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND, 
#line 791 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_SHARED_OBJECT_INIT_FAILED, 
#line 796 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_OPERATING_SYSTEM, 
#line 803 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_INVALID_HANDLE = 400, 
#line 810 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_NOT_FOUND = 500, 
#line 819 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_NOT_READY = 600, 
#line 830 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_LAUNCH_FAILED = 700, 
#line 841 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES, 
#line 852 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_LAUNCH_TIMEOUT, 
#line 858 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING, 
#line 865 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_PEER_ACCESS_ALREADY_ENABLED, 
#line 872 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_PEER_ACCESS_NOT_ENABLED, 
#line 878 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_PRIMARY_CONTEXT_ACTIVE = 708, 
#line 885 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_CONTEXT_IS_DESTROYED, 
#line 893 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_ASSERT, 
#line 900 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_TOO_MANY_PEERS, 
#line 906 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_HOST_MEMORY_ALREADY_REGISTERED, 
#line 912 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_HOST_MEMORY_NOT_REGISTERED, 
#line 917 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUDA_ERROR_UNKNOWN = 999
#line 918 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUresult; }
#line 980 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 959 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
struct CUDA_MEMCPY2D_st { 
#line 960 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t srcXInBytes; 
#line 961 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t srcY; 
#line 963 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUmemorytype srcMemoryType; 
#line 964 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
const void *srcHost; 
#line 965 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUdeviceptr srcDevice; 
#line 966 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUarray srcArray; 
#line 967 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t srcPitch; 
#line 969 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t dstXInBytes; 
#line 970 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t dstY; 
#line 972 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUmemorytype dstMemoryType; 
#line 973 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
void *dstHost; 
#line 974 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUdeviceptr dstDevice; 
#line 975 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUarray dstArray; 
#line 976 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t dstPitch; 
#line 978 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t WidthInBytes; 
#line 979 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t Height; 
#line 980 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUDA_MEMCPY2D; }
#line 1013 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 985 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
struct CUDA_MEMCPY3D_st { 
#line 986 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t srcXInBytes; 
#line 987 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t srcY; 
#line 988 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t srcZ; 
#line 989 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t srcLOD; 
#line 990 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUmemorytype srcMemoryType; 
#line 991 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
const void *srcHost; 
#line 992 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUdeviceptr srcDevice; 
#line 993 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUarray srcArray; 
#line 994 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
void *reserved0; 
#line 995 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t srcPitch; 
#line 996 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t srcHeight; 
#line 998 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t dstXInBytes; 
#line 999 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t dstY; 
#line 1000 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t dstZ; 
#line 1001 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t dstLOD; 
#line 1002 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUmemorytype dstMemoryType; 
#line 1003 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
void *dstHost; 
#line 1004 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUdeviceptr dstDevice; 
#line 1005 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUarray dstArray; 
#line 1006 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
void *reserved1; 
#line 1007 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t dstPitch; 
#line 1008 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t dstHeight; 
#line 1010 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t WidthInBytes; 
#line 1011 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t Height; 
#line 1012 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t Depth; 
#line 1013 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUDA_MEMCPY3D; }
#line 1046 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 1018 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
struct CUDA_MEMCPY3D_PEER_st { 
#line 1019 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t srcXInBytes; 
#line 1020 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t srcY; 
#line 1021 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t srcZ; 
#line 1022 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t srcLOD; 
#line 1023 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUmemorytype srcMemoryType; 
#line 1024 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
const void *srcHost; 
#line 1025 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUdeviceptr srcDevice; 
#line 1026 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUarray srcArray; 
#line 1027 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUcontext srcContext; 
#line 1028 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t srcPitch; 
#line 1029 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t srcHeight; 
#line 1031 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t dstXInBytes; 
#line 1032 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t dstY; 
#line 1033 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t dstZ; 
#line 1034 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t dstLOD; 
#line 1035 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUmemorytype dstMemoryType; 
#line 1036 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
void *dstHost; 
#line 1037 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUdeviceptr dstDevice; 
#line 1038 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUarray dstArray; 
#line 1039 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUcontext dstContext; 
#line 1040 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t dstPitch; 
#line 1041 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t dstHeight; 
#line 1043 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t WidthInBytes; 
#line 1044 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t Height; 
#line 1045 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t Depth; 
#line 1046 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUDA_MEMCPY3D_PEER; }
#line 1058 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 1051 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
struct CUDA_ARRAY_DESCRIPTOR_st { 
#line 1053 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t Width; 
#line 1054 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t Height; 
#line 1056 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUarray_format Format; 
#line 1057 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
unsigned NumChannels; 
#line 1058 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUDA_ARRAY_DESCRIPTOR; }
#line 1072 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { typedef 
#line 1063 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
struct CUDA_ARRAY3D_DESCRIPTOR_st { 
#line 1065 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t Width; 
#line 1066 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t Height; 
#line 1067 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
size_t Depth; 
#line 1069 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
CUarray_format Format; 
#line 1070 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
unsigned NumChannels; 
#line 1071 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
unsigned Flags; 
#line 1072 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
} CUDA_ARRAY3D_DESCRIPTOR; }
#line 1199 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuInit(unsigned ); } 
#line 1226 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuDriverGetVersion(int * ); } 
#line 1264 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuDeviceGet(CUdevice * , int ); } 
#line 1290 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuDeviceGetCount(int * ); } 
#line 1319 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuDeviceGetName(char * , int , CUdevice ); } 
#line 1348 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuDeviceComputeCapability(int * , int * , CUdevice ); } 
#line 1376 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuDeviceTotalMem_v2(size_t * , CUdevice ); } 
#line 1436 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuDeviceGetProperties(CUdevprop * , CUdevice ); } 
#line 1601 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuDeviceGetAttribute(int * , CUdevice_attribute , CUdevice ); } 
#line 1701 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxCreate_v2(CUcontext * , unsigned , CUdevice ); } 
#line 1740 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxDestroy_v2(CUcontext ); } 
#line 1790 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxAttach(CUcontext * , unsigned ); } 
#line 1825 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxDetach(CUcontext ); } 
#line 1861 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxPushCurrent_v2(CUcontext ); } 
#line 1894 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxPopCurrent_v2(CUcontext * ); } 
#line 1920 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxSetCurrent(CUcontext ); } 
#line 1939 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxGetCurrent(CUcontext * ); } 
#line 1968 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxGetDevice(CUdevice * ); } 
#line 1996 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxSynchronize(); } 
#line 2057 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxSetLimit(CUlimit , size_t ); } 
#line 2090 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxGetLimit(size_t * , CUlimit ); } 
#line 2132 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxGetCacheConfig(CUfunc_cache * ); } 
#line 2181 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxSetCacheConfig(CUfunc_cache ); } 
#line 2216 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxGetApiVersion(CUcontext , unsigned * ); } 
#line 2265 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuModuleLoad(CUmodule * , const char * ); } 
#line 2299 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuModuleLoadData(CUmodule * , const void * ); } 
#line 2378 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuModuleLoadDataEx(CUmodule * , const void * , unsigned , CUjit_option * , void ** ); } 
#line 2418 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuModuleLoadFatBinary(CUmodule * , const void * ); } 
#line 2443 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuModuleUnload(CUmodule ); } 
#line 2473 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuModuleGetFunction(CUfunction * , CUmodule , const char * ); } 
#line 2507 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuModuleGetGlobal_v2(CUdeviceptr * , size_t * , CUmodule , const char * ); } 
#line 2541 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuModuleGetTexRef(CUtexref * , CUmodule , const char * ); } 
#line 2572 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuModuleGetSurfRef(CUsurfref * , CUmodule , const char * ); } 
#line 2615 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemGetInfo_v2(size_t * , size_t * ); } 
#line 2648 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemAlloc_v2(CUdeviceptr * , size_t ); } 
#line 2709 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemAllocPitch_v2(CUdeviceptr * , size_t * , size_t , size_t , unsigned ); } 
#line 2738 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemFree_v2(CUdeviceptr ); } 
#line 2771 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemGetAddressRange_v2(CUdeviceptr * , size_t * , CUdeviceptr ); } 
#line 2817 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemAllocHost_v2(void ** , size_t ); } 
#line 2847 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemFreeHost(void * ); } 
#line 2929 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemHostAlloc(void ** , size_t , unsigned ); } 
#line 2967 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemHostGetDevicePointer_v2(CUdeviceptr * , void * , unsigned ); } 
#line 2992 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemHostGetFlags(unsigned * , void * ); } 
#line 3019 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuDeviceGetByPCIBusId(CUdevice * , char * ); } 
#line 3047 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuDeviceGetPCIBusId(char * , int , CUdevice ); } 
#line 3089 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuIpcGetEventHandle(CUipcEventHandle * , CUevent ); } 
#line 3125 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuIpcOpenEventHandle(CUevent * , CUipcEventHandle ); } 
#line 3162 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuIpcGetMemHandle(CUipcMemHandle * , CUdeviceptr ); } 
#line 3210 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuIpcOpenMemHandle(CUdeviceptr * , CUipcMemHandle , unsigned ); } 
#line 3241 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuIpcCloseMemHandle(CUdeviceptr ); } 
#line 3303 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemHostRegister(void * , size_t , unsigned ); } 
#line 3326 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemHostUnregister(void * ); } 
#line 3362 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpy(CUdeviceptr , CUdeviceptr , size_t ); } 
#line 3395 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyPeer(CUdeviceptr , CUcontext , CUdeviceptr , CUcontext , size_t ); } 
#line 3431 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyHtoD_v2(CUdeviceptr , const void * , size_t ); } 
#line 3464 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyDtoH_v2(void * , CUdeviceptr , size_t ); } 
#line 3497 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyDtoD_v2(CUdeviceptr , CUdeviceptr , size_t ); } 
#line 3531 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyDtoA_v2(CUarray , size_t , CUdeviceptr , size_t ); } 
#line 3567 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyAtoD_v2(CUdeviceptr , CUarray , size_t , size_t ); } 
#line 3601 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyHtoA_v2(CUarray , size_t , const void * , size_t ); } 
#line 3635 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyAtoH_v2(void * , CUarray , size_t , size_t ); } 
#line 3673 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyAtoA_v2(CUarray , size_t , CUarray , size_t , size_t ); } 
#line 3833 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpy2D_v2(const CUDA_MEMCPY2D * ); } 
#line 3991 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpy2DUnaligned_v2(const CUDA_MEMCPY2D * ); } 
#line 4158 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpy3D_v2(const CUDA_MEMCPY3D * ); } 
#line 4189 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpy3DPeer(const CUDA_MEMCPY3D_PEER * ); } 
#line 4229 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyAsync(CUdeviceptr , CUdeviceptr , size_t , CUstream ); } 
#line 4260 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyPeerAsync(CUdeviceptr , CUcontext , CUdeviceptr , CUcontext , size_t , CUstream ); } 
#line 4302 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyHtoDAsync_v2(CUdeviceptr , const void * , size_t , CUstream ); } 
#line 4342 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyDtoHAsync_v2(void * , CUdeviceptr , size_t , CUstream ); } 
#line 4379 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyDtoDAsync_v2(CUdeviceptr , CUdeviceptr , size_t , CUstream ); } 
#line 4421 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyHtoAAsync_v2(CUarray , size_t , const void * , size_t , CUstream ); } 
#line 4463 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpyAtoHAsync_v2(void * , CUarray , size_t , size_t , CUstream ); } 
#line 4634 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpy2DAsync_v2(const CUDA_MEMCPY2D * , CUstream ); } 
#line 4809 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpy3DAsync_v2(const CUDA_MEMCPY3D * , CUstream ); } 
#line 4834 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemcpy3DPeerAsync(const CUDA_MEMCPY3D_PEER * , CUstream ); } 
#line 4869 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD8_v2(CUdeviceptr , unsigned char , size_t ); } 
#line 4902 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD16_v2(CUdeviceptr , unsigned short , size_t ); } 
#line 4935 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD32_v2(CUdeviceptr , unsigned , size_t ); } 
#line 4973 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD2D8_v2(CUdeviceptr , size_t , unsigned char , size_t , size_t ); } 
#line 5012 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD2D16_v2(CUdeviceptr , size_t , unsigned short , size_t , size_t ); } 
#line 5051 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD2D32_v2(CUdeviceptr , size_t , unsigned , size_t , size_t ); } 
#line 5088 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD8Async(CUdeviceptr , unsigned char , size_t , CUstream ); } 
#line 5125 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD16Async(CUdeviceptr , unsigned short , size_t , CUstream ); } 
#line 5161 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD32Async(CUdeviceptr , unsigned , size_t , CUstream ); } 
#line 5203 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD2D8Async(CUdeviceptr , size_t , unsigned char , size_t , size_t , CUstream ); } 
#line 5246 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD2D16Async(CUdeviceptr , size_t , unsigned short , size_t , size_t , CUstream ); } 
#line 5289 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuMemsetD2D32Async(CUdeviceptr , size_t , unsigned , size_t , size_t , CUstream ); } 
#line 5392 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuArrayCreate_v2(CUarray * , const CUDA_ARRAY_DESCRIPTOR * ); } 
#line 5425 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuArrayGetDescriptor_v2(CUDA_ARRAY_DESCRIPTOR * , CUarray ); } 
#line 5456 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuArrayDestroy(CUarray ); } 
#line 5636 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuArray3DCreate_v2(CUarray * , const CUDA_ARRAY3D_DESCRIPTOR * ); } 
#line 5672 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuArray3DGetDescriptor_v2(CUDA_ARRAY3D_DESCRIPTOR * , CUarray ); } 
#line 5879 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuPointerGetAttribute(void * , CUpointer_attribute , CUdeviceptr ); } 
#line 5916 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuStreamCreate(CUstream * , unsigned ); } 
#line 5958 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuStreamWaitEvent(CUstream , CUevent , unsigned ); } 
#line 5982 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuStreamQuery(CUstream ); } 
#line 6007 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuStreamSynchronize(CUstream ); } 
#line 6035 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuStreamDestroy_v2(CUstream ); } 
#line 6084 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuEventCreate(CUevent * , unsigned ); } 
#line 6122 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuEventRecord(CUevent , CUstream ); } 
#line 6153 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuEventQuery(CUevent ); } 
#line 6187 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuEventSynchronize(CUevent ); } 
#line 6216 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuEventDestroy_v2(CUevent ); } 
#line 6260 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuEventElapsedTime(float * , CUevent , CUevent ); } 
#line 6323 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuFuncGetAttribute(int * , CUfunction_attribute , CUfunction ); } 
#line 6365 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuFuncSetCacheConfig(CUfunction , CUfunc_cache ); } 
#line 6481 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuLaunchKernel(CUfunction , unsigned , unsigned , unsigned , unsigned , unsigned , unsigned , unsigned , CUstream , void ** , void ** ); } 
#line 6537 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuFuncSetBlockShape(CUfunction , int , int , int ); } 
#line 6571 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuFuncSetSharedSize(CUfunction , unsigned ); } 
#line 6603 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuParamSetSize(CUfunction , unsigned ); } 
#line 6636 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuParamSeti(CUfunction , int , unsigned ); } 
#line 6669 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuParamSetf(CUfunction , int , float ); } 
#line 6704 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuParamSetv(CUfunction , int , void * , unsigned ); } 
#line 6741 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuLaunch(CUfunction ); } 
#line 6780 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuLaunchGrid(CUfunction , int , int ); } 
#line 6824 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuLaunchGridAsync(CUfunction , int , int , CUstream ); } 
#line 6849 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuParamSetTexRef(CUfunction , int , CUtexref ); } 
#line 6890 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefSetArray(CUtexref , CUarray , unsigned ); } 
#line 6934 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefSetAddress_v2(size_t * , CUtexref , CUdeviceptr , size_t ); } 
#line 6986 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefSetAddress2D_v3(CUtexref , const CUDA_ARRAY_DESCRIPTOR * , CUdeviceptr , size_t ); } 
#line 7015 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefSetFormat(CUtexref , CUarray_format , int ); } 
#line 7055 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefSetAddressMode(CUtexref , int , CUaddress_mode ); } 
#line 7088 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefSetFilterMode(CUtexref , CUfilter_mode ); } 
#line 7123 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefSetFlags(CUtexref , unsigned ); } 
#line 7149 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefGetAddress_v2(CUdeviceptr * , CUtexref ); } 
#line 7175 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefGetArray(CUarray * , CUtexref ); } 
#line 7201 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefGetAddressMode(CUaddress_mode * , CUtexref , int ); } 
#line 7225 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefGetFilterMode(CUfilter_mode * , CUtexref ); } 
#line 7251 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefGetFormat(CUarray_format * , int * , CUtexref ); } 
#line 7274 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefGetFlags(unsigned * , CUtexref ); } 
#line 7308 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefCreate(CUtexref * ); } 
#line 7328 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuTexRefDestroy(CUtexref ); } 
#line 7366 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuSurfRefSetArray(CUsurfref , CUarray , unsigned ); } 
#line 7387 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuSurfRefGetArray(CUarray * , CUsurfref ); } 
#line 7425 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuDeviceCanAccessPeer(int * , CUdevice , CUdevice ); } 
#line 7472 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxEnablePeerAccess(CUcontext , unsigned ); } 
#line 7497 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuCtxDisablePeerAccess(CUcontext ); } 
#line 7538 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuGraphicsUnregisterResource(CUgraphicsResource ); } 
#line 7576 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuGraphicsSubResourceGetMappedArray(CUarray * , CUgraphicsResource , unsigned , unsigned ); } 
#line 7610 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuGraphicsResourceGetMappedPointer_v2(CUdeviceptr * , size_t * , CUgraphicsResource ); } 
#line 7651 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuGraphicsResourceSetMapFlags(CUgraphicsResource , unsigned ); } 
#line 7689 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuGraphicsMapResources(unsigned , CUgraphicsResource * , CUstream ); } 
#line 7724 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuGraphicsUnmapResources(unsigned , CUgraphicsResource * , CUstream ); } 
#line 7728 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\cuda.h"
extern "C" { CUresult __stdcall cuGetExportTable(const void ** , const CUuuid * ); } 
#line 18 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { typedef void *omp_lock_t; }
#line 23 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { typedef void *omp_nest_lock_t; }
#line 31 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
#pragma comment(lib, "vcomp")
#line 41 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 40 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) void __cdecl 
#line 41 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_set_num_threads(int ); } 
#line 46 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 45 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) int __cdecl 
#line 46 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_get_num_threads(); } 
#line 51 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 50 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) int __cdecl 
#line 51 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_get_max_threads(); } 
#line 56 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 55 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) int __cdecl 
#line 56 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_get_thread_num(); } 
#line 61 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 60 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) int __cdecl 
#line 61 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_get_num_procs(); } 
#line 66 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 65 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) void __cdecl 
#line 66 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_set_dynamic(int ); } 
#line 71 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 70 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) int __cdecl 
#line 71 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_get_dynamic(); } 
#line 76 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 75 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) int __cdecl 
#line 76 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_in_parallel(); } 
#line 81 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 80 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) void __cdecl 
#line 81 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_set_nested(int ); } 
#line 86 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 85 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) int __cdecl 
#line 86 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_get_nested(); } 
#line 91 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 90 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) void __cdecl 
#line 91 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_init_lock(omp_lock_t * ); } 
#line 96 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 95 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) void __cdecl 
#line 96 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_destroy_lock(omp_lock_t * ); } 
#line 101 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 100 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) void __cdecl 
#line 101 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_set_lock(omp_lock_t * ); } 
#line 106 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 105 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) void __cdecl 
#line 106 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_unset_lock(omp_lock_t * ); } 
#line 111 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 110 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) int __cdecl 
#line 111 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_test_lock(omp_lock_t * ); } 
#line 116 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 115 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) void __cdecl 
#line 116 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_init_nest_lock(omp_nest_lock_t * ); } 
#line 121 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 120 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) void __cdecl 
#line 121 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_destroy_nest_lock(omp_nest_lock_t * ); } 
#line 126 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 125 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) void __cdecl 
#line 126 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_set_nest_lock(omp_nest_lock_t * ); } 
#line 131 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 130 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) void __cdecl 
#line 131 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_unset_nest_lock(omp_nest_lock_t * ); } 
#line 136 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 135 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) int __cdecl 
#line 136 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_test_nest_lock(omp_nest_lock_t * ); } 
#line 141 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 140 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) double __cdecl 
#line 141 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_get_wtime(); } 
#line 146 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
extern "C" { 
#line 145 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
__declspec(dllimport) double __cdecl 
#line 146 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN/../../VC/INCLUDE\\omp.h"
omp_get_wtick(); } 
#line 43 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
typedef 
#line 39 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
struct { 
#line 40 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double x; 
#line 41 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double y; 
#line 42 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double z; 
#line 43 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
} vector3; 
#line 46 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
void checkCUDAError(const char *msg) 
#line 47 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
{ 
#line 48 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaError_t err = cudaGetLastError(); 
#line 49 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if ((cudaSuccess) != err) 
#line 50 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
{ 
#line 51 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mexPrintf("Cuda error: %s: %s.\n", msg, cudaGetErrorString(err)); 
#line 53 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 54 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
} 
#line 56 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
static   int dev_np; 
#line 57 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
static   int dev_nf; 
#line 58 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
static   double cutoff; 
#line 59 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
static   double cored; 
#line 60 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
static   int threadsperblock; 
#line 63 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
void biot_p2p(double2 bfx, double2 bfy, double2 bfz, double2 brg, double2 bpxy, double1 bpz, double *uindx, double *uindy, double *uindz) 
#line 64 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
{int volatile ___ = 1;(void)bfx;(void)bfy;(void)bfz;(void)brg;(void)bpxy;(void)bpz;(void)uindx;(void)uindy;(void)uindz;
#line 93 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
exit(___);}















































#line 142 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
#line 97 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
vector3 biot_p2p_sh(double2 bfx, double2 bfy, double2 bfz, double2 brg, double2 bpxy, double1 bpz, vector3 uind) 
#line 98 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
{int volatile ___ = 1;(void)bfx;(void)bfy;(void)bfz;(void)brg;(void)bpxy;(void)bpz;(void)uind;
#line 129 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
exit(___);}

















































#line 180 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
#line 131 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
void BiotSavart_naive(double2 *p, double1 *pz, double2 *fx, double2 *fy, double2 *fz, double2 *rg, double2 *uind, double1 *uindz) ;





















#line 154 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
#line 147 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
void BiotSavart_sh(double2 *p, double1 *pz, double2 *fx, double2 *fy, double2 *fz, double2 *rg, double2 *uind, double1 *uindz) ;





































































#line 218 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
#line 197 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
void calcLengthOnly(double2 *a, double2 *b, double2 *c, double1 *d) ;













#line 212 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
#line 210 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
static int cuda_setup(int probsize, int numthreads, int numcards, int devicenum) 
#line 211 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
{ 
#line 212 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaDeviceProp prop; 
#line 213 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double maxglobal; 
#line 214 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double maxshared; 
#line 215 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int blocksize; 
#line 217 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaGetDeviceProperties(&prop, devicenum); 
#line 223 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
maxglobal = ((prop.totalGlobalMem) / sizeof(double)); 
#line 225 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
maxshared = ((prop.sharedMemPerBlock) / sizeof(double)); 
#line 228 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
blocksize = ((probsize + (numthreads - 1)) / numthreads); 
#line 231 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
return blocksize; 
#line 232 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
} 
#line 236 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
void biot_p2p_nogpu(double2 bfx, double2 bfy, double2 bfz, double2 brg, double2 bpxy, double1 bpz, double *uindx, double *uindy, double *uindz, double cd, double co) 
#line 237 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
{ 
#line 239 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double r1, r2, len, ldx, ldy, ldz, pxx1, pxx2, pyy1, pyy2, pzz1, pzz2, r1dr2, ubar, r1tr2, den; 
#line 241 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
ldx = ((bfx.x) - (bfx.y)); 
#line 242 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
ldy = ((bfy.x) - (bfy.y)); 
#line 243 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
ldz = ((bfz.x) - (bfz.y)); 
#line 245 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
pxx1 = ((bpxy.x) - (bfx.x)); 
#line 246 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
pxx2 = ((bpxy.x) - (bfx.y)); 
#line 247 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
pyy1 = ((bpxy.y) - (bfy.x)); 
#line 248 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
pyy2 = ((bpxy.y) - (bfy.y)); 
#line 249 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
pzz1 = ((bpz.x) - (bfz.x)); 
#line 250 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
pzz2 = ((bpz.x) - (bfz.y)); 
#line 252 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
r1 = sqrt(((pxx1 * pxx1) + (pyy1 * pyy1)) + (pzz1 * pzz1)); 
#line 253 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
r2 = sqrt(((pxx2 * pxx2) + (pyy2 * pyy2)) + (pzz2 * pzz2)); 
#line 255 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
r1dr2 = (((pxx1 * pxx2) + (pyy1 * pyy2)) + (pzz1 * pzz2)); 
#line 256 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
r1tr2 = (r1 * r2); 
#line 258 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
len = (((ldx * ldx) + (ldy * ldy)) + (ldz * ldz)); 
#line 259 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
den = ((r1tr2 * (r1tr2 + r1dr2)) + (cd * len)); 
#line 260 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
ubar = (((brg.x) * (r1 + r2)) * ((1.0) / ((4.0) * (3.1415926535897931)))); 
#line 261 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
ubar = (ubar / den); 
#line 263 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
(uindx[0]) += (ubar * ((pyy1 * pzz2) - (pzz1 * pyy2))); 
#line 264 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
(uindy[0]) += (ubar * ((pzz1 * pxx2) - (pxx1 * pzz2))); 
#line 265 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
(uindz[0]) += (ubar * ((pxx1 * pyy2) - (pyy1 * pxx2))); 
#line 266 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
} 
#line 268 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
void BiotSavart_nogpu(double2 *p, double1 *pz, double2 *fx, double2 *fy, double2 *fz, double2 *rg, double2 *uind, double1 *uindz, int n, int f_n, double cd, double co) 
#line 269 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
{ 
#line 270 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
omp_set_num_threads(4); 
#line 271 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int j, k, omptnum; 
#line 273 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (j = 0; j < n; j++) 
#line 274 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
{ 
#line 276 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (k = 0; k < f_n; k++) 
#line 277 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
{ 
#line 278 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
biot_p2p_nogpu(fx[k], fy[k], fz[k], rg[k], p[j], pz[j], &((uind[j]).x), &((uind[j]).y), &((uindz[j]).x), cd, co); 
#line 279 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 280 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 282 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
} 
#line 287 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
static void crunch_array(double *arrayin, double3 *arrayout, mwSize *di) 
#line 288 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
{ 
#line 290 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize ns = (di[0]); 
#line 291 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nd = (di[1]); 
#line 292 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nt = (di[2]); 
#line 293 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nb = (di[3]); 
#line 295 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int i = 0; 
#line 296 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int m, n, p; 
#line 300 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (p = 0; p < nb; p++) { 
#line 301 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (n = 0; n < nt; n++) { 
#line 302 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (m = 0; m < ns; m++) { 
#line 304 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((arrayout[i]).x) = (arrayin[((m + ((0) * ns)) + ((n * ns) * nd)) + (((p * ns) * nt) * nd)]); 
#line 305 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((arrayout[i]).y) = (arrayin[((m + ((1) * ns)) + ((n * ns) * nd)) + (((p * ns) * nt) * nd)]); 
#line 306 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((arrayout[i]).z) = (arrayin[((m + ((2) * ns)) + ((n * ns) * nd)) + (((p * ns) * nt) * nd)]); 
#line 308 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
i++; 
#line 309 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 310 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 311 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 312 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
} 
#line 316 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
static void crunch_rg(double *arrayin1, double *arrayin2, double2 *arrayout, mwSize *di) 
#line 317 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
{ 
#line 318 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize ns = (di[0]); 
#line 319 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nd = (1); 
#line 320 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nt = (di[2]); 
#line 321 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nb = (di[3]); 
#line 322 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int i = 0; 
#line 323 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int m, n, p; 
#line 324 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (p = 0; p < nb; p++) { 
#line 325 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (n = 0; n < nt; n++) { 
#line 326 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (m = 0; m < ns; m++) { 
#line 327 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((arrayout[i]).x) = (arrayin1[((m + ((0) * ns)) + ((n * ns) * nd)) + (((p * ns) * nt) * nd)]); 
#line 328 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((arrayout[i]).y) = (arrayin2[((m + ((0) * ns)) + ((n * ns) * nd)) + (((p * ns) * nt) * nd)]); 
#line 329 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
i++; 
#line 330 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 331 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 332 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 333 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
} 
#line 336 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
static void crunch_f(double *arrayin1, double *arrayin2, double2 *arrayout1, double2 *arrayout2, double2 *arrayout3, mwSize *di) 
#line 337 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
{ 
#line 338 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize ns = (di[0]); 
#line 339 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nd = (di[1]); 
#line 340 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nt = (di[2]); 
#line 341 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nb = (di[3]); 
#line 342 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int i = 0; 
#line 343 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int m, n, p; 
#line 344 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (p = 0; p < nb; p++) { 
#line 345 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (n = 0; n < nt; n++) { 
#line 346 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (m = 0; m < ns; m++) { 
#line 347 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((arrayout1[i]).x) = (arrayin1[((m + ((0) * ns)) + ((n * ns) * nd)) + (((p * ns) * nt) * nd)]); 
#line 348 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((arrayout1[i]).y) = (arrayin2[((m + ((0) * ns)) + ((n * ns) * nd)) + (((p * ns) * nt) * nd)]); 
#line 349 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((arrayout2[i]).x) = (arrayin1[((m + ((1) * ns)) + ((n * ns) * nd)) + (((p * ns) * nt) * nd)]); 
#line 350 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((arrayout2[i]).y) = (arrayin2[((m + ((1) * ns)) + ((n * ns) * nd)) + (((p * ns) * nt) * nd)]); 
#line 351 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((arrayout3[i]).x) = (arrayin1[((m + ((2) * ns)) + ((n * ns) * nd)) + (((p * ns) * nt) * nd)]); 
#line 352 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((arrayout3[i]).y) = (arrayin2[((m + ((2) * ns)) + ((n * ns) * nd)) + (((p * ns) * nt) * nd)]); 
#line 353 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
i++; 
#line 354 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 355 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 356 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 357 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
} 
#line 361 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
static void crunch_p(double *arrayin1, double2 *arrayout1, double1 *arrayout2, mwSize *di) 
#line 362 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
{ 
#line 363 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize ns = (di[0]); 
#line 364 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nd = (3); 
#line 365 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nt = (di[2]); 
#line 366 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nb = (di[3]); 
#line 367 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int i = 0; 
#line 368 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int m, n, p; 
#line 369 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (p = 0; p < nb; p++) { 
#line 370 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (n = 0; n < nt; n++) { 
#line 371 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (m = 0; m < ns; m++) { 
#line 372 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((arrayout1[i]).x) = (arrayin1[((m + ((0) * ns)) + ((n * ns) * nd)) + (((p * ns) * nt) * nd)]); 
#line 373 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((arrayout1[i]).y) = (arrayin1[((m + ((1) * ns)) + ((n * ns) * nd)) + (((p * ns) * nt) * nd)]); 
#line 374 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((arrayout2[i]).x) = (arrayin1[((m + ((2) * ns)) + ((n * ns) * nd)) + (((p * ns) * nt) * nd)]); 
#line 375 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
i++; 
#line 376 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 377 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 378 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 379 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
} 
#line 383 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
static void reassem_uind(double *arrayout, double2 *arrayin1, double1 *arrayin2, mwSize *di) 
#line 384 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
{ 
#line 385 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize ns = (di[0]); 
#line 386 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nd = (3); 
#line 387 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nt = (di[2]); 
#line 388 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nb = (di[3]); 
#line 389 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int i = 0; 
#line 390 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int m, n, p; 
#line 391 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (p = 0; p < nb; p++) { 
#line 392 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (n = 0; n < nt; n++) { 
#line 393 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (m = 0; m < ns; m++) { 
#line 394 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
(arrayout[((m + ((0) * ns)) + ((n * ns) * nd)) + (((p * ns) * nt) * nd)]) = ((arrayin1[i]).x); 
#line 395 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
(arrayout[((m + ((1) * ns)) + ((n * ns) * nd)) + (((p * ns) * nt) * nd)]) = ((arrayin1[i]).y); 
#line 396 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
(arrayout[((m + ((2) * ns)) + ((n * ns) * nd)) + (((p * ns) * nt) * nd)]) = ((arrayin2[i]).x); 
#line 397 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
i++; 
#line 398 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 399 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 400 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 401 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
} 
#line 404 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
static void reassem_array3(double3 arrayin[], double arrayout[], mwSize *di) 
#line 405 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
{ 
#line 406 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize ns = (di[0]); 
#line 407 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nd = (di[1]); 
#line 408 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nt = (di[2]); 
#line 409 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nb = (di[3]); 
#line 411 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int i = 0; 
#line 412 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int m, n, p; 
#line 416 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (p = 0; p < nb; p++) { 
#line 417 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (n = 0; n < nt; n++) { 
#line 418 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (m = 0; m < ns; m++) { 
#line 420 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
(arrayout[((m + ((0) * ns)) + ((n * ns) * nd)) + (((p * ns) * nt) * nd)]) = ((arrayin[i]).x); 
#line 422 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
i++; 
#line 423 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 424 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 425 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 426 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
} 
#line 429 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
static void reassem_array1(double1 arrayin[], double arrayout[], mwSize *di) 
#line 430 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
{ 
#line 431 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize ns = (di[0]); 
#line 432 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nd = (1); 
#line 433 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nt = (di[2]); 
#line 434 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nb = (di[3]); 
#line 436 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int i = 0; 
#line 437 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int m, n, p; 
#line 439 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (p = 0; p < nb; p++) { 
#line 440 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (n = 0; n < nt; n++) { 
#line 441 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
for (m = 0; m < ns; m++) { 
#line 443 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
(arrayout[((m + ((0) * ns)) + ((n * ns) * nd)) + (((p * ns) * nt) * nd)]) = ((arrayin[i]).x); 
#line 445 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
i++; 
#line 446 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 447 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 448 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 449 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
} 
#line 452 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
static void biot_calc(double *uind, double *L, double *F1, double *F2, double *
#line 453 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
P, double *gamma, double *rc, double d, char *cm, double 
#line 454 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
co, char *casetype, mwSize ndi, mwSize *di, mwSize *
#line 455 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
fdi, char *usegpu, double *gpuinfo) 
#line 456 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
{ 
#line 459 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize ns = (di[0]); 
#line 460 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nd = (di[1]); 
#line 461 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nt = (di[2]); 
#line 462 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize nb = (di[3]); 
#line 464 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize f_ns = (fdi[0]); 
#line 465 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize f_nd = (fdi[1]); 
#line 466 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize f_nt = (fdi[2]); 
#line 467 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize f_nb = (fdi[3]); 
#line 470 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize cartprobsize = ((ns * nt) * nb); 
#line 471 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize f_cartprobsize = ((f_ns * f_nt) * f_nb); 
#line 472 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int np = ((int)cartprobsize); 
#line 473 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int nf = ((int)f_cartprobsize); 
#line 474 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int i, j, k; 
#line 477 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double2 *pxy; 
#line 478 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double1 *pz; 
#line 479 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double2 *fx, *fy, *fz; 
#line 480 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double2 *rg; 
#line 481 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double2 *uxy; 
#line 482 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double1 *uz; 
#line 483 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double1 *L_new; 
#line 486 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int gpusim = 0; 
#line 487 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (strncmp("true", usegpu, 4) == 0) { 
#line 488 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
gpusim = 1; 
#line 489 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 492 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int threadcount = ((int)(gpuinfo[0])); 
#line 493 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int blockcount = 0; 
#line 494 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int numcards = ((int)(gpuinfo[1])); 
#line 495 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
int deviceind = 0; 
#line 496 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
size_t memfree, memtotal; 
#line 497 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
clock_t t0, t1; 
#line 500 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double2 *dev_pxy; 
#line 501 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double1 *dev_pz; 
#line 502 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double2 *dev_fx, *dev_fy, *dev_fz; 
#line 503 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double2 *dev_rg; 
#line 504 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double1 *dev_len; 
#line 505 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double2 *dev_uxy; 
#line 506 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double1 *dev_uz; 
#line 510 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaError_t cudaError; 
#line 513 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
pxy = ((double2 *)malloc(cartprobsize * sizeof(double2))); 
#line 514 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
pz = ((double1 *)malloc(cartprobsize * sizeof(double1))); 
#line 515 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
uxy = ((double2 *)malloc(cartprobsize * sizeof(double2))); 
#line 516 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
uz = ((double1 *)malloc(cartprobsize * sizeof(double1))); 
#line 517 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
fx = ((double2 *)malloc(f_cartprobsize * sizeof(double2))); 
#line 518 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
fy = ((double2 *)malloc(f_cartprobsize * sizeof(double2))); 
#line 519 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
fz = ((double2 *)malloc(f_cartprobsize * sizeof(double2))); 
#line 520 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
rg = ((double2 *)malloc(f_cartprobsize * sizeof(double2))); 
#line 521 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
L_new = ((double1 *)malloc(cartprobsize * sizeof(double1))); 
#line 524 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
crunch_p(P, pxy, pz, di); 
#line 525 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
crunch_f(F1, F2, fx, fy, fz, fdi); 
#line 526 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
crunch_rg(gamma, rc, rg, fdi); 
#line 530 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (gpusim == 1) { 
#line 532 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
checkCUDAError("memcpy"); 
#line 535 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
blockcount = cuda_setup(f_cartprobsize, threadcount, numcards, deviceind); 
#line 538 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaError = cudaMalloc((void **)(&dev_fx), f_cartprobsize * sizeof(double2)); 
#line 539 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (cudaError != (cudaSuccess)) { mexErrMsgTxt("Out of Nvidia device memory."); }  
#line 540 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaError = cudaMalloc((void **)(&dev_fy), f_cartprobsize * sizeof(double2)); 
#line 541 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (cudaError != (cudaSuccess)) { mexErrMsgTxt("Out of Nvidia device memory."); }  
#line 542 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaError = cudaMalloc((void **)(&dev_fz), f_cartprobsize * sizeof(double2)); 
#line 543 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (cudaError != (cudaSuccess)) { mexErrMsgTxt("Out of Nvidia device memory."); }  
#line 544 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaError = cudaMalloc((void **)(&dev_len), cartprobsize * sizeof(double1)); 
#line 545 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (cudaError != (cudaSuccess)) { mexErrMsgTxt("Out of Nvidia device memory."); }  
#line 546 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaError = cudaMalloc((void **)(&dev_pxy), cartprobsize * sizeof(double2)); 
#line 547 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (cudaError != (cudaSuccess)) { mexErrMsgTxt("Out of Nvidia device memory."); }  
#line 548 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaError = cudaMalloc((void **)(&dev_pz), cartprobsize * sizeof(double1)); 
#line 549 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (cudaError != (cudaSuccess)) { mexErrMsgTxt("Out of Nvidia device memory."); }  
#line 550 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaError = cudaMalloc((void **)(&dev_rg), f_cartprobsize * sizeof(double2)); 
#line 551 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (cudaError != (cudaSuccess)) { mexErrMsgTxt("Out of Nvidia device memory."); }  
#line 552 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaError = cudaMalloc((void **)(&dev_uxy), cartprobsize * sizeof(double2)); 
#line 553 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (cudaError != (cudaSuccess)) { mexErrMsgTxt("Out of Nvidia device memory."); }  
#line 554 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaError = cudaMalloc((void **)(&dev_uz), cartprobsize * sizeof(double1)); 
#line 555 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (cudaError != (cudaSuccess)) { mexErrMsgTxt("Out of Nvidia device memory."); }  
#line 558 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaMemset(dev_uxy, (0.0), cartprobsize * sizeof(double2)); 
#line 559 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaMemset(dev_uz, (0.0), cartprobsize * sizeof(double1)); 
#line 560 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaMemset(dev_fx, (0.0), f_cartprobsize * sizeof(double2)); 
#line 561 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaMemset(dev_fy, (0.0), f_cartprobsize * sizeof(double2)); 
#line 562 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaMemset(dev_fz, (0.0), f_cartprobsize * sizeof(double2)); 
#line 565 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaMemcpy(dev_fx, fx, f_cartprobsize * sizeof(double2), cudaMemcpyHostToDevice); 
#line 566 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaMemcpy(dev_fy, fy, f_cartprobsize * sizeof(double2), cudaMemcpyHostToDevice); 
#line 567 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaMemcpy(dev_fz, fz, f_cartprobsize * sizeof(double2), cudaMemcpyHostToDevice); 
#line 568 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaMemcpy(dev_pxy, pxy, cartprobsize * sizeof(double2), cudaMemcpyHostToDevice); 
#line 569 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaMemcpy(dev_pz, pz, cartprobsize * sizeof(double1), cudaMemcpyHostToDevice); 
#line 570 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaMemcpy(dev_rg, rg, f_cartprobsize * sizeof(double2), cudaMemcpyHostToDevice); 
#line 571 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaMemcpyToSymbol(cutoff, &co, sizeof(double)); 
#line 572 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaMemcpyToSymbol(cored, &d, sizeof(double)); 
#line 573 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaMemcpyToSymbol(dev_np, &np, sizeof(int)); 
#line 574 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaMemcpyToSymbol(dev_nf, &nf, sizeof(int)); 
#line 575 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaMemcpyToSymbol(threadsperblock, &blockcount, sizeof(int)); 
#line 579 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
checkCUDAError("memcpy"); 
#line 582 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (strncmp("leng", casetype, 4) == 0) { 
#line 584 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
dim3 dimGrid(blockcount); 
#line 585 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
dim3 dimBlock(threadcount); 
#line 586 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaConfigureCall(dimGrid, dimBlock) ? ((void)0) : calcLengthOnly(dev_fx, dev_fy, dev_fz, dev_len); 
#line 587 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 590 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double c0 = (0); 
#line 591 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (strncmp("fuln", casetype, 4) == 0) { 
#line 593 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
dim3 dimGrid(blockcount); 
#line 594 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
dim3 dimBlock(threadcount); 
#line 595 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
c0 = omp_get_wtime(); 
#line 596 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaConfigureCall(dimGrid, dimBlock) ? ((void)0) : BiotSavart_naive(dev_pxy, dev_pz, dev_fx, dev_fy, dev_fz, dev_rg, dev_uxy, dev_uz); 
#line 598 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 601 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (strncmp("fuls", casetype, 4) == 0) { 
#line 603 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
dim3 dimGrid(blockcount); 
#line 604 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
dim3 dimBlock(threadcount); 
#line 605 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
c0 = omp_get_wtime(); 
#line 606 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaConfigureCall(dimGrid, dimBlock) ? ((void)0) : BiotSavart_sh(dev_pxy, dev_pz, dev_fx, dev_fy, dev_fz, dev_rg, dev_uxy, dev_uz); 
#line 608 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 611 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaThreadSynchronize(); 
#line 612 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double c1 = omp_get_wtime(); 
#line 616 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
checkCUDAError("kernel invocation"); 
#line 618 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (strncmp("leng", casetype, 4) == 0) { 
#line 619 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaMemcpy(L_new, dev_len, cartprobsize * sizeof(double1), cudaMemcpyDeviceToHost); 
#line 620 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 622 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (strncmp("ful", casetype, 3) == 0) { 
#line 623 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaMemcpy(uxy, dev_uxy, cartprobsize * sizeof(double2), cudaMemcpyDeviceToHost); 
#line 624 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaMemcpy(uz, dev_uz, cartprobsize * sizeof(double1), cudaMemcpyDeviceToHost); 
#line 625 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 629 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
checkCUDAError("memcpy"); 
#line 632 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 634 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (gpusim == 0) { 
#line 637 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
memset(uxy, (0.0), cartprobsize * sizeof(double2)); 
#line 638 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
memset(uz, (0.0), cartprobsize * sizeof(double1)); 
#line 640 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
BiotSavart_nogpu(pxy, pz, fx, fy, fz, rg, uxy, uz, cartprobsize, f_cartprobsize, d, co); 
#line 643 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 645 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (strncmp("leng", casetype, 4) == 0) { 
#line 646 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
reassem_array1(L_new, L, di); 
#line 647 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 649 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (strncmp("ful", casetype, 3) == 0) { 
#line 650 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
reassem_uind(uind, uxy, uz, di); 
#line 651 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 655 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (gpusim == 1) { 
#line 656 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaFree(dev_uxy); 
#line 657 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaFree(dev_uz); 
#line 658 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaFree(dev_fx); 
#line 659 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaFree(dev_fy); 
#line 660 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaFree(dev_fz); 
#line 661 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaFree(dev_len); 
#line 662 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaFree(dev_pxy); 
#line 663 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaFree(dev_pz); 
#line 664 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cudaFree(dev_rg); 
#line 665 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 667 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
free(pxy); 
#line 668 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
free(pz); 
#line 669 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
free(uxy); 
#line 670 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
free(uz); 
#line 671 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
free(fx); 
#line 672 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
free(fy); 
#line 673 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
free(fz); 
#line 674 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
free(L_new); 
#line 675 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
free(rg); 
#line 678 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (gpusim == 1) { 
#line 679 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cuMemGetInfo_v2(&memfree, &memtotal); 
#line 682 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 685 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
} 
#line 688 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[]) 
#line 689 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
{ 
#line 691 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize ndims, ndimsin; 
#line 692 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize dims[4], lendims[4], fdims[4]; 
#line 693 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
const mwSize *indims, *findims; 
#line 694 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double *uind_ptr, *l_ptr; 
#line 695 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double *f1_ptr, *f2_ptr, *p_ptr, *gamma_ptr; 
#line 696 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double *rc_ptr, *co_ptr, *d_ptr; 
#line 697 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
double *gpuhw_ptr; 
#line 698 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
char *type_ptr, *cm_ptr, *gpuflag_ptr; 
#line 699 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
const char *cmnum_ptr; 
#line 700 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mwSize cm_buflen, type_buflen, gpuflag_buflen, cmnum_buflen; 
#line 702 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cm_buflen = (mxGetNumberOfElements(prhs[6]) + (1)); 
#line 703 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
type_buflen = (mxGetNumberOfElements(prhs[8]) + (1)); 
#line 704 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
gpuflag_buflen = (mxGetNumberOfElements(prhs[9]) + (1)); 
#line 705 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cmnum_buflen = (cm_buflen - (4)); 
#line 707 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cm_ptr = ((char *)mxCalloc(cm_buflen, sizeof(char))); 
#line 708 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
type_ptr = ((char *)mxCalloc(type_buflen, sizeof(char))); 
#line 709 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
gpuflag_ptr = ((char *)mxCalloc(gpuflag_buflen, sizeof(char))); 
#line 710 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
cmnum_ptr = ((const char *)mxCalloc(cmnum_buflen, sizeof(char))); 
#line 713 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (mxGetString_730(prhs[6], cm_ptr, cm_buflen)) { 
#line 714 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mexErrMsgTxt("Couldn\'t make Core Model string."); }  
#line 715 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (mxGetString_730(prhs[8], type_ptr, type_buflen)) { 
#line 716 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mexErrMsgTxt("Couldn\'t make TYPE string."); }  
#line 717 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (mxGetString_730(prhs[9], gpuflag_ptr, gpuflag_buflen)) { 
#line 718 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mexErrMsgTxt("Couldn\'t make GPU string."); }  
#line 720 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (nrhs != 11) { 
#line 721 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mexErrMsgTxt("11 inputs expected."); }  
#line 722 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (nlhs != 2) { 
#line 723 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mexErrMsgTxt("2 outputs expected."); }  
#line 729 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
ndimsin = mxGetNumberOfDimensions_730(prhs[2]); 
#line 735 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (ndimsin != (4)) { 
#line 737 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
ndims = (4); 
#line 738 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
} else { 
#line 739 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
ndims = ndimsin; 
#line 740 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  
#line 742 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
indims = mxGetDimensions_730(prhs[2]); 
#line 743 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
findims = mxGetDimensions_730(prhs[0]); 
#line 745 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
if (ndimsin == (1)) { 
#line 746 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mexErrMsgTxt("Need more dimensions in P."); 
#line 747 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
} else { if (ndimsin == (2)) { 
#line 748 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((dims)[0]) = (indims[0]); 
#line 749 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((dims)[1]) = (indims[1]); 
#line 750 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((dims)[2]) = (1); 
#line 751 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((dims)[3]) = (1); 
#line 752 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
} else { if (ndimsin == (3)) { 
#line 753 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((dims)[0]) = (indims[0]); 
#line 754 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((dims)[1]) = (indims[1]); 
#line 755 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((dims)[2]) = (indims[2]); 
#line 756 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((dims)[3]) = (1); 
#line 757 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
} else { if (ndimsin == (4)) { 
#line 758 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((dims)[0]) = (indims[0]); 
#line 759 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((dims)[1]) = (indims[1]); 
#line 760 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((dims)[2]) = (indims[2]); 
#line 761 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((dims)[3]) = (indims[3]); 
#line 762 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
} else { 
#line 763 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
mexErrMsgTxt("Wrong dimensions in P."); 
#line 764 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}  }  }  }  
#line 766 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((fdims)[0]) = (findims[0]); 
#line 767 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((fdims)[1]) = (findims[1]); 
#line 768 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((fdims)[2]) = (findims[2]); 
#line 769 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((fdims)[3]) = (findims[3]); 
#line 776 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
(plhs[0]) = mxCreateNumericArray_730(ndims, dims, mxDOUBLE_CLASS, mxREAL); 
#line 778 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((lendims)[0]) = ((dims)[0]); 
#line 779 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((lendims)[1]) = (1); 
#line 780 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((lendims)[2]) = ((dims)[2]); 
#line 781 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
((lendims)[3]) = ((dims)[3]); 
#line 783 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
(plhs[1]) = mxCreateNumericArray_730(ndims, lendims, mxDOUBLE_CLASS, mxREAL); 
#line 786 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
uind_ptr = mxGetPr(plhs[0]); 
#line 787 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
l_ptr = mxGetPr(plhs[1]); 
#line 788 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
f1_ptr = mxGetPr(prhs[0]); 
#line 789 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
f2_ptr = mxGetPr(prhs[1]); 
#line 790 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
p_ptr = mxGetPr(prhs[2]); 
#line 791 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
gamma_ptr = mxGetPr(prhs[3]); 
#line 792 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
rc_ptr = mxGetPr(prhs[4]); 
#line 793 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
d_ptr = mxGetPr(prhs[5]); 
#line 794 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
co_ptr = mxGetPr(prhs[7]); 
#line 795 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
gpuhw_ptr = mxGetPr(prhs[10]); 
#line 801 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
biot_calc(uind_ptr, l_ptr, f1_ptr, f2_ptr, p_ptr, gamma_ptr, rc_ptr, d_ptr[0], cm_ptr, co_ptr[0], type_ptr, ndims, dims, fdims, gpuflag_ptr, gpuhw_ptr); 
#line 807 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
} 
#line 1 "tmpxft_00000600_00000000-3_BiotSavartMex.cudafe1.stub.c"

#line 1 "tmpxft_00000600_00000000-3_BiotSavartMex.cudafe1.stub.c"
#line 1 "c:\\users\\admin\\appdata\\local\\temp\\tmpxft_00000600_00000000-3_BiotSavartMex.cudafe1.stub.c"
#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/host_runtime.h"







































































#line 73 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/host_runtime.h"

template <typename T>
static inline void *__cudaAddressOf(T &val) 
{
    return (void *)(&(const_cast<char &>(reinterpret_cast<const volatile char &>(val))));
}












          



          



          



extern "C" {

extern void** __stdcall __cudaRegisterFatBinary(
  void *fatCubin
);

extern void __stdcall __cudaUnregisterFatBinary(
  void **fatCubinHandle
);

extern void __stdcall __cudaRegisterVar(
        void **fatCubinHandle,
        char  *hostVar,
        char  *deviceAddress,
  const char  *deviceName,
        int    ext,
        int    size,
        int    constant,
        int    global
);

extern void __stdcall __cudaRegisterTexture(
        void                    **fatCubinHandle,
  const struct textureReference  *hostVar,
  const void                    **deviceAddress,
  const char                     *deviceName,
        int                       dim,       
        int                       norm,      
        int                       ext        
);

extern void __stdcall __cudaRegisterSurface(
        void                    **fatCubinHandle,
  const struct surfaceReference  *hostVar,
  const void                    **deviceAddress,
  const char                     *deviceName,
        int                       dim,       
        int                       ext        
);

extern void __stdcall __cudaRegisterFunction(
        void   **fatCubinHandle,
  const char    *hostFun,
        char    *deviceFun,
  const char    *deviceName,
        int      thread_limit,
        uint3   *tid,
        uint3   *bid,
        dim3    *bDim,
        dim3    *gDim,
        int     *wSize
);





#line 161 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/host_runtime.h"

extern int __cdecl atexit(void(__cdecl *)(void));

#line 165 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/host_runtime.h"

}

static void **__cudaFatCubinHandle;

static void __cdecl __cudaUnregisterBinaryUtil(void)
{
  __cudaUnregisterFatBinary(__cudaFatCubinHandle);
}

#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\common_functions.h"






















































































































































#line 152 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\common_functions.h"







#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"











































































 







































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 2933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"

#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\host_defines.h"







































































































































































































#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\host_defines.h"
#line 2935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_constants.h"






































































































#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_constants.h"























































#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_constants.h"
#line 2936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"














































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 5543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"







#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/func_macro.h"













































#line 47 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/func_macro.h"





#line 53 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/func_macro.h"









#line 63 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/func_macro.h"




#line 68 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/func_macro.h"

#line 70 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/func_macro.h"

#line 72 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/func_macro.h"
#line 5551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"



inline int __isnan(double a)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } cvt;

  cvt.d = a;

  return cvt.l << 1 > 0xffe0000000000000ull;
}

#line 5567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"









inline double exp10(double a)
{
  return pow(10.0, a);
}

inline float exp10f(float a)
{
    return (float)exp10((double)a);
}

inline void sincos(double a, double *sptr, double *cptr)
{
  *sptr = sin(a);
  *cptr = cos(a);
}

inline void sincosf(float a, float *sptr, float *cptr)
{
  double s, c;

  sincos((double)a, &s, &c);
  *sptr = (float)s;
  *cptr = (float)c;
}

inline int __isinf(double a)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } cvt;

  cvt.d = a;

  return cvt.l << 1 == 0xffe0000000000000ull;
}

#line 5614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"



inline double log2(double a)
{
  return log(a) * 1.44269504088896340;
}

#line 5623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"








#line 5632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"







inline int __signbit(double a)
{
  volatile union {
    double               d;
    signed long long int l;
  } cvt;

  cvt.d = a;
  return cvt.l < 0ll;
}

inline double copysign(double a, double b)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } cvta, cvtb;

  cvta.d = a;
  cvtb.d = b;
  cvta.l = (cvta.l & 0x7fffffffffffffffULL) | (cvtb.l & 0x8000000000000000ULL);
  return cvta.d;
}

inline int __finite(double a)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } cvt;

  cvt.d = a;
  return cvt.l << 1 < 0xffe0000000000000ull;
}

inline double fmax(double a, double b)
{
  if (__isnan(a) && __isnan(b)) return a + b;
  if (__isnan(a)) return b;
  if (__isnan(b)) return a;
  if ((a == 0.0) && (b == 0.0) && __signbit(b)) return a;
  return a > b ? a : b;
}

inline double fmin(double a, double b)
{
  if (__isnan(a) && __isnan(b)) return a + b;
  if (__isnan(a)) return b;
  if (__isnan(b)) return a;
  if ((a == 0.0) && (b == 0.0) && __signbit(a)) return a;
  return a < b ? a : b;
}

inline double trunc(double a)
{
  return a < 0.0 ? ceil(a) : floor(a);
}

inline double round(double a)
{
  double fa = fabs(a);

  if (fa > 4503599627370496.0) {
    return a;
  } else {
    double u = floor(fa + 0.5);
    if (fa < 0.5) u = 0;
    u = copysign (u, a);
    return u;
  }
}

inline long int lround(double a)
{
  return (long int)round(a);
}

inline long long int llround(double a)
{
  return (long long int)round(a);
}

inline double rint(double a)
{
  double fa = fabs(a);
  double u = 4503599627370496.0 + fa;
  if (fa >= 4503599627370496.0) {
    u = a;
  } else {
    u = u - 4503599627370496.0;
    u = copysign (u, a);
  }
  return u;  
}
inline double nearbyint(double a)
{
  return rint(a);
}

inline long int lrint(double a)
{
  return (long int)rint(a);
}

inline long long int llrint(double a)
{
  return (long long int)rint(a);
}

inline double fdim(double a, double b)
{
  if (a > b) {
    return (a - b);
  } else if (a <= b) {
    return 0.0;
  } else if (__isnan(a)) {
    return a;
  } else {
    return b;
  }
}

inline double scalbn(double a, int b)
{
  return ldexp(a, b);
}

inline double scalbln(double a, long int b)
{
  int t;

  if (b > 2147483647L) {
    t = 2147483647;
  } else if (b < (-2147483647 - 1)) {
    t = (-2147483647 - 1);
  } else {
    t = (int)b;
  }
  return scalbn(a, t);
}

inline double exp2(double a)
{
  return pow(2.0, a);
}






inline double log1p(double a)
{
  volatile double u, m;

  u = 1.0 + a;
  if (u == 1.0) {
    
    u = a;
  } else {
    m = u - 1.0;
    u = log(u);
    if (a < 1.0) {
      
      u = a * u;
      u = u / m;
    }
  }
  return u;
}




inline double expm1(double a)
{
  volatile double u, m;

  u = exp(a);
  m = u - 1.0;
  if (m == 0.0) {
    
    m = a;
  } 
  else if (fabs(a) < 1.0) {
    
    u = log(u);
    m = m * a;
    m = m / u;
  }
  return m;
}

inline double cbrt(double a)
{
  double s, t;

  if (a == 0.0 || __isinf(a)) {
    return a;
  } 
  s = fabs(a);
  t = exp2(3.3333333333333333e-1 * log2(s));           
  t = t - (t - (s / (t * t))) * 3.3333333333333333e-1; 
  t = copysign(t, a);
  return t;
}

inline double acosh(double a)
{
  double s, t;

  t = a - 1.0;
  if (t == a) {
    return log(2.0) + log(a);
  } else {
    s = a + 1.0;
    t = t + sqrt(s * t);
    return log1p(t);
  }
}

inline double asinh(double a)
{
  double fa, oofa, t;

  fa = fabs(a);
  if (fa > 1e18) {
    t = log(2.0) + log(fa);
  } else {
    oofa = 1.0 / fa;
    t = fa + fa / (oofa + sqrt(1.0 + oofa * oofa));
    t = log1p(t);
  }
  t = copysign(t, a);
  return t;
}

inline double atanh(double a)
{
  double fa, t;

  if (__isnan(a)) {
    return a + a;
  }
  fa = fabs(a);
  t = (2.0 * fa) / (1.0 - fa);
  t = 0.5 * log1p(t);
  if (__isnan(t) || !__signbit(a)) {
    return t;
  }
  return -t;
}

inline int ilogb(double a)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } x;
  unsigned long long int i;
  int expo = -1022;

  if (__isnan(a)) return -((int)((unsigned int)-1 >> 1))-1;
  if (__isinf(a)) return ((int)((unsigned int)-1 >> 1));
  x.d = a;
  i = x.l & 0x7fffffffffffffffull;
  if (i == 0) return -((int)((unsigned int)-1 >> 1))-1;
  if (i >= 0x0010000000000000ull) {
    return (int)(((i >> 52) & 0x7ff) - 1023);
  }
  while (i < 0x0010000000000000ull) {
    expo--;
    i <<= 1;
  }
  return expo;
}

inline double logb(double a)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } x;
  unsigned long long int i;
  int expo = -1022;

  if (__isnan(a)) return a + a;
  if (__isinf(a)) return fabs(a);
  x.d = a;
  i = x.l & 0x7fffffffffffffffull;
  if (i == 0) return -1.0/fabs(a);
  if (i >= 0x0010000000000000ull) {
    return (double)((int)((i >> 52) & 0x7ff) - 1023);
  }
  while (i < 0x0010000000000000ull) {
    expo--;
    i <<= 1;
  }
  return (double)expo;
}

inline double remquo(double a, double b, int *quo)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } cvt;
  int rem1 = 1; 
  int expo_a;
  int expo_b;
  unsigned long long mant_a;
  unsigned long long mant_b;
  unsigned long long mant_c;
  unsigned long long temp;
  int sign_a;
  int sign_b;
  int sign_c;
  int expo_c;
  int expodiff;
  int quot = 0;                 
  int l;
  int iter;

  cvt.d = a;
  mant_a = (cvt.l << 11) | 0x8000000000000000ULL;
  expo_a = (int)((cvt.l >> 52) & 0x7ff) - 1023;
  sign_a = (int)(cvt.l >> 63);

  cvt.d = b;
  mant_b = (cvt.l << 11) | 0x8000000000000000ULL;
  expo_b = (int)((cvt.l >> 52) & 0x7ff) - 1023;
  sign_b = (int)(cvt.l >> 63);

  sign_c = sign_a;  
  expo_c = expo_a;  
      
  
  if (__isnan(a) || __isnan(b)) {
    *quo = quot;
    return a + b;
  }
  if (__isinf(a) || (b == 0.0)) {
    *quo = quot;
    cvt.l = 0xfff8000000000000ULL;
    return cvt.d;
  }
  if ((a == 0.0) || (__isinf(b))) {
    *quo = quot;
    return a;
  }
  
  if (expo_a < -1022) {
    mant_a = mant_a + mant_a;
    while (mant_a < 0x8000000000000000ULL) {
      mant_a = mant_a + mant_a;
      expo_a--;
    }
  } 
  if (expo_b < -1022) {
    mant_b = mant_b + mant_b;
    while (mant_b < 0x8000000000000000ULL) {
      mant_b = mant_b + mant_b;
      expo_b--;
    }
  }
  expodiff = expo_a - expo_b;
  
  if (expodiff < 0) {
    iter = -1;
  } else {
    iter = expodiff;
  }
  


  mant_a = mant_a >> 1;
  mant_b = mant_b >> 1;
  expo_c = expo_a - iter; 

  
  for (l = 0; l < (iter + 1); l++) {
    mant_a = mant_a - mant_b;
    if (mant_a & 0x8000000000000000ULL) {
      mant_a = mant_a + mant_b;
      quot = quot + quot;
    } else {
      quot = quot + quot + 1;
    }
    mant_a = mant_a + mant_a;
  }

  
  mant_c = mant_a;
  
  if (mant_c == 0) {
    quot = quot & 7;
    *quo = (sign_a ^ sign_b) ? -quot : quot;
    cvt.l = (unsigned long long int)sign_c << 63;
    return cvt.d;
  }
  
  while (!(mant_c & 0x8000000000000000ULL)) {
    mant_c = mant_c + mant_c;
    expo_c--;
  }
  


  if (rem1 && ((expodiff+1) >= 0)) {
    temp = mant_a - mant_b;
    
    if (((temp != 0ULL) && (!(temp & 0x8000000000000000ULL))) ||
        ((temp == 0ULL) && (quot & 1))) {
      mant_a = mant_a >> 1;
      quot++;
      



      sign_c = 1 ^ sign_c;
      expo_c = expo_a - iter + 1;
      mant_c = mant_b - mant_a;
      
      while (!(mant_c & 0x8000000000000000ULL)) {
        mant_c = mant_c + mant_c;
        expo_c--;
      }
    }
  }
  
  if (expo_c >= -1022) { 
    mant_c = ((mant_c >> 11) + 
              ((((unsigned long long)sign_c) << 63) +
               (((unsigned long long)(expo_c + 1022)) << 52)));
  } else { 
    mant_c = ((((unsigned long long)sign_c) << 63) + 
              (mant_c >> (11 - expo_c - 1022)));
  }
  quot = quot & 7; 
  *quo = (sign_a ^ sign_b) ? -quot : quot;
  cvt.l = mant_c;
  return cvt.d;
}

inline double remainder(double a, double b)
{
  int quo;
  return remquo (a, b, &quo);
}

inline double fma (double a, double b, double c)
{
  volatile union {
    struct {
      unsigned int lo;
      unsigned int hi;
    } part;
    double d;
  } xx, yy, zz, ww;
  unsigned int s, t, u, prod0, prod1, prod2, prod3, expo_x, expo_y, expo_z;
  
  xx.d = a;
  yy.d = b;
  zz.d = c;

  expo_z = 0x7FF;
  t =  xx.part.hi >> 20;
  expo_x = expo_z & t;
  expo_x = expo_x - 1;    
  t =  yy.part.hi >> 20;
  expo_y = expo_z & t;
  expo_y = expo_y - 1;    
  t =  zz.part.hi >> 20;
  expo_z = expo_z & t;
  expo_z = expo_z - 1;    

  if (!((expo_x <= 0x7FD) &&
        (expo_y <= 0x7FD) &&
        (expo_z <= 0x7FD))) {
    
    



    if (((yy.part.hi << 1) | (yy.part.lo != 0)) > 0xffe00000) {
      yy.part.hi |= 0x00080000;
      return yy.d;
    }
    if (((zz.part.hi << 1) | (zz.part.lo != 0)) > 0xffe00000) {
      zz.part.hi |= 0x00080000;
      return zz.d;
    }
    if (((xx.part.hi << 1) | (xx.part.lo != 0)) > 0xffe00000) {
      xx.part.hi |= 0x00080000;
      return xx.d;
    }
    
    










    if (((((xx.part.hi << 1) | xx.part.lo) == 0) && 
         (((yy.part.hi << 1) | (yy.part.lo != 0)) == 0xffe00000)) ||
        ((((yy.part.hi << 1) | yy.part.lo) == 0) && 
         (((xx.part.hi << 1) | (xx.part.lo != 0)) == 0xffe00000))) {
      xx.part.hi = 0xfff80000;
      xx.part.lo = 0x00000000;
      return xx.d;
    }
    if (((zz.part.hi << 1) | (zz.part.lo != 0)) == 0xffe00000) {
      if ((((yy.part.hi << 1) | (yy.part.lo != 0)) == 0xffe00000) ||
          (((xx.part.hi << 1) | (xx.part.lo != 0)) == 0xffe00000)) {
        if ((int)(xx.part.hi ^ yy.part.hi ^ zz.part.hi) < 0) {
          xx.part.hi = 0xfff80000;
          xx.part.lo = 0x00000000;
          return xx.d;
        }
      }
    }
    



    if (((xx.part.hi << 1) | (xx.part.lo != 0)) == 0xffe00000) {
      xx.part.hi = xx.part.hi ^ (yy.part.hi & 0x80000000);
      return xx.d;
    }
    if (((yy.part.hi << 1) | (yy.part.lo != 0)) == 0xffe00000) {
      yy.part.hi = yy.part.hi ^ (xx.part.hi & 0x80000000);
      return yy.d;
    }
    if (((zz.part.hi << 1) | (zz.part.lo != 0)) == 0xffe00000) {
      return zz.d;
    }
    




    if ((zz.part.hi == 0x80000000) && (zz.part.lo == 0)) {
      if ((((xx.part.hi << 1) | xx.part.lo) == 0) ||
          (((yy.part.hi << 1) | yy.part.lo) == 0)) {
        if ((int)(xx.part.hi ^ yy.part.hi) < 0) {
          return zz.d;
        }
      }
    }
    


    if ((((zz.part.hi << 1) | zz.part.lo) == 0) &&
        ((((xx.part.hi << 1) | xx.part.lo) == 0) ||
         (((yy.part.hi << 1) | yy.part.lo) == 0))) {
      zz.part.hi &= 0x7fffffff;
      return zz.d;
    }
    
    


    if ((((xx.part.hi << 1) | xx.part.lo) == 0) ||
        (((yy.part.hi << 1) | yy.part.lo) == 0)) {
      return zz.d;
    }
    
    if (expo_x == 0xffffffff) {
      expo_x++;
      t = xx.part.hi & 0x80000000;
      s = xx.part.lo >> 21;
      xx.part.lo = xx.part.lo << 11;
      xx.part.hi = xx.part.hi << 11;
      xx.part.hi = xx.part.hi | s;
      if (!xx.part.hi) {
        xx.part.hi = xx.part.lo;
        xx.part.lo = 0;
        expo_x -= 32;
      }
      while ((int)xx.part.hi > 0) {
        s = xx.part.lo >> 31;
        xx.part.lo = xx.part.lo + xx.part.lo;
        xx.part.hi = xx.part.hi + xx.part.hi;
        xx.part.hi = xx.part.hi | s;
        expo_x--;
      }
      xx.part.lo = (xx.part.lo >> 11);
      xx.part.lo |= (xx.part.hi << 21);
      xx.part.hi = (xx.part.hi >> 11) | t;
    }
    if (expo_y == 0xffffffff) {
      expo_y++;
      t = yy.part.hi & 0x80000000;
      s = yy.part.lo >> 21;
      yy.part.lo = yy.part.lo << 11;
      yy.part.hi = yy.part.hi << 11;
      yy.part.hi = yy.part.hi | s;
      if (!yy.part.hi) {
        yy.part.hi = yy.part.lo;
        yy.part.lo = 0;
        expo_y -= 32;
      }
      while ((int)yy.part.hi > 0) {
        s = yy.part.lo >> 31;
        yy.part.lo = yy.part.lo + yy.part.lo;
        yy.part.hi = yy.part.hi + yy.part.hi;
        yy.part.hi = yy.part.hi | s;
        expo_y--;
      }
      yy.part.lo = (yy.part.lo >> 11);
      yy.part.lo |= (yy.part.hi << 21);
      yy.part.hi = (yy.part.hi >> 11) | t;
    }
    if (expo_z == 0xffffffff) {
      expo_z++;
      t = zz.part.hi & 0x80000000;
      s = zz.part.lo >> 21;
      zz.part.lo = zz.part.lo << 11;
      zz.part.hi = zz.part.hi << 11;
      zz.part.hi = zz.part.hi | s;
      if (!zz.part.hi) {
        zz.part.hi = zz.part.lo;
        zz.part.lo = 0;
        expo_z -= 32;
      }
      while ((int)zz.part.hi > 0) {
        s = zz.part.lo >> 31;
        zz.part.lo = zz.part.lo + zz.part.lo;
        zz.part.hi = zz.part.hi + zz.part.hi;
        zz.part.hi = zz.part.hi | s;
        expo_z--;
      }
      zz.part.lo = (zz.part.lo >> 11);
      zz.part.lo |= (zz.part.hi << 21);
      zz.part.hi = (zz.part.hi >> 11) | t;
    }
  }
  
  expo_x = expo_x + expo_y;
  expo_y = xx.part.hi ^ yy.part.hi;
  t = xx.part.lo >> 21;
  xx.part.lo = xx.part.lo << 11;
  xx.part.hi = xx.part.hi << 11;
  xx.part.hi = xx.part.hi | t;
  yy.part.hi = yy.part.hi & 0x000fffff;
  xx.part.hi = xx.part.hi | 0x80000000; 
  yy.part.hi = yy.part.hi | 0x00100000; 

  prod0 = xx.part.lo * yy.part.lo;
  prod1 =(unsigned)(((unsigned long long)xx.part.lo*(unsigned long long)yy.part.lo)>>32);
  prod2 = xx.part.hi * yy.part.lo;
  prod3 = xx.part.lo * yy.part.hi;
  prod1 += prod2;
  t = (unsigned)(prod1 < prod2);
  prod1 += prod3;
  t += prod1 < prod3;
  prod2 =(unsigned)(((unsigned long long)xx.part.hi*(unsigned long long)yy.part.lo)>>32);
  prod3 =(unsigned)(((unsigned long long)xx.part.lo*(unsigned long long)yy.part.hi)>>32);
  prod2 += prod3;
  s = (unsigned)(prod2 < prod3);
  prod3 = xx.part.hi * yy.part.hi;
  prod2 += prod3;
  s += prod2 < prod3;
  prod2 += t;
  s += prod2 < t;
  prod3 =(unsigned)(((unsigned long long)xx.part.hi*(unsigned long long)yy.part.hi)>>32);
  prod3 = prod3 + s;
  
  yy.part.lo = prod0;                 
  yy.part.hi = prod1;                 
  xx.part.lo = prod2;                 
  xx.part.hi = prod3;                 
  expo_x = expo_x - (1023 - 2);  
  expo_y = expo_y & 0x80000000;  

  if (xx.part.hi < 0x00100000) {
    s = xx.part.lo >> 31;
    s = (xx.part.hi << 1) + s;
    xx.part.hi = s;
    s = yy.part.hi >> 31;
    s = (xx.part.lo << 1) + s;
    xx.part.lo = s;
    s = yy.part.lo >> 31;
    s = (yy.part.hi << 1) + s;
    yy.part.hi = s;
    s = yy.part.lo << 1;
    yy.part.lo = s;
    expo_x--;
  }

  t = 0;
  if (((zz.part.hi << 1) | zz.part.lo) != 0) { 
    
    s = zz.part.hi & 0x80000000;
    
    zz.part.hi &= 0x000fffff;
    zz.part.hi |= 0x00100000;
    ww.part.hi = 0;
    ww.part.lo = 0;
    
    
    if ((int)expo_z > (int)expo_x) {
      t = expo_z;
      expo_z = expo_x;
      expo_x = t;
      t = zz.part.hi;
      zz.part.hi = xx.part.hi;
      xx.part.hi = t;
      t = zz.part.lo;
      zz.part.lo = xx.part.lo;
      xx.part.lo = t;
      t = ww.part.hi;
      ww.part.hi = yy.part.hi;
      yy.part.hi = t;
      t = ww.part.lo;
      ww.part.lo = yy.part.lo;
      yy.part.lo = t;
      t = expo_y;
      expo_y = s;
      s = t;
    }
    
    
    
    expo_z = expo_x - expo_z;
    u = expo_y ^ s;
    if (expo_z <= 107) {
      
      t = 0;
      while (expo_z >= 32) {
        t     = ww.part.lo | (t != 0);
        ww.part.lo = ww.part.hi;
        ww.part.hi = zz.part.lo;
        zz.part.lo = zz.part.hi;
        zz.part.hi = 0;
        expo_z -= 32;
      }
      if (expo_z) {
        t     = (t     >> expo_z) | (ww.part.lo << (32 - expo_z)) | 
                ((t << (32 - expo_z)) != 0);
        ww.part.lo = (ww.part.lo >> expo_z) | (ww.part.hi << (32 - expo_z));
        ww.part.hi = (ww.part.hi >> expo_z) | (zz.part.lo << (32 - expo_z));
        zz.part.lo = (zz.part.lo >> expo_z) | (zz.part.hi << (32 - expo_z));
        zz.part.hi = (zz.part.hi >> expo_z);
      }
    } else {
      t = 1;
      ww.part.lo = 0;
      ww.part.hi = 0;
      zz.part.lo = 0;
      zz.part.hi = 0;
    }
    if ((int)u < 0) {
      
      t = (unsigned)(-(int)t);
      s = (unsigned)(t != 0);
      u = yy.part.lo - s;
      s = (unsigned)(u > yy.part.lo);
      yy.part.lo = u - ww.part.lo;
      s += yy.part.lo > u;
      u = yy.part.hi - s;
      s = (unsigned)(u > yy.part.hi);
      yy.part.hi = u - ww.part.hi;
      s += yy.part.hi > u;
      u = xx.part.lo - s;
      s = (unsigned)(u > xx.part.lo);
      xx.part.lo = u - zz.part.lo;
      s += xx.part.lo > u;
      xx.part.hi = (xx.part.hi - zz.part.hi) - s;
      if (!(xx.part.hi | xx.part.lo | yy.part.hi | yy.part.lo | t)) {
        
        return xx.d;
      }
      if ((int)xx.part.hi < 0) {
        


        t = ~t;
        yy.part.lo = ~yy.part.lo;
        yy.part.hi = ~yy.part.hi;
        xx.part.lo = ~xx.part.lo;
        xx.part.hi = ~xx.part.hi;
        if (++t == 0) {
          if (++yy.part.lo == 0) {
            if (++yy.part.hi == 0) {
              if (++xx.part.lo == 0) {
              ++xx.part.hi;
              }
            }
          }
        }
        expo_y ^= 0x80000000;
      }
        
      
      while (!(xx.part.hi & 0x00100000)) {
        xx.part.hi = (xx.part.hi << 1) | (xx.part.lo >> 31);
        xx.part.lo = (xx.part.lo << 1) | (yy.part.hi >> 31);
        yy.part.hi = (yy.part.hi << 1) | (yy.part.lo >> 31);
        yy.part.lo = (yy.part.lo << 1);
        expo_x--;
      }
    } else {
      
      yy.part.lo = yy.part.lo + ww.part.lo;
      s = (unsigned)(yy.part.lo < ww.part.lo);
      yy.part.hi = yy.part.hi + s;
      u = (unsigned)(yy.part.hi < s);
      yy.part.hi = yy.part.hi + ww.part.hi;
      u += yy.part.hi < ww.part.hi;
      xx.part.lo = xx.part.lo + u;
      s = (unsigned)(xx.part.lo < u);
      xx.part.lo = xx.part.lo + zz.part.lo;
      s += xx.part.lo < zz.part.lo;
      xx.part.hi = xx.part.hi + zz.part.hi + s;
      if (xx.part.hi & 0x00200000) {
        t = t | (yy.part.lo << 31);
        yy.part.lo = (yy.part.lo >> 1) | (yy.part.hi << 31);
        yy.part.hi = (yy.part.hi >> 1) | (xx.part.lo << 31);
        xx.part.lo = (xx.part.lo >> 1) | (xx.part.hi << 31);
        xx.part.hi = ((xx.part.hi & 0x80000000) | (xx.part.hi >> 1)) & ~0x40000000;
        expo_x++;
      }
    }
  }
  t = yy.part.lo | (t != 0);
  t = yy.part.hi | (t != 0);
        
  xx.part.hi |= expo_y; 
  if (expo_x <= 0x7FD) {
    
    xx.part.hi = xx.part.hi & ~0x00100000; 
    s = xx.part.lo & 1; 
    u = xx.part.lo;
    xx.part.lo += (t == 0x80000000) ? s : (t >> 31);
    xx.part.hi += (u > xx.part.lo);
    xx.part.hi += ((expo_x + 1) << 20);
    return xx.d;
  } else if ((int)expo_x >= 2046) {      
    
    xx.part.hi = (xx.part.hi & 0x80000000) | 0x7ff00000;
    xx.part.lo = 0;
    return xx.d;
  }
  
  expo_x = (unsigned)(-(int)expo_x);
  if (expo_x > 54) {
    xx.part.hi = xx.part.hi & 0x80000000;
    xx.part.lo = 0;
    return xx.d;
  }  
  yy.part.hi = xx.part.hi &  0x80000000;   
  xx.part.hi = xx.part.hi & ~0xffe00000;
  if (expo_x >= 32) {
    t = xx.part.lo | (t != 0);
    xx.part.lo = xx.part.hi;
    xx.part.hi = 0;
    expo_x -= 32;
  }
  if (expo_x) {
    t     = (t     >> expo_x) | (xx.part.lo << (32 - expo_x)) | (t != 0);
    xx.part.lo = (xx.part.lo >> expo_x) | (xx.part.hi << (32 - expo_x));
    xx.part.hi = (xx.part.hi >> expo_x);
  }
  expo_x = xx.part.lo & 1; 
  u = xx.part.lo;
  xx.part.lo += (t == 0x80000000) ? expo_x : (t >> 31);
  xx.part.hi += (u > xx.part.lo);
  xx.part.hi |= yy.part.hi;
  return xx.d;
}

inline double nextafter(double a, double b)
{
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;
  unsigned long long int ia;
  unsigned long long int ib;
  cvt.d = a;
  ia = cvt.l;
  cvt.d = b;
  ib = cvt.l;
  if (__isnan(a) || __isnan(b)) return a + b; 
  if (((ia | ib) << 1) == 0ULL) return b;
  if (a == 0.0) {
    return copysign (4.9406564584124654e-324, b); 
  }
  if ((a < b) && (a < 0.0)) ia--;
  if ((a < b) && (a > 0.0)) ia++;
  if ((a > b) && (a < 0.0)) ia++;
  if ((a > b) && (a > 0.0)) ia--;
  cvt.l = ia;
  return cvt.d;
}

inline double erf(double a)
{
  double t, r, q;

  t = fabs(a);
  if (t >= 1.0) {
    r =        -1.28836351230756500E-019;
    r = r * t + 1.30597472161093370E-017;
    r = r * t - 6.33924401259620500E-016;
    r = r * t + 1.96231865908940140E-014;
    r = r * t - 4.35272243559990750E-013;
    r = r * t + 7.37083927929352150E-012;
    r = r * t - 9.91402142550461630E-011;
    r = r * t + 1.08817017167760820E-009;
    r = r * t - 9.93918713097634620E-009;
    r = r * t + 7.66739923255145500E-008;
    r = r * t - 5.05440278302806720E-007;
    r = r * t + 2.87474157099000620E-006;
    r = r * t - 1.42246725399722510E-005;
    r = r * t + 6.16994555079419460E-005;
    r = r * t - 2.36305221938908790E-004;
    r = r * t + 8.05032844055371070E-004;
    r = r * t - 2.45833366629108140E-003;
    r = r * t + 6.78340988296706120E-003;
    r = r * t - 1.70509103597554640E-002;
    r = r * t + 3.93322852515666300E-002;
    r = r * t - 8.37271292613764040E-002;
    r = r * t + 1.64870423707623280E-001;
    r = r * t - 2.99729521787681470E-001;
    r = r * t + 4.99394435612628580E-001;
    r = r * t - 7.52014596480123030E-001;
    r = r * t + 9.99933138314926250E-001;
    r = r * t - 1.12836725321102670E+000;
    r = r * t + 9.99998988715182450E-001;
    q = exp (-t * t);
    r = 1.0 - r * q;
    if (t >= 6.5) {
      r = 1.0;
    }    
    a = copysign (r, a);
  } else {
    q = a * a;
    r =        -7.77946848895991420E-010;
    r = r * q + 1.37109803980285950E-008;
    r = r * q - 1.62063137584932240E-007;
    r = r * q + 1.64471315712790040E-006;
    r = r * q - 1.49247123020098620E-005;
    r = r * q + 1.20552935769006260E-004;
    r = r * q - 8.54832592931448980E-004;
    r = r * q + 5.22397760611847340E-003;
    r = r * q - 2.68661706431114690E-002;
    r = r * q + 1.12837916709441850E-001;
    r = r * q - 3.76126389031835210E-001;
    r = r * q + 1.12837916709551260E+000;
    a = r * a;
  }
  return a;
}

inline double erfc(double a)
{
  double p, q, h, l;

  if (a < 0.75) {
    return 1.0 - erf(a);
  } 
  if (a > 27.3) {
    return 0.0;
  }
  if (a < 5.0) {
    double t;
    t = 1.0 / a;
    p =         1.9759923722227928E-008;
    p = p * t - 1.0000002670474897E+000;
    p = p * t - 7.4935303236347828E-001;
    p = p * t - 1.5648136328071860E-001;
    p = p * t + 1.2871196242447239E-001;
    p = p * t + 1.1126459974811195E-001;
    p = p * t + 4.0678642255914332E-002;
    p = p * t + 7.9915414156678296E-003;
    p = p * t + 7.1458332107840234E-004;
    q =     t + 2.7493547525030619E+000;
    q = q * t + 3.3984254815725423E+000;
    q = q * t + 2.4635304979947761E+000;
    q = q * t + 1.1405284734691286E+000;
    q = q * t + 3.4130157606195649E-001;
    q = q * t + 6.2250967676044953E-002;
    q = q * t + 5.5661370941268700E-003;
    q = q * t + 1.0575248365468671E-009;
    p = p / q;
    p = p * t;
    h = ((int)(a * 16.0)) * 0.0625;
    l = (a - h) * (a + h);
    q = exp(-h * h) * exp(-l);
    q = q * 0.5;
    p = p * q + q;
    p = p * t;
  } else {
    double ooa, ooasq;

    ooa = 1.0 / a;
    ooasq = ooa * ooa;
    p =            -4.0025406686930527E+005;
    p = p * ooasq + 1.4420582543942123E+005;
    p = p * ooasq - 2.7664185780951841E+004;
    p = p * ooasq + 4.1144611644767283E+003;
    p = p * ooasq - 5.8706000519209351E+002;
    p = p * ooasq + 9.1490086446323375E+001;
    p = p * ooasq - 1.6659491387740221E+001;
    p = p * ooasq + 3.7024804085481784E+000;
    p = p * ooasq - 1.0578553994424316E+000;
    p = p * ooasq + 4.2314218745087778E-001;
    p = p * ooasq - 2.8209479177354962E-001;
    p = p * ooasq + 5.6418958354775606E-001;
    h = a * a;
    h = ((int)(a * 16.0)) * 0.0625;
    l = (a - h) * (a + h);
    q = exp(-h * h) * exp(-l);
    p = p * ooa;
    p = p * q;
  }
  return p;
}

inline double lgamma(double a)
{
  double s;
  double t;
  double i;
  double fa;
  double sum;
  long long int quot;
  if (__isnan(a) || __isinf(a)) {
    return a * a;
  }
  fa = fabs(a);
  if (fa >= 3.0) {
    if (fa >= 8.0) {
      


      s = 1.0 / fa;
      t = s * s;
      sum =          -0.1633436431e-2;
      sum = sum * t + 0.83645878922e-3;
      sum = sum * t - 0.5951896861197e-3;
      sum = sum * t + 0.793650576493454e-3;
      sum = sum * t - 0.277777777735865004e-2;
      sum = sum * t + 0.833333333333331018375e-1;
      sum = sum * s + 0.918938533204672;
      s = 0.5 * log (fa);
      t = fa - 0.5;
      s = s * t;
      t = s - fa;
      s = s + sum;
      t = t + s;
    } else {
      i = fa - 3.0;
      s =        -4.02412642744125560E+003;
      s = s * i - 2.97693796998962000E+005;
      s = s * i - 6.38367087682528790E+006;
      s = s * i - 5.57807214576539320E+007;
      s = s * i - 2.24585140671479230E+008;
      s = s * i - 4.70690608529125090E+008;
      s = s * i - 7.62587065363263010E+008;
      s = s * i - 9.71405112477113250E+008;
      t =     i - 1.02277248359873170E+003;
      t = t * i - 1.34815350617954480E+005;
      t = t * i - 4.64321188814343610E+006;
      t = t * i - 6.48011106025542540E+007;
      t = t * i - 4.19763847787431360E+008;
      t = t * i - 1.25629926018000720E+009;
      t = t * i - 1.40144133846491690E+009;
      t = s / t;
      t = t + i;
    }
  } else if (fa >= 1.5) {
    i = fa - 2.0;
    t =         9.84839283076310610E-009;
    t = t * i - 6.69743850483466500E-008;
    t = t * i + 2.16565148880011450E-007;
    t = t * i - 4.86170275781575260E-007;
    t = t * i + 9.77962097401114400E-007;
    t = t * i - 2.03041287574791810E-006;
    t = t * i + 4.36119725805364580E-006;
    t = t * i - 9.43829310866446590E-006;
    t = t * i + 2.05106878496644220E-005;
    t = t * i - 4.49271383742108440E-005;
    t = t * i + 9.94570466342226000E-005;
    t = t * i - 2.23154589559238440E-004;
    t = t * i + 5.09669559149637430E-004;
    t = t * i - 1.19275392649162300E-003;
    t = t * i + 2.89051032936815490E-003;
    t = t * i - 7.38555102806811700E-003;
    t = t * i + 2.05808084278121250E-002;
    t = t * i - 6.73523010532073720E-002;
    t = t * i + 3.22467033424113040E-001;
    t = t * i + 4.22784335098467190E-001;
    t = t * i;
  } else if (fa >= 0.7) {
    i = 1.0 - fa;
    t =         1.17786911519331130E-002;  
    t = t * i + 3.89046747413522300E-002;
    t = t * i + 5.90045711362049900E-002;
    t = t * i + 6.02143305254344420E-002;
    t = t * i + 5.61652708964839180E-002;
    t = t * i + 5.75052755193461370E-002;
    t = t * i + 6.21061973447320710E-002;
    t = t * i + 6.67614724532521880E-002;
    t = t * i + 7.14856037245421020E-002;
    t = t * i + 7.69311251313347100E-002;
    t = t * i + 8.33503129714946310E-002;
    t = t * i + 9.09538288991182800E-002;
    t = t * i + 1.00099591546322310E-001;
    t = t * i + 1.11334278141734510E-001;
    t = t * i + 1.25509666613462880E-001;
    t = t * i + 1.44049896457704160E-001;
    t = t * i + 1.69557177031481600E-001;
    t = t * i + 2.07385551032182120E-001;
    t = t * i + 2.70580808427600350E-001;
    t = t * i + 4.00685634386517050E-001;
    t = t * i + 8.22467033424113540E-001;
    t = t * i + 5.77215664901532870E-001;
    t = t * i;
  } else {
    t =         -9.04051686831357990E-008;
    t = t * fa + 7.06814224969349250E-007;
    t = t * fa - 3.80702154637902830E-007;
    t = t * fa - 2.12880892189316100E-005;
    t = t * fa + 1.29108470307156190E-004;
    t = t * fa - 2.15932815215386580E-004;
    t = t * fa - 1.16484324388538480E-003;
    t = t * fa + 7.21883433044470670E-003;
    t = t * fa - 9.62194579514229560E-003;
    t = t * fa - 4.21977386992884450E-002;
    t = t * fa + 1.66538611813682460E-001;
    t = t * fa - 4.20026350606819980E-002;
    t = t * fa - 6.55878071519427450E-001;
    t = t * fa + 5.77215664901523870E-001;
    t = t * fa;
    t = t * fa + fa;
    t = -log (t);
  }
  if (a >= 0.0) return t;
  if (fa < 1e-19) return -log(fa);
  i = floor(fa);       
  if (fa == i) return 1.0 / (fa - i); 
  i = rint (2.0 * fa);
  quot = (long long int)i;
  i = fa - 0.5 * i;
  i = i * 3.1415926535897931e+0;
  if (quot & 1) {
    i = cos(i);
  } else {
    i = sin(i);
  }
  i = fabs(i);
  t = log(3.1415926535897931e+0 / (i * fa)) - t;
  return t;
}

inline unsigned long long int __internal_host_nan_kernel(const char *s)
{
  unsigned long long i = 0;
  int c;
  int ovfl = 0;
  int invld = 0;
  if (s && (*s == '0')) {
    s++;
    if ((*s == 'x') || (*s == 'X')) {
      s++; 
      while (*s == '0') s++;
      while (*s) {
        if (i > 0x0fffffffffffffffULL) {
          ovfl = 1;
        }
        c = (((*s) >= 'A') && ((*s) <= 'F')) ? (*s + 'a' - 'A') : (*s);
        if ((c >= 'a') && (c <= 'f')) { 
          c = c - 'a' + 10;
          i = i * 16 + c;
        } else if ((c >= '0') && (c <= '9')) { 
          c = c - '0';
          i = i * 16 + c;
        } else {
          invld = 1;
        }
        s++;
      }
    } else {
      while (*s == '0') s++;
      while (*s) {
        if (i > 0x1fffffffffffffffULL) {
          ovfl = 1;
        }
        c = *s;
        if ((c >= '0') && (c <= '7')) { 
          c = c - '0';
          i = i * 8 + c;
        } else {
          invld = 1; 
        }
        s++;
      }
    }
  } else if (s) {
    while (*s) {
      c = *s;
      if ((i > 1844674407370955161ULL) || 
          ((i == 1844674407370955161ULL) && (c > '5'))) {
        ovfl = 1;
      }
      if ((c >= '0') && (c <= '9')) { 
        c = c - '0';
        i = i * 10 + c;
      } else {
        invld = 1;
      }
      s++;
    }
  }
  if (ovfl) {
    i = ~0ULL;
  }
  if (invld) {
    i = 0ULL;
  }
  i = (i & 0x000fffffffffffffULL) | 0x7ff8000000000000ULL;
  return i;
}

inline double nan(const char *tagp)
{
  volatile union {
    unsigned long long l;
    double d;
  } cvt;

  cvt.l = __internal_host_nan_kernel(tagp);
  return cvt.d;
}

inline double __host_tgamma_kernel(double a)
{
  double t;
  t =       - 4.4268934071252475E-010;
  t = t * a - 2.0266591846658954E-007;
  t = t * a + 1.1381211721119527E-006;
  t = t * a - 1.2507734816630748E-006;
  t = t * a - 2.0136501740408771E-005;
  t = t * a + 1.2805012607354486E-004;
  t = t * a - 2.1524140811527418E-004;
  t = t * a - 1.1651675459704604E-003;
  t = t * a + 7.2189432248466381E-003;
  t = t * a - 9.6219715326862632E-003;
  t = t * a - 4.2197734554722394E-002;
  t = t * a + 1.6653861138250356E-001;
  t = t * a - 4.2002635034105444E-002;
  t = t * a - 6.5587807152025712E-001;
  t = t * a + 5.7721566490153287E-001;
  t = t * a + 1.0000000000000000E+000;
  return t;
}

inline double __host_stirling_poly(double a)
{
  double x = 1.0 / a;
  double z = 0.0;
  z =       + 8.3949872067208726e-004;
  z = z * x - 5.1717909082605919e-005;
  z = z * x - 5.9216643735369393e-004;
  z = z * x + 6.9728137583658571e-005;
  z = z * x + 7.8403922172006662e-004;
  z = z * x - 2.2947209362139917e-004;
  z = z * x - 2.6813271604938273e-003;
  z = z * x + 3.4722222222222220e-003;
  z = z * x + 8.3333333333333329e-002;
  z = z * x + 1.0000000000000000e+000;
  return z;
}

inline double __host_tgamma_stirling(double a)
{
  double z;
  double x;
  z = __host_stirling_poly (a);
  if (a < 142.0) {
    x = pow (a, a - 0.5);
    a = x * exp (-a);
    a = a * 2.5066282746310007e+0;
    return a * z;
  } else if (a < 172.0) {
    x = pow (a, 0.5 * a - 0.25);
    a = x * exp (-a);
    a = a * 2.5066282746310007e+0;
    a = a * z;
    return a * x;
  } else {
    return exp(1000.0); 
  }
}

inline double tgamma(double a)
{
  double s, xx, x = a;
  if (__isnan(a)) {
    return a + a;
  }
  if (fabs(x) < 20.0) {
    if (x >= 0.0) {
      s = 1.0;
      xx = x;
      while (xx > 1.5) {
        xx = xx - 1.0;
        s = s * xx;
      }
      if (x >= 0.5) {
        xx = xx - 1.0;
      }
      xx = __host_tgamma_kernel (xx);
      if (x < 0.5) {
        xx = xx * x;
      }
      s = s / xx;
    } else {
      xx = x;
      s = xx;
      if (x == floor(x)) {
        return 0.0 / (x - floor(x));
      }
      while (xx < -0.5) {
        xx = xx + 1.0;
        s = s * xx;
      }
      xx = __host_tgamma_kernel (xx);
      s = s * xx;
      s = 1.0 / s;
    }
    return s;
  } else {
    if (x >= 0.0) {
      return __host_tgamma_stirling (x);
    } else {
      double t;
      int quot;
      if (x == floor(x)) {
        return 0.0 / (x - floor(x));
      }
      if (x < -185.0) {
        int negative;
        x = floor(x);
        negative = ((x - (2.0 * floor(0.5 * x))) == 1.0);
        return negative ? (-1.0 / 1e308 / 1e308) : 0.0;
      }
      
      xx = rint (2.0 * x);
      quot = (int)xx;
      xx = -0.5 * xx + x;
      xx = xx * 3.1415926535897931e+0;
      if (quot & 1) {
        xx = cos (xx);
      } else {
        xx = sin (xx);
      }
      if (quot & 2) {
        xx = -xx;
      }
      x = fabs (x);
      s = exp (-x);
      t = x - 0.5;
      if (x > 140.0) t = 0.5 * t;
      t = pow (x, t);
      if (x > 140.0) s = s * t;
      s = s * __host_stirling_poly (x);
      s = s * x;
      s = s * xx;
      s = 1.0 / s;
      s = s * 1.2533141373155003e+0;
      s = s / t;
      return s;
    }
  }
}








inline int __signbitl(long double a)
{
  return __signbit((double)a);
}

inline int __signbitf(float a)
{
  return __signbit((double)a);
}

inline int __finitel(long double a)
{
  return __finite((double)a);
}

inline int __finitef(float a)
{
  return __finite((double)a);
}

inline int __isinfl(long double a)
{
  return __isinf((double)a);
}

inline int __isinff(float a)
{
  return __isinf((double)a);
}

inline int __isnanl(long double a)
{
  return __isnan((double)a);
}

inline int __isnanf(float a)
{
  return __isnan((double)a);
}

inline float fmaxf(float a, float b)
{
  return (float)fmax((double)a, (double)b);
}

inline float fminf(float a, float b)
{
  return (float)fmin((double)a, (double)b);
}

inline float roundf(float a)
{
  return (float)round((double)a);
}

inline long int lroundf(float a)
{
  return lround((double)a);
}

inline long long int llroundf(float a)
{
  return llround((double)a);
}

inline float truncf(float a)
{
  return (float)trunc((double)a);
}

inline float rintf(float a)
{
  return (float)rint((double)a);
}

inline float nearbyintf(float a)
{
  return (float)nearbyint((double)a);
}

inline long int lrintf(float a)
{
  return lrint((double)a);
}

inline long long int llrintf(float a)
{
  return llrint((double)a);
}

inline float logbf(float a)
{
  return (float)logb((double)a);
}

inline float scalblnf(float a, long int b)
{
  return (float)scalbln((double)a, b);
}

inline float log2f(float a)
{
  return (float)log2((double)a);
}

inline float exp2f(float a)
{
  return (float)exp2((double)a);
}

inline float acoshf(float a)
{
  return (float)acosh((double)a);
}

inline float asinhf(float a)
{
  return (float)asinh((double)a);
}

inline float atanhf(float a)
{
  return (float)atanh((double)a);
}

inline float cbrtf(float a)
{
  return (float)cbrt((double)a);
}

inline float expm1f(float a)
{
  return (float)expm1((double)a);
}

inline float fdimf(float a, float b)
{
  return (float)fdim((double)a, (double)b);
}






#line 7177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"

inline float log1pf(float a)
{
  return (float)log1p((double)a);
}

inline float scalbnf(float a, int b)
{
  return (float)scalbn((double)a, b);
}

inline float fmaf(float a, float b, float c)
{
  return (float)fma((double)a, (double)b, (double)c);
}

inline int ilogbf(float a)
{
  return ilogb((double)a);
}

inline float erff(float a)
{
  return (float)erf((double)a);
}

inline float erfcf(float a)
{
  return (float)erfc((double)a);
}

inline float lgammaf(float a)
{
  return (float)lgamma((double)a);
}

inline float tgammaf(float a)
{
  return (float)tgamma((double)a);
}

inline float remquof(float a, float b, int *quo)
{
  return (float)remquo((double)a, (double)b, quo);
}

inline float remainderf(float a, float b)
{
  return (float)remainder((double)a, (double)b);
}







inline float copysignf(float a, float b)
{
  volatile union {
    float f;
    unsigned int i;
  } aa, bb;

  aa.f = a;
  bb.f = b;
  aa.i = (aa.i & ~0x80000000) | (bb.i & 0x80000000);
  return aa.f;
}

inline float nextafterf(float a, float b)
{
  volatile union {
    float f;
    unsigned int i;
  } cvt;
  unsigned int ia;
  unsigned int ib;
  cvt.f = a;
  ia = cvt.i;
  cvt.f = b;
  ib = cvt.i;
  if (__isnanf(a) || __isnanf(b)) return a + b; 
  if (((ia | ib) << 1) == 0) return b;
  if (a == 0.0f) {
    return copysignf(1.401298464e-045f, b); 
  }
  if ((a < b) && (a < 0.0f)) ia--;
  if ((a < b) && (a > 0.0f)) ia++;
  if ((a > b) && (a < 0.0f)) ia++;
  if ((a > b) && (a > 0.0f)) ia--;
  cvt.i = ia;
  return cvt.f;
}

inline float nanf(const char *tagp)
{
  volatile union {
    float f;
    unsigned int i;
  } cvt;
  
  cvt.i = (unsigned int)__internal_host_nan_kernel(tagp);
  cvt.i = (cvt.i & 0x007fffff) | 0x7fc00000;
  return cvt.f;
}

#line 7285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"







inline double rsqrt(double a)
{
  return 1.0 / sqrt(a);
}

inline double rcbrt(double a)
{
  double s, t;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return 1.0 / a;
  } 
  s = fabs(a);
  t = exp2(-3.3333333333333333e-1 * log2(s));                
  t = ((t*t) * (-s*t) + 1.0) * (3.3333333333333333e-1*t) + t;


#line 7313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
  if (__signbit(a))
#line 7315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"
  {
    t = -t;
  }
  return t;
}

inline double sinpi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return sin (a);
  } 
  if (a == floor(a)) {
    return ((a / 1.0e308) / 1.0e308) / 1.0e308;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  return a;
}

inline double cospi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (__isinf(a)) {
    return cos (a);
  } 
  if (fabs(a) > 9.0071992547409920e+015) {
    a = 0.0;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  n++;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  if (a == 0.0) {
    a = fabs(a);
  }
  return a;
}

inline double erfinv(double a)
{
  double p, q, t, fa;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  fa = fabs(a);
  if (fa >= 1.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;                    
    if (fa == 1.0) {
      t = a * exp(1000.0);        
    }
  } else if (fa >= 0.9375) {
    



    t = log1p(-fa);
    t = 1.0 / sqrt(-t);
    p =         2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q =     t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
    if (a < 0.0) t = -t;
  } else if (fa >= 0.75) {
    



    t = a * a - .87890625;
    p =         .21489185007307062000e+0;
    p = p * t - .64200071507209448655e+1;
    p = p * t + .29631331505876308123e+2;
    p = p * t - .47644367129787181803e+2;
    p = p * t + .34810057749357500873e+2;
    p = p * t - .12954198980646771502e+2;
    p = p * t + .25349389220714893917e+1;
    p = p * t - .24758242362823355486e+0;
    p = p * t + .94897362808681080020e-2;
    q =     t - .12831383833953226499e+2;
    q = q * t + .41409991778428888716e+2;
    q = q * t - .53715373448862143349e+2;
    q = q * t + .33880176779595142685e+2;
    q = q * t - .11315360624238054876e+2;
    q = q * t + .20369295047216351160e+1;
    q = q * t - .18611650627372178511e+0;
    q = q * t + .67544512778850945940e-2;
    p = p / q;
    t = a * p;
  } else {
    



    t = a * a - .5625;
    p =       - .23886240104308755900e+2;
    p = p * t + .45560204272689128170e+3;
    p = p * t - .22977467176607144887e+4;
    p = p * t + .46631433533434331287e+4;
    p = p * t - .43799652308386926161e+4;
    p = p * t + .19007153590528134753e+4;
    p = p * t - .30786872642313695280e+3;
    q =     t - .83288327901936570000e+2;
    q = q * t + .92741319160935318800e+3;
    q = q * t - .35088976383877264098e+4;
    q = q * t + .59039348134843665626e+4;
    q = q * t - .48481635430048872102e+4;
    q = q * t + .18997769186453057810e+4;
    q = q * t - .28386514725366621129e+3;
    p = p / q;
    t = a * p;
  }
  return t;
}

inline double erfcinv(double a)
{
  double t;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  if (__isnan(a)) {
    return a + a;
  }
  if (a <= 0.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;                        
    if (a == 0.0) {
        t = (1.0 - a) * exp(1000.0);  
    }
  } 
  else if (a >= 0.0625) {
    t = erfinv (1.0 - a);
  }
  else if (a >= 1e-100) {
    



    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p =         2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q =     t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
  }
  else {
    



    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p =         6.9952990607058154858e-1;
    p = p * t + 1.9507620287580568829e+0;
    p = p * t + 8.2810030904462690216e-1;
    p = p * t + 1.1279046353630280005e-1;
    p = p * t + 6.0537914739162189689e-3;
    p = p * t + 1.3714329569665128933e-4;
    p = p * t + 1.2964481560643197452e-6;
    p = p * t + 4.6156006321345332510e-9;
    p = p * t + 4.5344689563209398450e-12;
    q =     t + 1.5771922386662040546e+0;
    q = q * t + 2.1238242087454993542e+0;
    q = q * t + 8.4001814918178042919e-1;
    q = q * t + 1.1311889334355782065e-1;
    q = q * t + 6.0574830550097140404e-3;
    q = q * t + 1.3715891988350205065e-4;
    q = q * t + 1.2964671850944981713e-6;
    q = q * t + 4.6156017600933592558e-9;
    q = q * t + 4.5344687377088206783e-12;
    t = p / (q * t);
  }
  return t;
}

inline double erfcx(double a)
{
  double x, t1, t2, t3;

  if (__isnan(a)) {
    return a + a;
  }
  x = fabs(a); 
  if (x < 32.0) {
    








  
     
     
    t1 = x - 4.0; 
    t2 = x + 4.0; 
    t2 = t1 / t2;
       
    t1 =         - 3.5602694826817400E-010; 
    t1 = t1 * t2 - 9.7239122591447274E-009; 
    t1 = t1 * t2 - 8.9350224851649119E-009; 
    t1 = t1 * t2 + 1.0404430921625484E-007; 
    t1 = t1 * t2 + 5.8806698585341259E-008; 
    t1 = t1 * t2 - 8.2147414929116908E-007; 
    t1 = t1 * t2 + 3.0956409853306241E-007; 
    t1 = t1 * t2 + 5.7087871844325649E-006; 
    t1 = t1 * t2 - 1.1231787437600085E-005; 
    t1 = t1 * t2 - 2.4399558857200190E-005; 
    t1 = t1 * t2 + 1.5062557169571788E-004; 
    t1 = t1 * t2 - 1.9925637684786154E-004; 
    t1 = t1 * t2 - 7.5777429182785833E-004; 
    t1 = t1 * t2 + 5.0319698792599572E-003; 
    t1 = t1 * t2 - 1.6197733895953217E-002; 
    t1 = t1 * t2 + 3.7167515553018733E-002; 
    t1 = t1 * t2 - 6.6330365827532434E-002; 
    t1 = t1 * t2 + 9.3732834997115544E-002; 
    t1 = t1 * t2 - 1.0103906603555676E-001; 
    t1 = t1 * t2 + 6.8097054254735140E-002; 
    t1 = t1 * t2 + 1.5379652102605428E-002; 
    t1 = t1 * t2 - 1.3962111684056291E-001; 
    t1 = t1 * t2 + 1.2329951186255526E+000; 
      
    t2 = 2.0 * x + 1.0; 
    t1 = t1 / t2;
  } else {
    
    t2 = 1.0 / x;
    t3 = t2 * t2;
    t1 =         -29.53125;
    t1 = t1 * t3 + 6.5625;
    t1 = t1 * t3 - 1.875;
    t1 = t1 * t3 + 0.75;
    t1 = t1 * t3 - 0.5;
    t1 = t1 * t3 + 1.0;
    t2 = t2 * 5.6418958354775628e-001;
    t1 = t1 * t2;
  }
  if (a < 0.0) {
    
    t2 = ((int)(x * 16.0)) * 0.0625;
    t3 = (x - t2) * (x + t2);
    t3 = exp(t2 * t2) * exp(t3);
    t3 = t3 + t3;
    t1 = t3 - t1;
  }
  return t1;
}

inline float rsqrtf(float a)
{
  return (float)rsqrt((double)a);
}

inline float rcbrtf(float a)
{
  return (float)rcbrt((double)a);
}

inline float sinpif(float a)
{
  return (float)sinpi((double)a);
}

inline float cospif(float a)
{
  return (float)cospi((double)a);
}

inline float erfinvf(float a)
{
  return (float)erfinv((double)a);
}

inline float erfcinvf(float a)
{
  return (float)erfcinv((double)a);
}

inline float erfcxf(float a)
{
  return (float)erfcx((double)a);
}







inline int min(int a, int b)
{
  return a < b ? a : b;
}

inline unsigned int umin(unsigned int a, unsigned int b)
{
  return a < b ? a : b;
}

inline long long int llmin(long long int a, long long int b)
{
  return a < b ? a : b;
}

inline unsigned long long int ullmin(unsigned long long int a, unsigned long long int b)
{
  return a < b ? a : b;
}

inline int max(int a, int b)
{
  return a > b ? a : b;
}

inline unsigned int umax(unsigned int a, unsigned int b)
{
  return a > b ? a : b;
}

inline long long int llmax(long long int a, long long int b)
{
  return a > b ? a : b;
}

inline unsigned long long int ullmax(unsigned long long int a, unsigned long long int b)
{
  return a > b ? a : b;
}

#line 7713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"

#line 7715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"





#line 7721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"





#line 7727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"



#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions_dbl_ptx3.h"



































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 3109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions_dbl_ptx3.h"

#line 3111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions_dbl_ptx3.h"

#line 7731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"

#line 7733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"

#line 7735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v4.1\\include\\math_functions.h"

#line 160 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\common_functions.h"

#line 162 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\common_functions.h"

#line 176 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/host_runtime.h"





#line 182 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/host_runtime.h"

#pragma pack()



#pragma warning(disable: 4099)





#line 194 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/host_runtime.h"

#line 196 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/host_runtime.h"

#line 198 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/host_runtime.h"

#line 200 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v4.1\\bin/../include\\crt/host_runtime.h"
#line 2 "c:\\users\\admin\\appdata\\local\\temp\\tmpxft_00000600_00000000-3_BiotSavartMex.cudafe1.stub.c"
#line 1 "c:\\users\\admin\\appdata\\local\\temp\\tmpxft_00000600_00000000-5_BiotSavartMex.fatbin.c"



extern "C" {
#line 6 "c:\\users\\admin\\appdata\\local\\temp\\tmpxft_00000600_00000000-5_BiotSavartMex.fatbin.c"

#pragma data_seg(".nv_fatbin")
static const __declspec(allocate(".nv_fatbin")) unsigned long long fatbinData[]= {
0x00100001ba55ed50,0x00000000000084bb,0x0000008801000002,0x0000000000002f0c,
0x0000000000000000,0x0000001400010004,0x0000004e00000038,0x0000000000000045,
0x0000000000000000,0x73726573552f3a43,0x442f6e696d64612f,0x73746e656d75636f,
0x2f42414c54414d2f,0x6e49572f6574614e,0x3130322d322d5344,0x732f616475632f32,
0x69422f656372756f,0x747261766153746f,0x000075632e78654d,0x33010102464c457f,
0x0000000000000004,0x0000000100be0002,0x0000000000000000,0x0000000000002dbc,
0x0000000000000040,0x0038004000140514,0x0001001300400006,0x0000000000000000,
0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,
0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000300000001,
0x0000000000000000,0x0000000000000000,0x0000000000000500,0x000000000000037a,
0x0000000000000000,0x0000000000000004,0x0000000000000000,0x000000030000000b,
0x0000000000000000,0x0000000000000000,0x000000000000087a,0x0000000000000132,
0x0000000000000000,0x0000000000000001,0x0000000000000000,0x0000000200000013,
0x0000000000000000,0x0000000000000000,0x00000000000009ac,0x0000000000000318,
0x0000001500000002,0x0000000000000001,0x0000000000000018,0x000000010000011f,
0x0000000000000006,0x0000000000000000,0x0000000000000cc4,0x0000000000000b98,
0x3000000b00000003,0x0000000000000004,0x0000000000000000,0x00000001000002b2,
0x0000000000000002,0x0000000000000000,0x000000000000185c,0x0000000000000060,
0x0000000400000000,0x0000000000000004,0x0000000000000000,0x000000010000026a,
0x0000000000000002,0x0000000000000000,0x00000000000018bc,0x0000000000000020,
0x0000000400000000,0x0000000000000004,0x0000000000000000,0x000000010000015e,
0x0000000000000002,0x0000000000000000,0x00000000000018dc,0x000000000000009c,
0x0000000400000000,0x0000000000000001,0x0000000000000000,0x00000001000000ba,
0x0000000000000006,0x0000000000000000,0x0000000000001978,0x0000000000000438,
0x1200000900000003,0x0000000000000004,0x0000000000000000,0x0000000100000333,
0x0000000000000002,0x0000000000000000,0x0000000000001db0,0x0000000000000040,
0x0000000800000000,0x0000000000000004,0x0000000000000000,0x00000001000002f9,
0x0000000000000002,0x0000000000000000,0x0000000000001df0,0x0000000000000010,
0x0000000800000000,0x0000000000000004,0x0000000000000000,0x00000001000000eb,
0x0000000000000002,0x0000000000000000,0x0000000000001e00,0x000000000000005c,
0x0000000800000000,0x0000000000000001,0x0000000000000000,0x0000000100000036,
0x0000000000100006,0x0000000000000000,0x0000000000001e5c,0x0000000000000cf0,
0x2f00000600000003,0x0000000000000004,0x0000000000000000,0x0000000100000226,
0x0000000000000002,0x0000000000000000,0x0000000000002b4c,0x0000000000000060,
0x0000000c00000000,0x0000000000000004,0x0000000000000000,0x00000001000001e1,
0x0000000000000002,0x0000000000000000,0x0000000000002bac,0x0000000000000020,
0x0000000c00000000,0x0000000000000004,0x0000000000000000,0x0000000100000072,
0x0000000000000002,0x0000000000000000,0x0000000000002bcc,0x000000000000009c,
0x0000000c00000000,0x0000000000000001,0x0000000000000000,0x00000008000001a0,
0x0000000000000003,0x0000000000000000,0x0000000000002c68,0x0000000000002000,
0x0000000c00000000,0x0000000000000004,0x0000000000000000,0x000000010000036c,
0x0000000000000002,0x0000000000000000,0x0000000000002c68,0x000000000000001c,
0x0000000000000000,0x0000000000000004,0x0000000000000000,0x00000001000000b1,
0x0000000000000002,0x0000000000000000,0x0000000000002c84,0x0000000000000138,
0x0000000000000000,0x0000000000000001,0x0000000000000000,0x7472747368732e00,
0x747274732e006261,0x746d79732e006261,0x672e766e2e006261,0x6e692e6c61626f6c,
0x672e766e2e007469,0x742e006c61626f6c,0x33315a5f2e747865,0x61766153746f6942,
0x64375068735f7472,0x375032656c62756f,0x5331656c62756f64,0x5f30535f30535f30,
0x32535f30535f3053,0x6e692e766e2e005f,0x4233315a5f2e6f66,0x7261766153746f69,
0x6f64375068735f74,0x64375032656c6275,0x305331656c62756f,0x535f30535f30535f,
0x5f32535f30535f30,0x666e692e766e2e00,0x2e747865742e006f,0x636c616334315a5f,
0x6e4f6874676e654c,0x62756f643750796c,0x30535f305332656c,0x6c62756f6437505f,
0x692e766e2e003165,0x34315a5f2e6f666e,0x676e654c636c6163,0x3750796c6e4f6874,
0x5332656c62756f64,0x6437505f30535f30,0x2e0031656c62756f,0x315a5f2e74786574,
0x766153746f694236,0x7669616e5f747261,0x6c62756f64375065,0x62756f6437503265,
0x30535f305331656c,0x535f30535f30535f,0x6e2e005f32535f30,0x5f2e6f666e692e76,
0x53746f694236315a,0x616e5f7472617661,0x756f643750657669,0x6f64375032656c62,
0x5f305331656c6275,0x30535f30535f3053,0x005f32535f30535f,0x726168732e766e2e,
0x4233315a5f2e6465,0x7261766153746f69,0x6f64375068735f74,0x64375032656c6275,
0x305331656c62756f,0x535f30535f30535f,0x5f32535f30535f30,0x6e6f632e766e2e00,
0x2e3631746e617473,0x746f694233315a5f,0x735f747261766153,0x6c62756f64375068,
0x62756f6437503265,0x30535f305331656c,0x535f30535f30535f,0x6e2e005f32535f30,
0x6174736e6f632e76,0x33315a5f2e30746e,0x61766153746f6942,0x64375068735f7472,
0x375032656c62756f,0x5331656c62756f64,0x5f30535f30535f30,0x32535f30535f3053,
0x6f632e766e2e005f,0x3631746e6174736e,0x6f694236315a5f2e,0x5f74726176615374,
0x643750657669616e,0x375032656c62756f,0x5331656c62756f64,0x5f30535f30535f30,
0x32535f30535f3053,0x6f632e766e2e005f,0x2e30746e6174736e,0x746f694236315a5f,
0x6e5f747261766153,0x6f64375065766961,0x64375032656c6275,0x305331656c62756f,
0x535f30535f30535f,0x5f32535f30535f30,0x6e6f632e766e2e00,0x2e3631746e617473,
0x636c616334315a5f,0x6e4f6874676e654c,0x62756f643750796c,0x30535f305332656c,
0x6c62756f6437505f,0x632e766e2e003165,0x30746e6174736e6f,0x6c616334315a5f2e,
0x4f6874676e654c63,0x756f643750796c6e,0x535f305332656c62,0x62756f6437505f30,
0x2e766e2e0031656c,0x746e6174736e6f63,0x4233315a5f000032,0x7261766153746f69,
0x6f64375068735f74,0x64375032656c6275,0x305331656c62756f,0x535f30535f30535f,
0x5f32535f30535f30,0x5f616475635f5f00,0x7669645f30326d73,0x635f5f003436665f,
0x30326d735f616475,0x3436665f7669645f,0x746170776f6c735f,0x616475635f5f0068,
0x73645f30326d735f,0x665f6e725f747271,0x6475635f5f003436,0x645f30326d735f61,
0x5f6e725f74727173,0x776f6c735f343666,0x315a5f0068746170,0x6e654c636c616334,
0x50796c6e4f687467,0x32656c62756f6437,0x37505f30535f3053,0x0031656c62756f64,
0x746f694236315a5f,0x6e5f747261766153,0x6f64375065766961,0x64375032656c6275,
0x305331656c62756f,0x535f30535f30535f,0x5f32535f30535f30,0x0066666f74756300,
0x7400706e5f766564,0x6570736461657268,0x63006b636f6c6272,0x766564006465726f,
0x0000000000666e5f,0x0000000000000000,0x0000000000000000,0x0000000000000000,
0x0000000000010003,0x0000000000000000,0x0000000000000000,0x0000000000020003,
0x0000000000000000,0x0000000000000000,0x0000000000030003,0x0000000000000000,
0x0000000000000000,0x0000000000000003,0x0000000000000000,0x0000000000000000,
0x0000000000000003,0x0000000000000000,0x0000000000000000,0x00000000000c0003,
0x00000cf000000000,0x0000000000000000,0x00000000000f0003,0x0000000000000000,
0x0000000000000000,0x0000000000120003,0x0000000000000000,0x0000000000000000,
0x0000000000080003,0x0000043800000000,0x0000000000000000,0x00000000000b0003,
0x0000000000000000,0x0000000000000000,0x0000000000040003,0x00000b9800000000,
0x0000000000000000,0x0000000000070003,0x0000000000000000,0x0000000000000000,
0x0000000000100003,0x0000000000000000,0x0000000000000000,0x00000000000e0003,
0x0000000000000000,0x0000000000000000,0x00000000000d0003,0x0000000000000000,
0x0000000000000000,0x0000000000060003,0x0000000000000000,0x0000000000000000,
0x0000000000050003,0x0000000000000000,0x0000000000000000,0x00000000000a0003,
0x0000000000000000,0x0000000000000000,0x0000000000090003,0x0000000000000000,
0x0000000000000000,0x0000000000110003,0x0000000000000000,0x0000000100000000,
0x00000000000c1012,0x0000047800000000,0x0000003700000000,0x00000320000c0012,
0x0000013000000000,0x0000004b00000000,0x00000450000c0012,0x0000042000000000,
0x0000006800000000,0x00000870000c0012,0x0000014000000000,0x0000008100000000,
0x000009b0000c0012,0x000001e800000000,0x000000a300000000,0x0000000000081012,
0x0000010800000000,0x000000ce00000000,0x0000000000041012,0x0000032000000000,
0x0000010700000000,0x0000000800110011,0x0000000800000000,0x0000010e00000000,
0x0000000000110011,0x0000000400000000,0x0000011500000000,0x0000001800110011,
0x0000000400000000,0x0000012500000000,0x0000001000110011,0x0000000800000000,
0x0000012b00000000,0x0000000400110011,0x0000000400000000,0x00005de400000000,
0x94001c0428004404,0x84009c042c000000,0x20011ca32c000000,0x0041dc2320044000,
0x000001e71b0e4800,0x10001de480000000,0x0401dc2328004800,0x000001e7188ec000,
0x40009de280000000,0x40401ce318000000,0x20019de25000c000,0x80451ca318000000,
0x20415ce320058000,0xfc0b1de45000c000,0x90055c4328000000,0x40459ca348004000,
0xfc0b5de420058001,0x5005dc4328000000,0xa0409ca348004001,0xfc001de4200d8000,
0xb050dc4328000000,0x60461ca348004000,0x70565c43200d8001,0xe2c19c0348004001,
0x01431cc548014000,0x00279ca584000000,0xf2d1dc4384000000,0xc2c11c0348004000,
0x00621cc548014000,0xd2d15c4384000000,0x02c69c0348004000,0x00441cc548014001,
0x12d6dc4384000000,0x01a11cc548004001,0x20e71d0184000000,0x28821d0148000000,
0x28e29d0148000000,0x71c81c0148000000,0x40c69d0150000000,0x49041d0148000000,
0x48c31d0148000000,0x11e49d0148000000,0x69a89c0148000000,0x22c81c0320400000,
0x18439d0148014001,0x19e79d0148000000,0x49289c0148000000,0x32d85c4320440000,
0x8c015de448004001,0x88011de428000000,0x4001000728000000,0x28a19c015000001b,
0x30c19c0150000000,0x79e89c01200c0000,0x10019de4200c0000,0x1401dde428000000,
0x8c015de428000000,0x88011de428000000,0x4001000728000000,0x02089ca55000001a,
0x20891c0184000000,0x29c21c0150000000,0x43f81c8650000000,0x41041c0114000800,
0x53f85c8620480000,0x31a21c0114000800,0x38e41c0120100000,0x10639c0120200000,
0x79221c0148000000,0x10621c0120100000,0x10611c0120100000,0x42019c0150000000,
0x0c041de250000000,0xc0045de219b72722,0x20419c0118fed17c,0x3a239c01200c0000,
0x40e11c0150000000,0xa001000750000000,0x01621ca550000002,0x21619ca584000000,
0x79c39c0184000000,0x31241c0150000000,0x04001c0350000000,0x42cb1c034800c000,
0x29239e014801c000,0x29a29c01201c0000,0x79a41e0150000000,0x1001dc2320200000,
0xfedb5c43188e4800,0x38421c0148000000,0x40439c0120100000,0x01621ca5200c0000,
0x21639ca594000000,0x01819ca594000000,0x31c21e0184000000,0x20411c0120140000,
0x01811ca5200c0000,0xa00001e794000000,0x00001de74003fff6,0x00521c0280000000,
0x00725c0239ffc000,0x0481dc0339ffc000,0xfc91dc03198e4000,0x800021e719200000,
0xfc081de440000000,0xfc085de428000000,0xfc089de428000000,0xe0001de728000000,
0x106fdd0340000000,0xfc789c0248010000,0xfc525c0238003fff,0x00885c0238003fff,
0x18081de40bf2c000,0x2621dc4328000000,0x008840021a0e0000,0xfc021de40bf28000,
0x18725c0028000000,0x00000007c8000000,0x34839e0160000002,0x38821c01200c8000,
0x34839e0120100000,0x10841c01200c8000,0x38821c0150000000,0x19039e0120100000,
0x38821c0120080000,0x8a141c4320200000,0x18839e0168000000,0x80efdd0320080000,
0xfcf39c0248010000,0x40e1dc4339ffffff,0x000021f41b0e0000,0xa001000740000000,
0x10021de450000000,0x14025df428000000,0x20011de428000000,0x24015de428000000,
0x00001de728000000,0x04725c0390000000,0x04521c036000c000,0x10039de46000c000,
0x5498dc0328000000,0x54889c035800c000,0x1403dde45800c000,0xfe345c0328000000,
0xfe241c034800ffff,0x18021de44800ffff,0xf511dc0328000000,0x1c025de41a0ec01f,
0xf501dc0328000000,0x400021e71a20c01f,0x00e1dc8140000005,0x400001e7198edffc,
0x00515c4240000000,0x40001de738002000,0x0081dc814000000e,0x600001e7198edffc,
0x00715c4240000000,0x18011de438002000,0xa0001de728000000,0xfce3dc014000000d,
0xfc85dc01190e0000,0x0811dc04190e0000,0x800001e70c0e0000,0x00e7dc8140000000,
0x0081dc81190edffc,0x80002de7190edffc,0x600021e740000000,0xfc011de440000000,
0x00015de228000000,0x40001de71bffe000,0x4401dc044000000c,0x800021e70c0e0000,
0x14715c8340000000,0xfc011de468000000,0x00515c0228000000,0x80001de73a000000,
0x4831dc044000000b,0xa00021e70c0e0000,0x14711c8340000000,0x00415c0268000000,
0xfc011de43a000000,0x00515c4228000000,0xa0001de739ffc000,0xfd01dc234000000a,
0x00e120011b0e0000,0x280921e25000d0d4,0xfc0901e41bffffff,0xfd11dc2328000000,
0x800001e71b0e0000,0x00819c0140000000,0xda491c035000d0d4,0x20001de74800c000,
0xfc091de440000000,0x06321c0328000000,0x04041de24800fff0,0x06239c0318000000,
0x1c81de834800fff0,0x14e15e8341000000,0x18745c0041000000,0x34621e01c8000000,
0x40839c0120208000,0x20821c0120200000,0x40441c0150000000,0x38821c0150000000,
0x40681e01201c0000,0x34639e0120080000,0x22041c0120108000,0x20e21c0120200000,
0x8e23dd0320100000,0x40619e0148000000,0x20611c0120080000,0x04539c0320200000,
0x54e39c036000c000,0x38f3dc035800c000,0x90f89c0348000000,0xfe23dc0348000000,
0xf4f1dc034800ffff,0x600001e71a0ec01f,0x3a219d0340000000,0x14615e8348000000,
0xe0001de740000000,0x06211c0340000005,0xfc41dc234800fff0,0x800001e7198ec00f,
0x00515c0240000000,0xfc011de43a000000,0x00515c4228000000,0x00001de739ffc000,
0x3041dc2340000005,0x00515c021b0effef,0x400001e73a000000,0xfc011de440000000,
0x60001de728000000,0x20681c0140000004,0x89211f8421a00000,0x20639c011c000000,
0x20619c0120a00000,0x7c41dc2321200000,0xfe121c02198ec000,0x18e3dc0138003fff,
0x00825c421a8e0000,0x800081e738004000,0xfe03e02340000000,0x240821e41aa20000,
0x8221220328000000,0xfc0261e44800ffff,0xfc41dc2328000000,0xe00081e7190e0000,
0x8041a20340000000,0x120220034800c000,0x1a01e00358000000,0x1891a00360000000,
0x1092600360000000,0xfc73e02358000000,0x188820431aa20000,0x06011c0368000000,
0x7c919c035800c000,0x18411c436000c000,0x06019c0368000000,0x0441dc036800c000,
0xfc71dc236800c000,0xfc61dc231aa20000,0x04919c031a800000,0x600021e75800c000,
0x04411c0340000000,0xfc41dc234800c000,0x04618003190e0000,0x18515c434800c000,
0x00001de768000000,0x00589c0290000000,0x02289c023bffc000,0x4621dc030bffc000,
0x400001e7198e4000,0x6001000740000000,0x20001de750000004,0x022b9c0240000004,
0xb858dd0339ff8000,0x02eb9c0248000000,0x02315c020b008000,0x0238dc0208ff8000,
0x11a89c0408ff4000,0x0221dc8010000000,0x02288000208ec020,0x16291c005800d2e0,
0x10089de4c8000000,0x0249000028000000,0x91391c045800d160,0x92499c0110000000,
0x76699e0150000000,0x92691c0120448000,0x124a1c0120480000,0x0259dc0250000000,
0x90099de40bffc000,0xa28a9e0128000000,0x9aaa1c0120080000,0xa28a9e0120500000,
0x02915c0221880000,0xa0011de40bf30000,0x12a1dc8128000000,0xa4015de41b0e0000,
0x8000a1e728000000,0x8a41000140000000,0x7441020150000000,0x9841000120488000,
0x12a10001204c0000,0x06e89c0320500000,0x88515c035800c000,0xfc515c0248000000,
0x00001de739ffffff,0x04589c0390000000,0x7c58dc036000c000,0x10091de45800c000,
0x56289c0328000000,0x14095de45800c000,0xfe289c0328000000,0xf621dc034800ffff,
0xfe31dc231a0ec01f,0x200021e71aa00000,0xfe41dc0140000002,0x600021e7188e0000,
0xfc091de440000000,0x00095de228000000,0x80001de71bffe000,0xfe41dc0140000005,
0x400001e7190e0000,0x0241dc8140000005,0x000001e7190edffc,0x0241dc8140000005,
0x600001e7198edffc,0x00595c4240000000,0x10091de438002000,0x60001de728000000,
0x02411c0140000004,0xd80b9de25000d0d4,0x20001de718000000,0xfc0b9de440000000,
0xfa2bdc0328000000,0x100a9de46800ffff,0x0af89c0328000000,0x162ade834800fff0,
0xa9a15c0441000000,0x0051dc8010000000,0x00514000208ec020,0x14515c005800d2e0,
0x00514000c8000000,0x15389c045800d160,0x02b15c0210000000,0x8a291c010bffc000,
0x76491e0150000000,0x8a489c0120088000,0xaa291c0120440000,0x023a5c0250000000,
0x880a1de40bffc000,0x92499e0128000000,0xa2691c0120540000,0x92499e0120480000,
0x025adc0221d40000,0x900a9de40bf30000,0xaa61dc8128000000,0x8000a1e71b0e0000,
0x1221000140000000,0x7441020150000000,0xa041000120448000,0x1269000120500000,
0xbafb9d0320480000,0x0ae11c0348000000,0x94495e634800fff0,0x90011de440000000,
0x94015de428000000,0x00001de728000000,0x0000000090000000,0x0000000000000000,
0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,
0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,
0x0000000000000000,0x0000000000000000,0x035fffff00000000,0x0000000000000000,
0x7fdfffff3ff00000,0x0000000000000000,0x00080a043fe00000,0x0040002000000011,
0x000c170400401903,0x0038000700000000,0x000c17040021f000,0x0030000600000000,
0x000c17040021f000,0x0028000500000000,0x000c17040021f000,0x0020000400000000,
0x000c17040021f000,0x0018000300000000,0x000c17040021f000,0x0010000200000000,
0x000c17040021f000,0x0008000100000000,0x000c17040021f000,0x0000000000000000,
0x00080d040021f000,0x000000020005003c,0x2800440400005de4,0x2c00000094001c04,
0x2c00000084009c04,0x2004400020001ca3,0x188e48000001dc23,0x80000000000021e7,
0x180000004000dde2,0x5000c00040009ce3,0x20078000a0031ca3,0x48004000b0235c43,
0x2007800080041ca3,0x8400000020c29ca5,0x4800400090245c43,0x8400000000c21ca5,
0x20078000c0039ca3,0x8400000021011ca5,0x8400000001019ca5,0x48004000d023dc43,
0x8400000020e09ca5,0x8400000000e31ca5,0x4800000028821d01,0x4800000010611d01,
0x5000000020819c01,0x200c000010411c01,0x4800000008c09d01,0x2008000008211c01,
0x50000000c0010007,0x28004000e0019de4,0x5000c00020009ce3,0x200dc00020019ca3,
0x48004000f021dc43,0x9400000000611ca5,0x8000000000001de7,0x3bffc00000509c02,
0x0bffc00000209c02,0x198e40000421dc03,0x40000000400001e7,0x5000000480010007,
0x4000000440001de7,0x39ff800000241c02,0x480000004050dd03,0x08ff800000315c02,
0x08ff40000030dc02,0x1000000011a09c04,0x208ec0200021dc80,0x5800d2e000208000,
0xc800000014209c00,0x5800d16000208000,0x1000000009319c04,0x2800000010009de4,
0x5000000018621c01,0x2004800034821e01,0x200c000018821c01,0x5000000010829c01,
0x0bffc0000091dc02,0x2800000020019de4,0x2008000028a31e01,0x2014000018c29c01,
0x2188000028a31e01,0x0bf3000000b3dc02,0x2800000028039de4,0x0b00800001015c02,
0x2800000028011de4,0x1b0e000038c1dc81,0x40000000a000a1e7,0x5000000008808001,
0x2010800034208201,0x200c000018208001,0x2014000008c28001,0x28000000280101e4,
0x5800c00004509c03,0x4800000008b09c03,0x39fffffffc215c02,0x9000000000001de7,
0x6000c00004509c03,0x280000001400dde4,0x5800c00054209c03,0x4800fffffc219c03,
0x5800c0007c509c03,0x1a0ec01ff461dc03,0x1aa00000fc21dc23,0x2800000010009de4,
0x40000002200021e7,0x188e0000fc21dc01,0x40000000600021e7,0x28000000fc009de4,
0x1bffe0000000dde2,0x4000000580001de7,0x190e0000fc21dc01,0x40000005400001e7,
0x190edffc0021dc81,0x40000005000001e7,0x198edffc0021dc81,0x40000000600001e7,
0x380020000050dc42,0x2800000010009de4,0x4000000460001de7,0x5000d0d400211c01,
0x18000000d8041de2,0x4000000020001de7,0x28000000fc041de4,0x6800fffff8645c03,
0x2800000010031de4,0x4800fff009109c03,0x4100000014235e83,0x1000000031a09c04,
0x0bffc00000d15c02,0x208ec0200021dc80,0x5800d2e000208000,0xc800000014209c00,
0x5800d16000208000,0x1000000009309c04,0x5000000008219c01,0x2008800034619e01,
0x2004000008629c01,0x5000000030a09c01,0x0bffc00000b25c02,0x2800000028021de4,
0x2018000008219e01,0x2004000020609c01,0x2198000008219e01,0x0bf300000033dc02,
0x2800000008039de4,0x1b0e00003861dc81,0x400000008000a1e7,0x5000000010a10001,
0x2014800034410201,0x2010000020410001,0x2004000010608001,0x4800000041111d03,
0x4800fff008411c03,0x400000000c40de63,0x2800000008011de4,0x280000000c015de4,
0x9000000000001de7,0x0000000000000000,0x0000000000000000,0x0000000000000000,
0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,
0x0000000000000000,0x000000007fdfffff,0x3fe0000000000000,0x0000001300080a04,
0x0020190300200020,0x00000000000c1704,0x0021f00000180003,0x00000000000c1704,
0x0021f00000100002,0x00000000000c1704,0x0021f00000080001,0x00000000000c1704,
0x0021f00000000000,0x0004003000080d04,0x00005de400000002,0x13f1dc2328004404,
0xe00001e7188e4800,0xfc009de440000000,0xfc00dde428000000,0xfc051de428000000,
0xfc055de428000000,0xfc059de428000000,0xfc05dde428000000,0xc0001de728000000,
0xfc009de44000000e,0xfc00dde428000000,0xfc051de428000000,0xfc055de428000000,
0xfc059de428000000,0xfc05dde428000000,0xfc001de428000000,0xfc0a1de428000000,
0x84079c0428000000,0x40019de22c000000,0xfc1fdc0318000000,0x22811ca3207e0000,
0x11e7de03203c4000,0x40415ce36000c000,0xc0481ca35000c000,0xd0585c43200d8000,
0xe0471ca348004000,0x02041cc5200d8000,0xf0575c4384000000,0x00469ca348004000,
0x01c31cc5200d8001,0x1056dc4384000000,0x20461ca348004001,0x01a21cc5200d8001,
0x30565c4384000000,0x01811cc548004001,0x01f41cc584000000,0x01f31cc5c9000000,
0x01f21cc5c9000020,0x01f11cc5c9000040,0xffffdc04c9000060,0x94011c0450ee0000,
0x20015de42c000000,0x204adca328004000,0x0451dc23203c4000,0xa0000007188ec000,
0x02b1dc2360000009,0x400001e71b204800,0xfc0a5de440000009,0xfc0b1de428000000,
0x000a9de428000000,0x12a1dc2328000000,0x000021e7188e4800,0x80015de440000008,
0x42b11ce328004000,0x02c21cc55000c000,0x42b19ca3c1000020,0xa0015de4200bc000,
0x02c41cc528004000,0x9041dc43c1000000,0x22b11ce348004000,0x22b61ca35000c000,
0x00631cc5200bc000,0xb0465c4384000000,0x02c11cc548004000,0x01871ca5c1000040,
0x20e69d0184000000,0x40c61d0148000000,0x49041d0148000000,0x48c31d0148000000,
0x69a79c0148000000,0x11c49d0150000000,0x28821d0148000000,0x28e29d0148000000,
0x61879c0148000000,0x18439d01203c0000,0x19c71d0148000000,0x49279c0148000000,
0x7c015de4203c0000,0x78011de428000000,0x0001000728000000,0x28a19c015000001d,
0x30c19c0150000000,0x71c79c01200c0000,0x10019de4200c0000,0x1401dde428000000,
0x7c015de428000000,0x78011de428000000,0x0001000728000000,0x29a79c015000001c,
0x20821c0150000000,0x31879c0150000000,0x41041c01203c0000,0x10621c0120100000,
0x71279c0150000000,0x38e39c01203c0000,0x43f41c8620200000,0x10679c0114000800,
0x10619c01203c0000,0x02c11ca548000000,0x53f45c86c1000060,0x18411c0114000800,
0x0c019de250000000,0xc001dde219b72722,0x39039c0118fed17c,0x18411c0150000000,
0x78819c0150000000,0x60010007201c0000,0x71a19c0150000004,0x31221c0150000000,
0x29839c0150000000,0x29219e0150000000,0x71821e01200c0000,0x31a29e0120100000,
0x18409c01201c0000,0x20451c0120040000,0x28459c0120280000,0x069a5c03202c0000,
0x06aa9c034800c000,0x42cb1c034800c000,0x2291dc234800c000,0x200001e7188e4000,
0x00001df44003fff7,0xffffdc0440000000,0x20001c0350ee0000,0x068a1c0348004000,
0x1001dc234800c000,0x400001e7188e4800,0x94001c044003fff2,0x84011c042c000000,
0x40015de42c000000,0x20001ca328004001,0x40019ca320084000,0x40011ce3200bc000,
0x60015de45000c000,0x5041dc4328004001,0x20011ca348004001,0x20001ce3200bc000,
0x00609ca55000c000,0x20651ca594000000,0x70015c4394000000,0x00459ca548004001,
0x00001de794000000,0x00521c0280000000,0x00725c0239ffc000,0x0481dc0339ffc000,
0xfc91dc03198e4000,0x800021e719200000,0xfc079de440000000,0xfc07dde428000000,
0xfc081de428000000,0xe0001de728000000,0x106fdd0340000000,0xfc781c0248010000,
0xfc525c0238003fff,0x0087dc0238003fff,0x18079de40bf2c000,0x2601dc4328000000,
0x0087c0021a0e0000,0xfc021de40bf28000,0x18725c0028000000,0x00000007c8000000,
0x34839e0160000002,0x38821c01200c8000,0x34839e0120100000,0x10841c01200c8000,
0x38821c0150000000,0x19039e0120100000,0x38821c0120080000,0x81f41c4320200000,
0x18839e0168000000,0x78efdd0320080000,0xfcf39c0248010000,0x40e1dc4339ffffff,
0x000021f41b0e0000,0xa001000740000000,0x10021de450000000,0x14025df428000000,
0x20011de428000000,0x24015de428000000,0x00001de728000000,0x04725c0390000000,
0x04521c036000c000,0x10039de46000c000,0x54985c0328000000,0x54881c035800c000,
0x1403dde45800c000,0xfe145c0328000000,0xfe041c034800ffff,0x18021de44800ffff,
0xf511dc0328000000,0x1c025de41a0ec01f,0xf501dc0328000000,0x400021e71a20c01f,
0x00e1dc8140000005,0x400001e7198edffc,0x00515c4240000000,0x40001de738002000,
0x0081dc814000000e,0x600001e7198edffc,0x00715c4240000000,0x18011de438002000,
0xa0001de728000000,0xfce3dc014000000d,0xfc85dc01190e0000,0x0811dc04190e0000,
0x800001e70c0e0000,0x00e7dc8140000000,0x0081dc81190edffc,0x80002de7190edffc,
0x600021e740000000,0xfc011de440000000,0x00015de228000000,0x40001de71bffe000,
0x4401dc044000000c,0x800021e70c0e0000,0x14715c8340000000,0xfc011de468000000,
0x00515c0228000000,0x80001de73a000000,0x4831dc044000000b,0xa00021e70c0e0000,
0x14711c8340000000,0x00415c0268000000,0xfc011de43a000000,0x00515c4228000000,
0xa0001de739ffc000,0xfd01dc234000000a,0x00e120011b0e0000,0x2808a1e25000d0d4,
0xfc0881e41bffffff,0xfd11dc2328000000,0x800001e71b0e0000,0x00819c0140000000,
0xda289c035000d0d4,0x20001de74800c000,0xfc089de440000000,0x06121c0328000000,
0x04041de24800fff0,0x06039c0318000000,0x1c81de834800fff0,0x86085d0341000000,
0x14e15e8348000000,0x18745c0041000000,0x34621e01c8000000,0x40839c0120208000,
0x20821c0120200000,0x40441c0150000000,0x38821c0150000000,0x40679e01201c0000,
0x34639e0120080000,0x21e41c0120108000,0x20e21c0120200000,0x40619e0120100000,
0x20611c0120080000,0x04539c0320200000,0x54e39c036000c000,0x3a13dc035800c000,
0x88f81c0348000000,0xfe03dc0348000000,0xf4f1dc034800ffff,0x600001e71a0ec01f,
0x3a019d0340000000,0x14615e8348000000,0xe0001de740000000,0x06011c0340000005,
0xfc41dc234800fff0,0x800001e7198ec00f,0x00515c0240000000,0xfc011de43a000000,
0x00515c4228000000,0x00001de739ffc000,0x3041dc2340000005,0x00515c021b0effef,
0x400001e73a000000,0xfc011de440000000,0x60001de728000000,0x20679c0140000004,
0x81211f8421a00000,0x20639c011c000000,0x20619c0120a00000,0x7c41dc2321200000,
0xfdf21c02198ec000,0x18e3dc0138003fff,0x00825c421a8e0000,0x800081e738004000,
0xfde3e02340000000,0x2407a1e41aa20000,0x8201220328000000,0xfc0261e44800ffff,
0xfc41dc2328000000,0xe00081e7190e0000,0x8041a20340000000,0x11e220034800c000,
0x19e1e00358000000,0x1891a00360000000,0x1092600360000000,0xfc73e02358000000,
0x1887a0431aa20000,0x05e11c0368000000,0x7c919c035800c000,0x18411c436000c000,
0x05e19c0368000000,0x0441dc036800c000,0xfc71dc236800c000,0xfc61dc231aa20000,
0x04919c031a800000,0x600021e75800c000,0x04411c0340000000,0xfc41dc234800c000,
0x04618003190e0000,0x18515c434800c000,0x00001de768000000,0x00579c0290000000,
0x01e79c023bffc000,0x45e1dc030bffc000,0x400001e7198e4000,0x6001000740000000,
0x20001de750000004,0x01eb5c0240000004,0xb457dd0339ff8000,0x02db5c0248000000,
0x01f15c020b008000,0x01f7dc0208ff8000,0x11a79c0408ff4000,0x01e1dc8010000000,
0x01e78000208ec020,0x15e81c005800d2e0,0x10079de4c8000000,0x0208000028000000,
0x81381c045800d160,0x82089c0110000000,0x76289e0150000000,0x82281c01203c8000,
0x12091c0120400000,0x0218dc0250000000,0x80089de40bffc000,0x92499e0128000000,
0x8a691c0120080000,0x92499e0120480000,0x02515c0221880000,0x90011de40bf30000,
0x1261dc8128000000,0x94015de41b0e0000,0x8000a1e728000000,0x7a01000140000000,
0x7441020150000000,0x8841000120408000,0x1261000120440000,0x06d79c0320480000,
0x78515c035800c000,0xfc515c0248000000,0x00001de739ffffff,0x04579c0390000000,
0x7c57dc036000c000,0x10081de45800c000,0x55e79c0328000000,0x14085de45800c000,
0xfde79c0328000000,0xf5e1dc034800ffff,0xfdf1dc231a0ec01f,0x200021e71aa00000,
0xfe01dc0140000002,0x600021e7188e0000,0xfc081de440000000,0x00085de228000000,
0x80001de71bffe000,0xfe01dc0140000005,0x400001e7190e0000,0x0201dc8140000005,
0x000001e7190edffc,0x0201dc8140000005,0x600001e7198edffc,0x00585c4240000000,
0x10081de438002000,0x60001de728000000,0x02011c0140000004,0xd80b5de25000d0d4,
0x20001de718000000,0xfc0b5de440000000,0xf9eb9c0328000000,0x10099de46800ffff,
0x0ae79c0328000000,0x15e9de834800fff0,0x99a15c0441000000,0x0051dc8010000000,
0x00514000208ec020,0x14515c005800d2e0,0x00514000c8000000,0x15379c045800d160,
0x02715c0210000000,0x79e81c010bffc000,0x76081e0150000000,0x7a079c0120088000,
0x99e81c01203c0000,0x01f95c0250000000,0x78091de40bffc000,0x82089e0128000000,
0x92281c01204c0000,0x82089e0120400000,0x0219dc0221cc0000,0x80099de40bf30000,
0x9a21dc8128000000,0x8000a1e71b0e0000,0x11e1000140000000,0x7441020150000000,
0x90410001203c8000,0x1228000120480000,0xb6eb5d0320400000,0x0ad11c0348000000,
0x84485e634800fff0,0x80011de440000000,0x84015de428000000,0x00001de728000000,
0x0000000090000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,
0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,
0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,
0x035fffff00000000,0x0000000000000000,0x7fdfffff3ff00000,0x0000000000000000,
0x00080a043fe00000,0x004000200000000f,0x000c170400401903,0x0038000700000000,
0x000c17040021f000,0x0030000600000000,0x000c17040021f000,0x0028000500000000,
0x000c17040021f000,0x0020000400000000,0x000c17040021f000,0x0018000300000000,
0x000c17040021f000,0x0010000200000000,0x000c17040021f000,0x0008000100000000,
0x000c17040021f000,0x0000000000000000,0x00080d040021f000,0x0000000200060048,
0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0008120400000000,
0x0000000000000019,0x0000001900081104,0x0008120400000000,0x0000000000000018,
0x0000001800081104,0x0008120400000000,0x0000000000000017,0x0000001700081104,
0x0008120400000000,0x0000000000000016,0x0000001600081104,0x0008120400000000,
0x000000000000001b,0x0000001b00081104,0x0008120400000000,0x0000000000000019,
0x0000001900081104,0x0008120400000000,0x0000000000000018,0x0000001800081104,
0x0008120400000000,0x000000000000001a,0x0000001a00081104,0x0008120400000000,
0x0000000000000019,0x0000001900081104,0x0008120400000000,0x0000000000000018,
0x0000001800081104,0x0008120400000000,0x0000000000000017,0x0000001700081104,
0x0008120400000000,0x0000000000000016,0x0000001600081104,0x0008120400000000,
0x0000000000000015,0x0000001500081104,0x0000000600000000,0x00002dbc00000005,
0x0000000000000000,0x0000000000000000,0x0000015000000000,0x0000015000000000,
0x0000000400000000,0x6000000000000000,0x00000cc400001b05,0x0000000000000000,
0x0000000000000000,0x00000cb400000000,0x00000cb400000000,0x0000000400000000,
0x6000000000000000,0x0000197800001a05,0x0000000000000000,0x0000000000000000,
0x000004e400000000,0x000004e400000000,0x0000000400000000,0x6000000000000000,
0x00001e5c00001505,0x0000000000000000,0x0000000000000000,0x00000e0c00000000,
0x00000e0c00000000,0x0000000400000000,0x6000000000000000,0x00002c6800001506,
0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000200000000000,
0x0000000400000000,0x0000000100000000,0x00002c6800000005,0x0000000000000000,
0x0000000000000000,0x0000001c00000000,0x0000001c00000000,0x0000000400000000,
0x0100000100000000,0x0000548f00000098,0x0000000000000000,0x0003000000000038,
0x0000004800000014,0x000000450000004e,0x0000000000000000,0x0000004000000000,
0x0020762d00000003,0x552f3a4300000000,0x6d64612f73726573,0x6d75636f442f6e69,
0x54414d2f73746e65,0x6574614e2f42414c,0x322d53446e49572f,0x75632f323130322d,
0x6372756f732f6164,0x6153746f69422f65,0x2e78654d74726176,0x0a0d0a0d00007563,
0x0a0d0a0d0a0d0a0d,0x6e6f69737265762e,0x742e0a0d302e3320,0x6d73207465677261,
0x64612e0a0d30325f,0x69735f7373657264,0x0d0a0d343620657a,0x3109656c69662e0a,
0x6573552f3a432220,0x6e696d64612f7372,0x617461447070412f,0x542f6c61636f4c2f,
0x78706d742f706d65,0x30303030305f7466,0x303030305f303036,0x425f392d30303030,
0x7261766153746f69,0x7070632e78654d74,0x662e0a0d22692e33,0x4322203209656c69,
0x2f73726573552f3a,0x6f442f6e696d6461,0x2f73746e656d7563,0x4e2f42414c54414d,
0x446e49572f657461,0x323130322d322d53,0x6f732f616475632f,0x6f69422f65637275,
0x4d74726176615374,0x0a0d2275632e7865,0x203309656c69662e,0x676f72502f3a4322,
0x656c6946206d6172,0x41494449564e2f73,0x6d6f432055504720,0x5420676e69747570,
0x432f74696b6c6f6f,0x312e34762f414455,0x69632f6d76766e2f,0x6564756c636e695f,
0x69662e0a0d22682e,0x3a6322203409656c,0x6d6172676f72702f,0x6e2f73656c696620,
0x7067206169646976,0x7475706d6f632075,0x6c6f6f7420676e69,0x616475632f74696b,
0x6e692f312e34762f,0x65642f6564756c63,0x6e75665f65636976,0x682e736e6f697463,
0x0d0a0d0a0d0a0d22,0x736e6f632e0a0d0a,0x6e67696c612e2074,0x203233752e203420,
0x0d3b706e5f766564,0x2074736e6f632e0a,0x34206e67696c612e,0x6564203233752e20,
0x2e0a0d3b666e5f76,0x612e2074736e6f63,0x2e2038206e67696c,0x6f74756320343666,
0x6f632e0a0d3b6666,0x696c612e2074736e,0x36662e2038206e67,0x3b6465726f632034,
0x74736e6f632e0a0d,0x206e67696c612e20,0x74203233752e2034,0x6570736461657268,
0x0d3b6b636f6c6272,0x697369762e0a0d0a,0x6e75662e20656c62,0x6f6962385a5f2063,
0x6f64377032705f74,0x535f5332656c6275,0x6f64375f535f535f,0x53645031656c6275,
0x0a0d285f31535f31,0x2e206d617261702e,0x3631206e67696c61,0x385a5f2038622e20,
0x7032705f746f6962,0x32656c62756f6437,0x5f535f535f535f53,0x31656c62756f6437,
0x5f31535f31536450,0x305f6d617261705f,0x2e0a0d2c5d36315b,0x612e206d61726170,
0x203631206e67696c,0x62385a5f2038622e,0x377032705f746f69,0x5332656c62756f64,
0x375f535f535f535f,0x5031656c62756f64,0x5f5f31535f315364,0x5b315f6d61726170,
0x702e0a0d2c5d3631,0x6c612e206d617261,0x2e203631206e6769,0x6962385a5f203862,
0x64377032705f746f,0x5f5332656c62756f,0x64375f535f535f53,0x645031656c62756f,
0x705f5f31535f3153,0x315b325f6d617261,0x61702e0a0d2c5d36,0x696c612e206d6172,
0x622e203631206e67,0x6f6962385a5f2038,0x6f64377032705f74,0x535f5332656c6275,
0x6f64375f535f535f,0x53645031656c6275,0x61705f5f31535f31,0x36315b335f6d6172,
0x7261702e0a0d2c5d,0x67696c612e206d61,0x38622e203631206e,0x746f6962385a5f20,
0x756f64377032705f,0x5f535f5332656c62,0x756f64375f535f53,0x3153645031656c62,
0x7261705f5f31535f,0x5d36315b345f6d61,0x617261702e0a0d2c,0x6e67696c612e206d,
0x5f2038622e203820,0x705f746f6962385a,0x6c62756f64377032,0x5f535f535f533265,
0x6c62756f64375f53,0x535f315364503165,0x6d617261705f5f31,0x0a0d2c5d385b355f,
0x2e206d617261702e,0x62385a5f20343662,0x377032705f746f69,0x5332656c62756f64,
0x375f535f535f535f,0x5031656c62756f64,0x5f5f31535f315364,0x2c365f6d61726170,
0x6d617261702e0a0d,0x5a5f203436622e20,0x32705f746f696238,0x656c62756f643770,
0x535f535f535f5332,0x656c62756f64375f,0x31535f3153645031,0x5f6d617261705f5f,
0x7261702e0a0d2c37,0x203436622e206d61,0x5f746f6962385a5f,0x62756f6437703270,
0x535f535f5332656c,0x62756f64375f535f,0x5f3153645031656c,0x617261705f5f3153,
0x0a0d290a0d385f6d,0x206765722e0a0d7b,0x646625203436662e,0x2e0a0d3b3e38353c,
0x3233732e20676572,0x3b3e37313c722520,0x2e206765722e0a0d,0x3c6c722520343673,
0x0a0d0a0d3b3e3031,0x36622e766f6d0a0d,0x202c316c72250934,0x5f746f6962385a5f,
0x62756f6437703270,0x535f535f5332656c,0x62756f64375f535f,0x5f3153645031656c,
0x617261705f5f3153,0x6f6d0a0d3b305f6d,0x7225093436622e76,0x62385a5f202c326c,
0x377032705f746f69,0x5332656c62756f64,0x375f535f535f535f,0x5031656c62756f64,
0x5f5f31535f315364,0x3b315f6d61726170,0x36622e766f6d0a0d,0x202c336c72250934,
0x5f746f6962385a5f,0x62756f6437703270,0x535f535f5332656c,0x62756f64375f535f,
0x5f3153645031656c,0x617261705f5f3153,0x6f6d0a0d3b325f6d,0x7225093436622e76,
0x62385a5f202c346c,0x377032705f746f69,0x5332656c62756f64,0x375f535f535f535f,
0x5031656c62756f64,0x5f5f31535f315364,0x3b335f6d61726170,0x36622e766f6d0a0d,
0x202c356c72250934,0x5f746f6962385a5f,0x62756f6437703270,0x535f535f5332656c,
0x62756f64375f535f,0x5f3153645031656c,0x617261705f5f3153,0x6f6d0a0d3b345f6d,
0x7225093436622e76,0x62385a5f202c366c,0x377032705f746f69,0x5332656c62756f64,
0x375f535f535f535f,0x5031656c62756f64,0x5f5f31535f315364,0x3b355f6d61726170,
0x7261702e646c0a0d,0x25203436752e6d61,0x5a5f5b202c376c72,0x32705f746f696238,
0x656c62756f643770,0x535f535f535f5332,0x656c62756f64375f,0x31535f3153645031,
0x5f6d617261705f5f,0x2e646c0a0d3b5d36,0x36752e6d61726170,0x202c386c72252034,
0x746f6962385a5f5b,0x756f64377032705f,0x5f535f5332656c62,0x756f64375f535f53,
0x3153645031656c62,0x7261705f5f31535f,0x0a0d3b5d375f6d61,0x6d617261702e646c,
0x6c7225203436752e,0x62385a5f5b202c39,0x377032705f746f69,0x5332656c62756f64,
0x375f535f535f535f,0x5031656c62756f64,0x5f5f31535f315364,0x5d385f6d61726170,
0x20636f6c2e0a0d3b,0x0a0d312038362032,0x6c61636f6c2e646c,0x646625203436662e,
0x316c72255b202c31,0x646c0a0d3b5d382b,0x662e6c61636f6c2e,0x2c32646625203436,
0x3b5d316c72255b20,0x36662e6275730a0d,0x202c336466252034,0x6625202c32646625,
0x6f6c2e0a0d3b3164,0x3120393620322063,0x636f6c2e646c0a0d,0x25203436662e6c61,
0x72255b202c346466,0x0a0d3b5d382b326c,0x6c61636f6c2e646c,0x646625203436662e,
0x326c72255b202c35,0x2e6275730a0d3b5d,0x3664662520343666,0x202c35646625202c,
0x2e0a0d3b34646625,0x3037203220636f6c,0x6c2e646c0a0d3120,0x3436662e6c61636f,
0x5b202c3764662520,0x3b5d382b336c7225,0x636f6c2e646c0a0d,0x25203436662e6c61,
0x72255b202c386466,0x75730a0d3b5d336c,0x6625203436662e62,0x38646625202c3964,
0x0d3b37646625202c,0x203220636f6c2e0a,0x646c0a0d31203237,0x662e6c61636f6c2e,
0x3031646625203436,0x5d356c72255b202c,0x662e6275730a0d3b,0x3131646625203436,
0x2c3031646625202c,0x0a0d3b3264662520,0x37203220636f6c2e,0x6275730a0d312033,
0x646625203436662e,0x31646625202c3231,0x3b31646625202c30,0x3220636f6c2e0a0d,
0x6c0a0d3120343720,0x2e6c61636f6c2e64,0x3164662520343666,0x356c72255b202c33,
0x75730a0d3b5d382b,0x6625203436662e62,0x646625202c343164,0x35646625202c3331,
0x20636f6c2e0a0d3b,0x0a0d312035372032,0x203436662e627573,0x25202c3531646625,
0x6625202c33316466,0x6f6c2e0a0d3b3464,0x3120363720322063,0x636f6c2e646c0a0d,
0x25203436662e6c61,0x255b202c36316466,0x730a0d3b5d366c72,0x25203436662e6275,
0x6625202c37316466,0x646625202c363164,0x636f6c2e0a0d3b38,0x0d31203737203220,
0x3436662e6275730a,0x202c383164662520,0x25202c3631646625,0x6c2e0a0d3b376466,
0x203937203220636f,0x662e6c756d0a0d31,0x3931646625203436,0x2c3431646625202c,
0x0d3b343164662520,0x2e6e722e616d660a,0x3264662520343666,0x3131646625202c30,
0x2c3131646625202c,0x0d3b393164662520,0x2e6e722e616d660a,0x3264662520343666,
0x3731646625202c31,0x2c3731646625202c,0x0d3b303264662520,0x203320636f6c2e0a,
0x0a0d352035313031,0x2e6e722e74727173,0x3264662520343666,0x3132646625202c32,
0x20636f6c2e0a0d3b,0x0a0d312030382032,0x203436662e6c756d,0x25202c3332646625,
0x6625202c35316466,0x6d660a0d3b353164,0x3436662e6e722e61,0x202c343264662520,
0x25202c3231646625,0x6625202c32316466,0x6d660a0d3b333264,0x3436662e6e722e61,
0x202c353264662520,0x25202c3831646625,0x6625202c38316466,0x6c2e0a0d3b343264,
0x313031203320636f,0x7271730a0d352035,0x3436662e6e722e74,0x202c363264662520,
0x0a0d3b3532646625,0x38203220636f6c2e,0x6c756d0a0d312032,0x646625203436662e,
0x31646625202c3732,0x3531646625202c34,0x722e616d660a0d3b,0x6625203436662e6e,
0x646625202c383264,0x31646625202c3131,0x3732646625202c32,0x722e616d660a0d3b,
0x6625203436662e6e,0x646625202c393264,0x31646625202c3731,0x3832646625202c38,
0x20636f6c2e0a0d3b,0x0a0d312033382032,0x203436662e6c756d,0x25202c3033646625,
0x6625202c32326466,0x6c2e0a0d3b363264,0x203538203220636f,0x662e6c756d0a0d31,
0x3133646625203436,0x202c36646625202c,0x660a0d3b36646625,0x36662e6e722e616d,
0x2c32336466252034,0x25202c3364662520,0x646625202c336466,0x616d660a0d3b3133,
0x203436662e6e722e,0x25202c3333646625,0x646625202c396466,0x3233646625202c39,
0x20636f6c2e0a0d3b,0x0a0d312036382032,0x662e6e722e616d66,0x3433646625203436,
0x2c3232646625202c,0x202c363264662520,0x0a0d3b3932646625,0x74736e6f632e646c,
0x646625203436662e,0x726f635b202c3533,0x756d0a0d3b5d6465,0x6625203436662e6c,
0x646625202c363364,0x33646625202c3533,0x2e616d660a0d3b33,0x25203436662e6e72,
0x6625202c37336466,0x646625202c303364,0x33646625202c3433,0x636f6c2e0a0d3b36,
0x0d31203738203220,0x3436662e6464610a,0x202c383364662520,0x25202c3232646625,
0x6c0a0d3b36326466,0x2e6c61636f6c2e64,0x3364662520343666,0x346c72255b202c39,
0x2e6c756d0a0d3b5d,0x3464662520343666,0x3933646625202c30,0x3b3833646625202c,
0x36662e6c756d0a0d,0x2c31346466252034,0x202c303464662520,0x4635344246336430,
0x3843394344363033,0x6f6c2e0a0d3b3338,0x3832333120342063,0x2e7669640a0d3320,
0x25203436662e6e72,0x6625202c32346466,0x646625202c313464,0x6f6c2e0a0d3b3733,
0x3120303920322063,0x36662e6c756d0a0d,0x2c33346466252034,0x202c343164662520,
0x0a0d3b3831646625,0x203436662e67656e,0x25202c3434646625,0x660a0d3b37316466,
0x36662e6e722e616d,0x2c35346466252034,0x202c343464662520,0x25202c3531646625,
0x6c0a0d3b33346466,0x6625203436662e64,0x72255b202c363464,0x6d660a0d3b5d376c,
0x3436662e6e722e61,0x202c373464662520,0x25202c3234646625,0x6625202c35346466,
0x74730a0d3b363464,0x72255b203436662e,0x646625202c5d376c,0x6f6c2e0a0d3b3734,
0x3120313920322063,0x36662e6c756d0a0d,0x2c38346466252034,0x202c373164662520,
0x0a0d3b3231646625,0x203436662e67656e,0x25202c3934646625,0x660a0d3b31316466,
0x36662e6e722e616d,0x2c30356466252034,0x202c393464662520,0x25202c3831646625,
0x6c0a0d3b38346466,0x6625203436662e64,0x72255b202c313564,0x6d660a0d3b5d386c,
0x3436662e6e722e61,0x202c323564662520,0x25202c3234646625,0x6625202c30356466,
0x74730a0d3b313564,0x72255b203436662e,0x646625202c5d386c,0x6f6c2e0a0d3b3235,
0x3120323920322063,0x36662e6c756d0a0d,0x2c33356466252034,0x202c313164662520,
0x0a0d3b3531646625,0x203436662e67656e,0x25202c3435646625,0x660a0d3b34316466,
0x36662e6e722e616d,0x2c35356466252034,0x202c343564662520,0x25202c3231646625,
0x6c0a0d3b33356466,0x6625203436662e64,0x72255b202c363564,0x6d660a0d3b5d396c,
0x3436662e6e722e61,0x202c373564662520,0x25202c3234646625,0x6625202c35356466,
0x74730a0d3b363564,0x72255b203436662e,0x646625202c5d396c,0x6f6c2e0a0d3b3735,
0x3220333920322063,0x0a0d3b7465720a0d,0x69762e0a0d0a0d7d,0x662e20656c626973,
0x61702e2820636e75,0x696c612e206d6172,0x38622e2038206e67,0x65725f636e756620,
0x34325b306c617674,0x6231315a5f20295d,0x5f7032705f746f69,0x6c62756f64376873,
0x5f535f535f533265,0x6c62756f64375f53,0x6f74636576373165,0x61702e0a0d283372,
0x696c612e206d6172,0x622e203631206e67,0x696231315a5f2038,0x735f7032705f746f,
0x656c62756f643768,0x535f535f535f5332,0x656c62756f64375f,0x726f746365763731,
0x5f6d617261705f33,0x0a0d2c5d36315b30,0x2e206d617261702e,0x3631206e67696c61,
0x315a5f2038622e20,0x32705f746f696231,0x756f643768735f70,0x5f535f5332656c62,
0x756f64375f535f53,0x6365763731656c62,0x7261705f33726f74,0x5d36315b315f6d61,
0x617261702e0a0d2c,0x6e67696c612e206d,0x2038622e20363120,0x746f696231315a5f,
0x3768735f7032705f,0x5332656c62756f64,0x375f535f535f535f,0x3731656c62756f64,
0x5f33726f74636576,0x5b325f6d61726170,0x702e0a0d2c5d3631,0x6c612e206d617261,
0x2e203631206e6769,0x6231315a5f203862,0x5f7032705f746f69,0x6c62756f64376873,
0x5f535f535f533265,0x6c62756f64375f53,0x6f74636576373165,0x6d617261705f3372,
0x0d2c5d36315b335f,0x206d617261702e0a,0x31206e67696c612e,0x5a5f2038622e2036,
0x705f746f69623131,0x6f643768735f7032,0x535f5332656c6275,0x6f64375f535f535f,
0x65763731656c6275,0x61705f33726f7463,0x36315b345f6d6172,0x7261702e0a0d2c5d,
0x67696c612e206d61,0x2038622e2038206e,0x746f696231315a5f,0x3768735f7032705f,
0x5332656c62756f64,0x375f535f535f535f,0x3731656c62756f64,0x5f33726f74636576,
0x5b355f6d61726170,0x61702e0a0d2c5d38,0x696c612e206d6172,0x38622e2038206e67,
0x6f696231315a5f20,0x68735f7032705f74,0x32656c62756f6437,0x5f535f535f535f53,
0x31656c62756f6437,0x33726f7463657637,0x365f6d617261705f,0x0d290a0d5d34325b,
0x6765722e0a0d7b0a,0x6625203436662e20,0x0a0d3b3e30363c64,0x33732e206765722e,
0x3e39313c72252032,0x206765722e0a0d3b,0x6c7225203436732e,0x0a0d0a0d3b3e383c,
0x36622e766f6d0a0d,0x202c316c72250934,0x746f696231315a5f,0x3768735f7032705f,
0x5332656c62756f64,0x375f535f535f535f,0x3731656c62756f64,0x5f33726f74636576,
0x3b305f6d61726170,0x36622e766f6d0a0d,0x202c326c72250934,0x746f696231315a5f,
0x3768735f7032705f,0x5332656c62756f64,0x375f535f535f535f,0x3731656c62756f64,
0x5f33726f74636576,0x3b315f6d61726170,0x36622e766f6d0a0d,0x202c336c72250934,
0x746f696231315a5f,0x3768735f7032705f,0x5332656c62756f64,0x375f535f535f535f,
0x3731656c62756f64,0x5f33726f74636576,0x3b325f6d61726170,0x36622e766f6d0a0d,
0x202c346c72250934,0x746f696231315a5f,0x3768735f7032705f,0x5332656c62756f64,
0x375f535f535f535f,0x3731656c62756f64,0x5f33726f74636576,0x3b335f6d61726170,
0x36622e766f6d0a0d,0x202c356c72250934,0x746f696231315a5f,0x3768735f7032705f,
0x5332656c62756f64,0x375f535f535f535f,0x3731656c62756f64,0x5f33726f74636576,
0x3b345f6d61726170,0x36622e766f6d0a0d,0x202c366c72250934,0x746f696231315a5f,
0x3768735f7032705f,0x5332656c62756f64,0x375f535f535f535f,0x3731656c62756f64,
0x5f33726f74636576,0x3b355f6d61726170,0x36622e766f6d0a0d,0x202c376c72250934,
0x746f696231315a5f,0x3768735f7032705f,0x5332656c62756f64,0x375f535f535f535f,
0x3731656c62756f64,0x5f33726f74636576,0x3b365f6d61726170,0x3220636f6c2e0a0d,
0x0a0d312032303120,0x6c61636f6c2e646c,0x646625203436662e,0x316c72255b202c31,
0x646c0a0d3b5d382b,0x662e6c61636f6c2e,0x2c32646625203436,0x3b5d316c72255b20,
0x36662e6275730a0d,0x202c336466252034,0x6625202c32646625,0x6f6c2e0a0d3b3164,
0x2033303120322063,0x6f6c2e646c0a0d31,0x203436662e6c6163,0x255b202c34646625,
0x0d3b5d382b326c72,0x61636f6c2e646c0a,0x6625203436662e6c,0x6c72255b202c3564,
0x6275730a0d3b5d32,0x646625203436662e,0x2c35646625202c36,0x0a0d3b3464662520,
0x31203220636f6c2e,0x646c0a0d31203430,0x662e6c61636f6c2e,0x2c37646625203436,
0x382b336c72255b20,0x6c2e646c0a0d3b5d,0x3436662e6c61636f,0x5b202c3864662520,
0x0a0d3b5d336c7225,0x203436662e627573,0x6625202c39646625,0x37646625202c3864,
0x20636f6c2e0a0d3b,0x0d31203630312032,0x61636f6c2e646c0a,0x6625203436662e6c,
0x72255b202c303164,0x75730a0d3b5d356c,0x6625203436662e62,0x646625202c313164,
0x32646625202c3031,0x20636f6c2e0a0d3b,0x0d31203730312032,0x3436662e6275730a,
0x202c323164662520,0x25202c3031646625,0x6c2e0a0d3b316466,0x383031203220636f,
0x6c2e646c0a0d3120,0x3436662e6c61636f,0x202c333164662520,0x5d382b356c72255b,
0x662e6275730a0d3b,0x3431646625203436,0x2c3331646625202c,0x0a0d3b3564662520,
0x31203220636f6c2e,0x75730a0d31203930,0x6625203436662e62,0x646625202c353164,
0x34646625202c3331,0x20636f6c2e0a0d3b,0x0d31203031312032,0x61636f6c2e646c0a,
0x6625203436662e6c,0x72255b202c363164,0x75730a0d3b5d366c,0x6625203436662e62,
0x646625202c373164,0x38646625202c3631,0x20636f6c2e0a0d3b,0x0d31203131312032,
0x3436662e6275730a,0x202c383164662520,0x25202c3631646625,0x6c2e0a0d3b376466,
0x333131203220636f,0x2e6c756d0a0d3120,0x3164662520343666,0x3431646625202c39,
0x3b3431646625202c,0x6e722e616d660a0d,0x646625203436662e,0x31646625202c3032,
0x3131646625202c31,0x3b3931646625202c,0x6e722e616d660a0d,0x646625203436662e,
0x31646625202c3132,0x3731646625202c37,0x3b3032646625202c,0x3320636f6c2e0a0d,
0x0d35203531303120,0x6e722e747271730a,0x646625203436662e,0x32646625202c3232,
0x636f6c2e0a0d3b31,0x3120343131203220,0x36662e6c756d0a0d,0x2c33326466252034,
0x202c353164662520,0x0a0d3b3531646625,0x662e6e722e616d66,0x3432646625203436,
0x2c3231646625202c,0x202c323164662520,0x0a0d3b3332646625,0x662e6e722e616d66,
0x3532646625203436,0x2c3831646625202c,0x202c383164662520,0x0a0d3b3432646625,
0x31203320636f6c2e,0x730a0d3520353130,0x662e6e722e747271,0x3632646625203436,
0x3b3532646625202c,0x3220636f6c2e0a0d,0x0a0d312036313120,0x203436662e6c756d,
0x25202c3732646625,0x6625202c34316466,0x6d660a0d3b353164,0x3436662e6e722e61,
0x202c383264662520,0x25202c3131646625,0x6625202c32316466,0x6d660a0d3b373264,
0x3436662e6e722e61,0x202c393264662520,0x25202c3731646625,0x6625202c38316466,
0x6c2e0a0d3b383264,0x373131203220636f,0x2e6c756d0a0d3120,0x3364662520343666,
0x3232646625202c30,0x3b3632646625202c,0x3220636f6c2e0a0d,0x0a0d312039313120,
0x203436662e6c756d,0x25202c3133646625,0x646625202c366466,0x2e616d660a0d3b36,
0x25203436662e6e72,0x6625202c32336466,0x33646625202c3364,0x3b3133646625202c,
0x6e722e616d660a0d,0x646625203436662e,0x39646625202c3333,0x202c39646625202c,
0x0a0d3b3233646625,0x31203220636f6c2e,0x6d660a0d31203032,0x3436662e6e722e61,
0x202c343364662520,0x25202c3232646625,0x6625202c36326466,0x646c0a0d3b393264,
0x662e74736e6f632e,0x3533646625203436,0x6465726f635b202c,0x2e6c756d0a0d3b5d,
0x3364662520343666,0x3533646625202c36,0x3b3333646625202c,0x6e722e616d660a0d,
0x646625203436662e,0x33646625202c3733,0x3433646625202c30,0x3b3633646625202c,
0x3220636f6c2e0a0d,0x0a0d312031323120,0x203436662e646461,0x25202c3833646625,
0x6625202c32326466,0x646c0a0d3b363264,0x662e6c61636f6c2e,0x3933646625203436,
0x5d346c72255b202c,0x662e6c756d0a0d3b,0x3034646625203436,0x2c3933646625202c,
0x0d3b383364662520,0x3436662e6c756d0a,0x202c313464662520,0x30202c3034646625,
0x3346353442463364,0x3838433943443630,0x636f6c2e0a0d3b33,0x2038323331203420,
0x722e7669640a0d33,0x6625203436662e6e,0x646625202c323464,0x33646625202c3134,
0x636f6c2e0a0d3b37,0x3120343231203220,0x36662e6c756d0a0d,0x2c33346466252034,
0x202c343164662520,0x0a0d3b3831646625,0x203436662e67656e,0x25202c3434646625,
0x660a0d3b37316466,0x36662e6e722e616d,0x2c35346466252034,0x202c343464662520,
0x25202c3531646625,0x6c0a0d3b33346466,0x2e6c61636f6c2e64,0x3464662520343666,
0x376c72255b202c36,0x2e616d660a0d3b5d,0x25203436662e6e72,0x6625202c37346466,
0x646625202c323464,0x34646625202c3534,0x6c2e74730a0d3b36,0x3436662e6c61636f,
0x2c5d376c72255b20,0x0d3b373464662520,0x203220636f6c2e0a,0x6d0a0d3120353231,
0x25203436662e6c75,0x6625202c38346466,0x646625202c373164,0x67656e0a0d3b3231,
0x646625203436662e,0x31646625202c3934,0x2e616d660a0d3b31,0x25203436662e6e72,
0x6625202c30356466,0x646625202c393464,0x34646625202c3831,0x6c2e646c0a0d3b38,
0x3436662e6c61636f,0x202c313564662520,0x5d382b376c72255b,0x722e616d660a0d3b,
0x6625203436662e6e,0x646625202c323564,0x35646625202c3234,0x3135646625202c30,
0x6f6c2e74730a0d3b,0x203436662e6c6163,0x5d382b376c72255b,0x3b3235646625202c,
0x3220636f6c2e0a0d,0x0a0d312036323120,0x203436662e6c756d,0x25202c3335646625,
0x6625202c31316466,0x656e0a0d3b353164,0x6625203436662e67,0x646625202c343564,
0x616d660a0d3b3431,0x203436662e6e722e,0x25202c3535646625,0x6625202c34356466,
0x646625202c323164,0x2e646c0a0d3b3335,0x36662e6c61636f6c,0x2c36356466252034,
0x312b376c72255b20,0x616d660a0d3b5d36,0x203436662e6e722e,0x25202c3735646625,
0x6625202c32346466,0x646625202c353564,0x2e74730a0d3b3635,0x36662e6c61636f6c,
0x2b376c72255b2034,0x646625202c5d3631,0x6f6c2e0a0d3b3735,0x2038323120322063,
0x6f6c2e646c0a0d31,0x203436662e6c6163,0x5b202c3835646625,0x3b5d382b376c7225,
0x636f6c2e646c0a0d,0x25203436662e6c61,0x255b202c39356466,0x730a0d3b5d376c72,
0x2e6d617261702e74,0x6e75665b09343666,0x6c61767465725f63,0x6625202c5d302b30,
0x74730a0d3b393564,0x662e6d617261702e,0x636e75665b093436,0x306c61767465725f,
0x646625202c5d382b,0x2e74730a0d3b3835,0x36662e6d61726170,0x5f636e75665b0934,
0x2b306c6176746572,0x646625202c5d3631,0x7465720a0d3b3735,0x0a0d0a0d7d0a0d3b,
0x5f207972746e652e,0x53746f694236315a,0x616e5f7472617661,0x756f643750657669,
0x6f64375032656c62,0x5f305331656c6275,0x30535f30535f3053,0x285f32535f30535f,
0x6d617261702e0a0d,0x5a5f203436752e20,0x6153746f69423631,0x69616e5f74726176,
0x62756f6437506576,0x756f64375032656c,0x535f305331656c62,0x5f30535f30535f30,
0x705f5f32535f3053,0x0d2c305f6d617261,0x206d617261702e0a,0x315a5f203436752e,
0x766153746f694236,0x7669616e5f747261,0x6c62756f64375065,0x62756f6437503265,
0x30535f305331656c,0x535f30535f30535f,0x61705f5f32535f30,0x0a0d2c315f6d6172,
0x2e206d617261702e,0x36315a5f20343675,0x61766153746f6942,0x657669616e5f7472,
0x656c62756f643750,0x6c62756f64375032,0x5f30535f30533165,0x30535f30535f3053,
0x7261705f5f32535f,0x2e0a0d2c325f6d61,0x752e206d61726170,0x4236315a5f203436,
0x7261766153746f69,0x50657669616e5f74,0x32656c62756f6437,0x656c62756f643750,
0x535f30535f305331,0x5f30535f30535f30,0x617261705f5f3253,0x702e0a0d2c335f6d,
0x36752e206d617261,0x694236315a5f2034,0x747261766153746f,0x3750657669616e5f,
0x5032656c62756f64,0x31656c62756f6437,0x30535f30535f3053,0x535f30535f30535f,
0x6d617261705f5f32,0x61702e0a0d2c345f,0x3436752e206d6172,0x6f694236315a5f20,
0x5f74726176615374,0x643750657669616e,0x375032656c62756f,0x5331656c62756f64,
0x5f30535f30535f30,0x32535f30535f3053,0x5f6d617261705f5f,0x7261702e0a0d2c35,
0x203436752e206d61,0x746f694236315a5f,0x6e5f747261766153,0x6f64375065766961,
0x64375032656c6275,0x305331656c62756f,0x535f30535f30535f,0x5f32535f30535f30,
0x365f6d617261705f,0x617261702e0a0d2c,0x5f203436752e206d,0x53746f694236315a,
0x616e5f7472617661,0x756f643750657669,0x6f64375032656c62,0x5f305331656c6275,
0x30535f30535f3053,0x5f5f32535f30535f,0x0d375f6d61726170,0x2e0a0d7b0a0d290a,
0x3436662e20676572,0x3e36363c64662520,0x206765722e0a0d3b,0x702520646572702e,
0x722e0a0d3b3e343c,0x203233732e206765,0x0d3b3e33323c7225,0x732e206765722e0a,
0x333c6c7225203436,0x0d0a0d0a0d3b3e31,0x617261702e646c0a,0x7225203436752e6d,
0x5a5f5b202c35316c,0x6153746f69423631,0x69616e5f74726176,0x62756f6437506576,
0x756f64375032656c,0x535f305331656c62,0x5f30535f30535f30,0x705f5f32535f3053,
0x3b5d305f6d617261,0x7261702e646c0a0d,0x25203436752e6d61,0x5f5b202c36316c72,
0x53746f694236315a,0x616e5f7472617661,0x756f643750657669,0x6f64375032656c62,
0x5f305331656c6275,0x30535f30535f3053,0x5f5f32535f30535f,0x5d315f6d61726170,
0x61702e646c0a0d3b,0x203436752e6d6172,0x5b202c37316c7225,0x746f694236315a5f,
0x6e5f747261766153,0x6f64375065766961,0x64375032656c6275,0x305331656c62756f,
0x535f30535f30535f,0x5f32535f30535f30,0x325f6d617261705f,0x702e646c0a0d3b5d,
0x3436752e6d617261,0x202c38316c722520,0x6f694236315a5f5b,0x5f74726176615374,
0x643750657669616e,0x375032656c62756f,0x5331656c62756f64,0x5f30535f30535f30,
0x32535f30535f3053,0x5f6d617261705f5f,0x2e646c0a0d3b5d33,0x36752e6d61726170,
0x2c39316c72252034,0x694236315a5f5b20,0x747261766153746f,0x3750657669616e5f,
0x5032656c62756f64,0x31656c62756f6437,0x30535f30535f3053,0x535f30535f30535f,
0x6d617261705f5f32,0x646c0a0d3b5d345f,0x752e6d617261702e,0x30326c7225203436,
0x4236315a5f5b202c,0x7261766153746f69,0x50657669616e5f74,0x32656c62756f6437,
0x656c62756f643750,0x535f30535f305331,0x5f30535f30535f30,0x617261705f5f3253,
0x6c0a0d3b5d355f6d,0x2e6d617261702e64,0x326c722520343675,0x36315a5f5b202c31,
0x61766153746f6942,0x657669616e5f7472,0x656c62756f643750,0x6c62756f64375032,
0x5f30535f30533165,0x30535f30535f3053,0x7261705f5f32535f,0x0a0d3b5d365f6d61,
0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3232,0x766153746f694236,
0x7669616e5f747261,0x6c62756f64375065,0x62756f6437503265,0x30535f305331656c,
0x535f30535f30535f,0x61705f5f32535f30,0x0d3b5d375f6d6172,0x6f742e617476630a,
0x2e6c61626f6c672e,0x316c722520343675,0x3b32326c7225202c,0x742e617476630a0d,
0x6c61626f6c672e6f,0x6c7225203436752e,0x31326c7225202c32,0x2e617476630a0d3b,
0x61626f6c672e6f74,0x7225203436752e6c,0x316c7225202c336c,0x617476630a0d3b36,
0x626f6c672e6f742e,0x25203436752e6c61,0x6c7225202c346c72,0x7476630a0d3b3531,
0x6f6c672e6f742e61,0x203436752e6c6162,0x7225202c356c7225,0x76630a0d3b30326c,
0x6c672e6f742e6174,0x3436752e6c61626f,0x25202c366c722520,0x630a0d3b39316c72,
0x672e6f742e617476,0x36752e6c61626f6c,0x202c376c72252034,0x0a0d3b38316c7225,
0x2e6f742e61747663,0x752e6c61626f6c67,0x2c386c7225203436,0x0d3b37316c722520,
0x203220636f6c2e0a,0x6d0a0d3120353331,0x25203233752e766f,0x69746e25202c3572,
0x6f6d0a0d3b782e64,0x7225203233752e76,0x6961746325202c36,0x6f6d0a0d3b782e64,
0x7225203233752e76,0x2e64697425202c37,0x2e64616d0a0d3b78,0x25203233732e6f6c,
0x2c357225202c3172,0x7225202c36722520,0x636f6c2e0a0d3b37,0x3120373331203220,
0x6e6f632e646c0a0d,0x25203233752e7473,0x7665645b202c3872,0x730a0d3b5d706e5f,
0x732e65672e707465,0x202c317025203233,0x387225202c317225,0x20317025400a0d3b,
0x5f32424220617262,0x6c2e0a0d0a0d3b34,0x393331203220636f,0x632e646c0a0d3120,
0x3233752e74736e6f,0x645b202c32722520,0x0d3b5d666e5f7665,0x746c2e707465730a,
0x327025203233732e,0x31202c327225202c,0x20327025400a0d3b,0x5f32424220617262,
0x6c2e0a0d0a0d3b34,0x313431203220636f,0x2e6c756d0a0d3120,0x3233732e65646977,
0x202c34326c722520,0x3b3631202c317225,0x36732e6464610a0d,0x202c396c72252034,
0x7225202c346c7225,0x756d0a0d3b34326c,0x732e656469772e6c,0x35326c7225203233,
0x38202c317225202c,0x732e6464610a0d3b,0x30316c7225203436,0x202c336c7225202c,
0x0a0d3b35326c7225,0x203436732e646461,0x25202c31316c7225,0x6c7225202c326c72,
0x6464610a0d3b3432,0x6c7225203436732e,0x316c7225202c3231,0x3b35326c7225202c,
0x3220636f6c2e0a0d,0x6c0a0d3120363820,0x2e74736e6f632e64,0x3164662520343666,
0x6465726f635b202c,0x2e766f6d0a0d3b5d,0x3232722520323375,0x6f6d0a0d3b30202c,
0x7225203436752e76,0x0d3b30202c30336c,0x335f3242420a0d0a,0x732e6464610a0d3a,
0x36326c7225203436,0x202c386c7225202c,0x0a0d3b30336c7225,0x203436732e646461,
0x25202c37326c7225,0x6c7225202c376c72,0x6464610a0d3b3033,0x6c7225203436732e,
0x366c7225202c3832,0x3b30336c7225202c,0x36732e6464610a0d,0x2c39326c72252034,
0x25202c356c722520,0x2e0a0d3b30336c72,0x3431203220636f6c,0x2e646c0a0d312031,
0x762e6c61626f6c67,0x257b203436662e32,0x6625202c38356466,0x255b202c7d393564,
0x0a0d3b5d36326c72,0x36203220636f6c2e,0x6275730a0d312038,0x646625203436662e,
0x3835646625202c34,0x3b3935646625202c,0x3220636f6c2e0a0d,0x0a0d312031343120,
0x61626f6c672e646c,0x3436662e32762e6c,0x2c30366466257b20,0x2c7d313664662520,
0x5d37326c72255b20,0x20636f6c2e0a0d3b,0x0a0d312039362032,0x203436662e627573,
0x6625202c37646625,0x646625202c303664,0x6f6c2e0a0d3b3136,0x2031343120322063,
0x6c672e646c0a0d31,0x2e32762e6c61626f,0x6466257b20343666,0x36646625202c3236,
0x6c72255b202c7d33,0x6c2e0a0d3b5d3832,0x203037203220636f,0x662e6275730a0d31,
0x3031646625203436,0x2c3236646625202c,0x0d3b333664662520,0x203220636f6c2e0a,
0x6c0a0d3120313431,0x6c61626f6c672e64,0x203436662e32762e,0x202c34366466257b,
0x202c7d3536646625,0x0d3b5d396c72255b,0x203220636f6c2e0a,0x75730a0d31203237,
0x6625203436662e62,0x646625202c323164,0x35646625202c3436,0x636f6c2e0a0d3b38,
0x0d31203337203220,0x3436662e6275730a,0x202c333164662520,0x25202c3436646625,
0x2e0a0d3b39356466,0x3437203220636f6c,0x2e6275730a0d3120,0x3164662520343666,
0x3536646625202c35,0x3b3036646625202c,0x3220636f6c2e0a0d,0x730a0d3120353720,
0x25203436662e6275,0x6625202c36316466,0x646625202c353664,0x6f6c2e0a0d3b3136,
0x2031343120322063,0x6c672e646c0a0d31,0x3436662e6c61626f,0x202c373164662520,
0x3b5d30316c72255b,0x3220636f6c2e0a0d,0x730a0d3120363720,0x25203436662e6275,
0x6625202c38316466,0x646625202c373164,0x6f6c2e0a0d3b3236,0x3120373720322063,
0x36662e6275730a0d,0x2c39316466252034,0x202c373164662520,0x0a0d3b3336646625,
0x37203220636f6c2e,0x6c756d0a0d312039,0x646625203436662e,0x31646625202c3032,
0x3531646625202c35,0x722e616d660a0d3b,0x6625203436662e6e,0x646625202c313264,
0x31646625202c3231,0x3032646625202c32,0x722e616d660a0d3b,0x6625203436662e6e,
0x646625202c323264,0x31646625202c3831,0x3132646625202c38,0x20636f6c2e0a0d3b,
0x3520353130312033,0x722e747271730a0d,0x6625203436662e6e,0x646625202c333264,
0x6f6c2e0a0d3b3232,0x3120303820322063,0x36662e6c756d0a0d,0x2c34326466252034,
0x202c363164662520,0x0a0d3b3631646625,0x662e6e722e616d66,0x3532646625203436,
0x2c3331646625202c,0x202c333164662520,0x0a0d3b3432646625,0x662e6e722e616d66,
0x3632646625203436,0x2c3931646625202c,0x202c393164662520,0x0a0d3b3532646625,
0x31203320636f6c2e,0x730a0d3520353130,0x662e6e722e747271,0x3732646625203436,
0x3b3632646625202c,0x3220636f6c2e0a0d,0x6d0a0d3120323820,0x25203436662e6c75,
0x6625202c38326466,0x646625202c353164,0x616d660a0d3b3631,0x203436662e6e722e,
0x25202c3932646625,0x6625202c32316466,0x646625202c333164,0x616d660a0d3b3832,
0x203436662e6e722e,0x25202c3033646625,0x6625202c38316466,0x646625202c393164,
0x6f6c2e0a0d3b3932,0x3120333820322063,0x36662e6c756d0a0d,0x2c31336466252034,
0x202c333264662520,0x0a0d3b3732646625,0x38203220636f6c2e,0x6c756d0a0d312035,
0x646625203436662e,0x37646625202c3233,0x0d3b37646625202c,0x2e6e722e616d660a,
0x3364662520343666,0x2c34646625202c33,0x25202c3464662520,0x660a0d3b32336466,
0x36662e6e722e616d,0x2c34336466252034,0x202c303164662520,0x25202c3031646625,
0x2e0a0d3b33336466,0x3638203220636f6c,0x2e616d660a0d3120,0x25203436662e6e72,
0x6625202c35336466,0x646625202c333264,0x33646625202c3732,0x2e6c756d0a0d3b30,
0x3364662520343666,0x2c31646625202c36,0x0d3b343364662520,0x2e6e722e616d660a,
0x3364662520343666,0x3133646625202c37,0x2c3533646625202c,0x0d3b363364662520,
0x203220636f6c2e0a,0x64610a0d31203738,0x6625203436662e64,0x646625202c383364,
0x32646625202c3332,0x636f6c2e0a0d3b37,0x3120313431203220,0x6f6c672e646c0a0d,
0x203436662e6c6162,0x5b202c3933646625,0x0d3b5d39326c7225,0x203220636f6c2e0a,
0x756d0a0d31203738,0x6625203436662e6c,0x646625202c303464,0x33646625202c3933,
0x2e6c756d0a0d3b38,0x3464662520343666,0x3034646625202c31,0x344246336430202c,
0x3943443630334635,0x2e0a0d3b33383843,0x3331203420636f6c,0x69640a0d33203832,
0x3436662e6e722e76,0x202c323464662520,0x25202c3134646625,0x2e0a0d3b37336466,
0x3039203220636f6c,0x2e6c756d0a0d3120,0x3464662520343666,0x3531646625202c33,
0x3b3931646625202c,0x36662e67656e0a0d,0x2c34346466252034,0x0d3b383164662520,
0x2e6e722e616d660a,0x3464662520343666,0x3434646625202c35,0x2c3631646625202c,
0x0d3b333464662520,0x626f6c672e646c0a,0x25203436662e6c61,0x255b202c36346466,
0x0a0d3b5d31316c72,0x662e6e722e616d66,0x3734646625203436,0x2c3234646625202c,
0x202c353464662520,0x0a0d3b3634646625,0x61626f6c672e7473,0x255b203436662e6c,
0x25202c5d31316c72,0x2e0a0d3b37346466,0x3139203220636f6c,0x2e6c756d0a0d3120,
0x3464662520343666,0x3831646625202c38,0x3b3331646625202c,0x36662e67656e0a0d,
0x2c39346466252034,0x0d3b323164662520,0x2e6e722e616d660a,0x3564662520343666,
0x3934646625202c30,0x2c3931646625202c,0x0d3b383464662520,0x626f6c672e646c0a,
0x25203436662e6c61,0x255b202c31356466,0x3b5d382b31316c72,0x6e722e616d660a0d,
0x646625203436662e,0x34646625202c3235,0x3035646625202c32,0x3b3135646625202c,
0x6f6c672e74730a0d,0x203436662e6c6162,0x382b31316c72255b,0x3235646625202c5d,
0x20636f6c2e0a0d3b,0x0a0d312032392032,0x203436662e6c756d,0x25202c3335646625,
0x6625202c32316466,0x656e0a0d3b363164,0x6625203436662e67,0x646625202c343564,
0x616d660a0d3b3531,0x203436662e6e722e,0x25202c3535646625,0x6625202c34356466,
0x646625202c333164,0x2e646c0a0d3b3335,0x662e6c61626f6c67,0x3635646625203436,
0x32316c72255b202c,0x2e616d660a0d3b5d,0x25203436662e6e72,0x6625202c37356466,
0x646625202c323464,0x35646625202c3535,0x672e74730a0d3b36,0x36662e6c61626f6c,
0x32316c72255b2034,0x3735646625202c5d,0x732e6464610a0d3b,0x30336c7225203436,
0x2c30336c7225202c,0x6c2e0a0d3b363120,0x393331203220636f,0x6464610a0d393920,
0x327225203233732e,0x2c32327225202c32,0x6f6c2e0a0d3b3120,0x2039333120322063,
0x2e707465730a0d31,0x25203233732e746c,0x32327225202c3370,0x0a0d3b327225202c,
0x6172622033702540,0x0d3b335f32424220,0x345f3242420a0d0a,0x20636f6c2e0a0d3a,
0x0d32203534312032,0x7d0a0d3b7465720a,0x746e652e0a0d0a0d,0x4233315a5f207972,
0x7261766153746f69,0x6f64375068735f74,0x64375032656c6275,0x305331656c62756f,
0x535f30535f30535f,0x5f32535f30535f30,0x617261702e0a0d28,0x5f203436752e206d,
0x53746f694233315a,0x68735f7472617661,0x656c62756f643750,0x6c62756f64375032,
0x5f30535f30533165,0x30535f30535f3053,0x7261705f5f32535f,0x2e0a0d2c305f6d61,
0x752e206d61726170,0x4233315a5f203436,0x7261766153746f69,0x6f64375068735f74,
0x64375032656c6275,0x305331656c62756f,0x535f30535f30535f,0x5f32535f30535f30,
0x315f6d617261705f,0x617261702e0a0d2c,0x5f203436752e206d,0x53746f694233315a,
0x68735f7472617661,0x656c62756f643750,0x6c62756f64375032,0x5f30535f30533165,
0x30535f30535f3053,0x7261705f5f32535f,0x2e0a0d2c325f6d61,0x752e206d61726170,
0x4233315a5f203436,0x7261766153746f69,0x6f64375068735f74,0x64375032656c6275,
0x305331656c62756f,0x535f30535f30535f,0x5f32535f30535f30,0x335f6d617261705f,
0x617261702e0a0d2c,0x5f203436752e206d,0x53746f694233315a,0x68735f7472617661,
0x656c62756f643750,0x6c62756f64375032,0x5f30535f30533165,0x30535f30535f3053,
0x7261705f5f32535f,0x2e0a0d2c345f6d61,0x752e206d61726170,0x4233315a5f203436,
0x7261766153746f69,0x6f64375068735f74,0x64375032656c6275,0x305331656c62756f,
0x535f30535f30535f,0x5f32535f30535f30,0x355f6d617261705f,0x617261702e0a0d2c,
0x5f203436752e206d,0x53746f694233315a,0x68735f7472617661,0x656c62756f643750,
0x6c62756f64375032,0x5f30535f30533165,0x30535f30535f3053,0x7261705f5f32535f,
0x2e0a0d2c365f6d61,0x752e206d61726170,0x4233315a5f203436,0x7261766153746f69,
0x6f64375068735f74,0x64375032656c6275,0x305331656c62756f,0x535f30535f30535f,
0x5f32535f30535f30,0x375f6d617261705f,0x0a0d7b0a0d290a0d,0x36662e206765722e,
0x33313c6466252034,0x65722e0a0d3b3e33,0x20646572702e2067,0x0a0d3b3e383c7025,
0x33732e206765722e,0x3e37353c72252032,0x206765722e0a0d3b,0x6c7225203436732e,
0x0d0a0d3b3e30363c,0x6465726168732e0a,0x206e67696c612e20,0x5f2038622e203631,
0x6f6c5f616475635f,0x5f7261765f6c6163,0x335f333330323331,0x6f635f6e6f6e5f34,
0x784668735f74736e,0x0d3b5d383430325b,0x726168732e0a0d0a,0x67696c612e206465,
0x38622e203631206e,0x5f616475635f5f20,0x61765f6c61636f6c,0x3433303233315f72,
0x5f6e6f6e5f34335f,0x68735f74736e6f63,0x5d383430325b7946,0x68732e0a0d0a0d3b,
0x6c612e2064657261,0x2e203631206e6769,0x6475635f5f203862,0x5f6c61636f6c5f61,
0x303233315f726176,0x6f6e5f34335f3533,0x5f74736e6f635f6e,0x3430325b7a466873,
0x2e0a0d0a0d3b5d38,0x2e20646572616873,0x3631206e67696c61,0x635f5f2038622e20,
0x61636f6c5f616475,0x33315f7261765f6c,0x5f34335f36333032,0x736e6f635f6e6f6e,
0x325b675268735f74,0x0d0a0d3b5d383430,0x203220636f6c2e0a,0x6c0a0d3120363631,
0x2e74736e6f632e64,0x3631722520323375,0x6e5f7665645b202c,0x7465730a0d3b5d66,
0x3233732e74672e70,0x7225202c31702520,0x0a0d3b30202c3631,0x6172622031702540,
0x0d3b325f33424220,0x662e766f6d0a0d0a,0x3331646625203436,0x3332646625202c32,
0x662e766f6d0a0d3b,0x3331646625203436,0x3432646625202c31,0x662e766f6d0a0d3b,
0x3331646625203436,0x3532646625202c30,0x752e6172620a0d3b,0x395f33424220696e,
0x3342420a0d0a0d3b,0x766f6d0a0d3a325f,0x646625203436662e,0x646625202c323331,
0x766f6d0a0d3b3932,0x646625203436662e,0x646625202c313331,0x766f6d0a0d3b3033,
0x646625203436662e,0x646625202c303331,0x766f6d0a0d3b3133,0x357225203233752e,
0x6d0a0d3b30202c35,0x25203233752e766f,0x357225202c323572,0x42420a0d0a0d3b35,
0x6f6d0a0d3a335f33,0x7225203233752e76,0x35357225202c3335,0x752e766f6d0a0d3b,
0x202c337225203233,0x6c0a0d3b33357225,0x2e6d617261702e64,0x356c722520343675,
0x33315a5f5b202c33,0x61766153746f6942,0x64375068735f7472,0x375032656c62756f,
0x5331656c62756f64,0x5f30535f30535f30,0x32535f30535f3053,0x5f6d617261705f5f,
0x7476630a0d3b5d32,0x6f6c672e6f742e61,0x203436752e6c6162,0x25202c32316c7225,
0x6c0a0d3b33356c72,0x2e6d617261702e64,0x356c722520343675,0x33315a5f5b202c34,
0x61766153746f6942,0x64375068735f7472,0x375032656c62756f,0x5331656c62756f64,
0x5f30535f30535f30,0x32535f30535f3053,0x5f6d617261705f5f,0x7476630a0d3b5d33,
0x6f6c672e6f742e61,0x203436752e6c6162,0x25202c33316c7225,0x6c0a0d3b34356c72,
0x2e6d617261702e64,0x356c722520343675,0x33315a5f5b202c35,0x61766153746f6942,
0x64375068735f7472,0x375032656c62756f,0x5331656c62756f64,0x5f30535f30535f30,
0x32535f30535f3053,0x5f6d617261705f5f,0x7476630a0d3b5d34,0x6f6c672e6f742e61,
0x203436752e6c6162,0x25202c34316c7225,0x6c0a0d3b35356c72,0x2e6d617261702e64,
0x356c722520343675,0x33315a5f5b202c36,0x61766153746f6942,0x64375068735f7472,
0x375032656c62756f,0x5331656c62756f64,0x5f30535f30535f30,0x32535f30535f3053,
0x5f6d617261705f5f,0x7476630a0d3b5d35,0x6f6c672e6f742e61,0x203436752e6c6162,
0x25202c35316c7225,0x2e0a0d3b36356c72,0x3531203220636f6c,0x766f6d0a0d312036,
0x347225203233752e,0x2e6469746e25202c,0x2e766f6d0a0d3b78,0x2c35722520323375,
0x3b782e6469742520,0x3220636f6c2e0a0d,0x0a0d312038363120,0x732e6f6c2e64616d,
0x2c39317225203233,0x25202c3235722520,0x3b357225202c3472,0x3220636f6c2e0a0d,
0x0a0d312031373120,0x656469772e6c756d,0x6c7225203233732e,0x39317225202c3631,
0x610a0d3b3631202c,0x25203436732e6464,0x7225202c37316c72,0x6c7225202c32316c,
0x6c756d0a0d3b3631,0x33752e656469772e,0x2c38316c72252032,0x3631202c35722520,
0x752e766f6d0a0d3b,0x39316c7225203436,0x616475635f5f202c,0x765f6c61636f6c5f,
0x33303233315f7261,0x6e6f6e5f34335f33,0x735f74736e6f635f,0x64610a0d3b784668,
0x7225203436732e64,0x6c7225202c30326c,0x316c7225202c3931,0x636f6c2e0a0d3b38,
0x3120313731203220,0x6f6c672e646c0a0d,0x662e32762e6c6162,0x396466257b203436,
0x3939646625202c38,0x316c72255b202c7d,0x2e74730a0d3b5d37,0x762e646572616873,
0x255b203436662e32,0x7b202c5d30326c72,0x25202c3839646625,0x0a0d3b7d39396466,
0x31203220636f6c2e,0x64610a0d31203237,0x7225203436732e64,0x6c7225202c31326c,
0x316c7225202c3331,0x2e766f6d0a0d3b36,0x326c722520343675,0x6475635f5f202c32,
0x5f6c61636f6c5f61,0x303233315f726176,0x6f6e5f34335f3433,0x5f74736e6f635f6e,
0x610a0d3b79466873,0x25203436732e6464,0x7225202c33326c72,0x6c7225202c32326c,
0x6f6c2e0a0d3b3831,0x2032373120322063,0x6c672e646c0a0d31,0x2e32762e6c61626f,
0x6466257b20343666,0x646625202c363031,0x255b202c7d373031,0x0a0d3b5d31326c72,
0x65726168732e7473,0x3436662e32762e64,0x5d33326c72255b20,0x30316466257b202c,
0x3031646625202c36,0x6f6c2e0a0d3b7d37,0x2033373120322063,0x732e6464610a0d31,
0x34326c7225203436,0x2c34316c7225202c,0x0d3b36316c722520,0x3436752e766f6d0a,
0x202c35326c722520,0x6c5f616475635f5f,0x7261765f6c61636f,0x5f3533303233315f,
0x635f6e6f6e5f3433,0x4668735f74736e6f,0x2e6464610a0d3b7a,0x326c722520343673,
0x35326c7225202c36,0x3b38316c7225202c,0x3220636f6c2e0a0d,0x0a0d312033373120,
0x61626f6c672e646c,0x3436662e32762e6c,0x3431316466257b20,0x353131646625202c,
0x326c72255b202c7d,0x2e74730a0d3b5d34,0x762e646572616873,0x255b203436662e32,
0x7b202c5d36326c72,0x202c343131646625,0x3b7d353131646625,0x3220636f6c2e0a0d,
0x0a0d312034373120,0x203436732e646461,0x25202c37326c7225,0x7225202c35316c72,
0x6f6d0a0d3b36316c,0x7225203436752e76,0x635f5f202c38326c,0x61636f6c5f616475,
0x33315f7261765f6c,0x5f34335f36333032,0x736e6f635f6e6f6e,0x0d3b675268735f74,
0x3436732e6464610a,0x202c39326c722520,0x25202c38326c7225,0x2e0a0d3b38316c72,
0x3731203220636f6c,0x2e646c0a0d312034,0x762e6c61626f6c67,0x257b203436662e32,
0x25202c3232316466,0x202c7d3332316466,0x3b5d37326c72255b,0x6168732e74730a0d,
0x662e32762e646572,0x326c72255b203436,0x6466257b202c5d39,0x646625202c323231,
0x2e0a0d3b7d333231,0x3731203220636f6c,0x7261620a0d312038,0x3b3020636e79732e,
0x3220636f6c2e0a0d,0x0a0d312036353120,0x203233752e766f6d,0x6325202c38327225,
0x0d3b782e64696174,0x2e6f6c2e64616d0a,0x3932722520323373,0x25202c347225202c,
0x357225202c383272,0x20636f6c2e0a0d3b,0x0d31203038312032,0x736e6f632e646c0a,
0x7225203233752e74,0x7665645b202c3033,0x730a0d3b5d706e5f,0x732e65672e707465,
0x202c327025203233,0x7225202c39327225,0x7465730a0d3b3033,0x3233732e746c2e70,
0x7225202c33702520,0x6f0a0d3b31202c34,0x2520646572702e72,0x2c327025202c3470,
0x2e0a0d3b33702520,0x3831203220636f6c,0x7025400a0d312030,0x4242206172622034,
0x0a0d0a0d3b385f33,0x31203220636f6c2e,0x646c0a0d31203438,0x752e74736e6f632e,
0x202c367225203233,0x5d666e5f7665645b,0x20636f6c2e0a0d3b,0x0d31203032312032,
0x736e6f632e646c0a,0x6625203436662e74,0x726f635b202c3464,0x6f6d0a0d3b5d6465,
0x7225203233752e76,0x0a0d3b30202c3635,0x203436752e766f6d,0x30202c39356c7225,
0x752e766f6d0a0d3b,0x2c34357225203233,0x0d0a0d3b33722520,0x0d3a355f3342420a,
0x3233752e766f6d0a,0x7225202c37722520,0x6f6c2e0a0d3b3435,0x2034383120322063,
0x2e707465730a0d31,0x25203233732e746c,0x2c377225202c3570,0x400a0d3b36722520,
0x2061726220357025,0x0a0d3b365f334242,0x20696e752e617262,0x0a0d3b375f334242,
0x3a365f3342420a0d,0x36732e6464610a0d,0x2c32336c72252034,0x202c39316c722520,
0x0a0d3b39356c7225,0x203436732e646461,0x25202c34336c7225,0x7225202c32326c72,
0x64610a0d3b39356c,0x7225203436732e64,0x6c7225202c36336c,0x356c7225202c3532,
0x2e6464610a0d3b39,0x336c722520343673,0x38326c7225202c38,0x3b39356c7225202c,
0x7261702e646c0a0d,0x25203436752e6d61,0x5f5b202c31356c72,0x53746f694233315a,
0x68735f7472617661,0x656c62756f643750,0x6c62756f64375032,0x5f30535f30533165,
0x30535f30535f3053,0x7261705f5f32535f,0x0a0d3b5d305f6d61,0x2e6f742e61747663,
0x752e6c61626f6c67,0x39336c7225203436,0x3b31356c7225202c,0x3220636f6c2e0a0d,
0x0a0d312035383120,0x656469772e6c756d,0x6c7225203233732e,0x39327225202c3034,
0x610a0d3b3631202c,0x25203436732e6464,0x7225202c31346c72,0x6c7225202c39336c,
0x2e646c0a0d3b3034,0x36752e6d61726170,0x2c32356c72252034,0x694233315a5f5b20,
0x747261766153746f,0x756f64375068735f,0x6f64375032656c62,0x5f305331656c6275,
0x30535f30535f3053,0x5f5f32535f30535f,0x5d315f6d61726170,0x2e617476630a0d3b,
0x61626f6c672e6f74,0x7225203436752e6c,0x6c7225202c32346c,0x6f6c2e0a0d3b3235,
0x2035383120322063,0x772e6c756d0a0d31,0x203233732e656469,0x25202c33346c7225,
0x0d3b38202c393272,0x3436732e6464610a,0x202c34346c722520,0x25202c32346c7225,
0x6c0a0d3b33346c72,0x6465726168732e64,0x203436662e32762e,0x202c30396466257b,
0x202c7d3139646625,0x3b5d32336c72255b,0x3220636f6c2e0a0d,0x0a0d312032303120,
0x203436662e627573,0x25202c3234646625,0x6625202c30396466,0x6c2e0a0d3b313964,
0x353831203220636f,0x732e646c0a0d3120,0x32762e6465726168,0x66257b203436662e,
0x646625202c323964,0x72255b202c7d3339,0x2e0a0d3b5d34336c,0x3031203220636f6c,
0x6275730a0d312033,0x646625203436662e,0x39646625202c3534,0x3339646625202c32,
0x20636f6c2e0a0d3b,0x0d31203538312032,0x726168732e646c0a,0x36662e32762e6465,
0x34396466257b2034,0x7d3539646625202c,0x36336c72255b202c,0x636f6c2e0a0d3b5d,
0x3120343031203220,0x36662e6275730a0d,0x2c38346466252034,0x202c343964662520,
0x0a0d3b3539646625,0x31203220636f6c2e,0x646c0a0d31203538,0x2e6c61626f6c672e,
0x7b203436662e3276,0x25202c3639646625,0x5b202c7d37396466,0x0d3b5d31346c7225,
0x203220636f6c2e0a,0x730a0d3120363031,0x25203436662e6275,0x6625202c30356466,
0x646625202c363964,0x6f6c2e0a0d3b3039,0x2037303120322063,0x662e6275730a0d31,
0x3135646625203436,0x2c3639646625202c,0x0d3b313964662520,0x203220636f6c2e0a,
0x730a0d3120383031,0x25203436662e6275,0x6625202c33356466,0x646625202c373964,
0x6f6c2e0a0d3b3239,0x2039303120322063,0x662e6275730a0d31,0x3435646625203436,
0x2c3739646625202c,0x0d3b333964662520,0x203220636f6c2e0a,0x6c0a0d3120353831,
0x6c61626f6c672e64,0x646625203436662e,0x6c72255b202c3535,0x6c2e0a0d3b5d3434,
0x303131203220636f,0x2e6275730a0d3120,0x3564662520343666,0x3535646625202c36,
0x3b3439646625202c,0x3220636f6c2e0a0d,0x0a0d312031313120,0x203436662e627573,
0x25202c3735646625,0x6625202c35356466,0x6c2e0a0d3b353964,0x333131203220636f,
0x2e6c756d0a0d3120,0x3564662520343666,0x3335646625202c38,0x3b3335646625202c,
0x6e722e616d660a0d,0x646625203436662e,0x35646625202c3935,0x3035646625202c30,
0x3b3835646625202c,0x6e722e616d660a0d,0x646625203436662e,0x35646625202c3036,
0x3635646625202c36,0x3b3935646625202c,0x3320636f6c2e0a0d,0x0d35203531303120,
0x6e722e747271730a,0x646625203436662e,0x36646625202c3136,0x636f6c2e0a0d3b30,
0x3120343131203220,0x36662e6c756d0a0d,0x2c32366466252034,0x202c343564662520,
0x0a0d3b3435646625,0x662e6e722e616d66,0x3336646625203436,0x2c3135646625202c,
0x202c313564662520,0x0a0d3b3236646625,0x662e6e722e616d66,0x3436646625203436,
0x2c3735646625202c,0x202c373564662520,0x0a0d3b3336646625,0x31203320636f6c2e,
0x730a0d3520353130,0x662e6e722e747271,0x3536646625203436,0x3b3436646625202c,
0x3220636f6c2e0a0d,0x0a0d312036313120,0x203436662e6c756d,0x25202c3636646625,
0x6625202c33356466,0x6d660a0d3b343564,0x3436662e6e722e61,0x202c373664662520,
0x25202c3035646625,0x6625202c31356466,0x6d660a0d3b363664,0x3436662e6e722e61,
0x202c383664662520,0x25202c3635646625,0x6625202c37356466,0x6c2e0a0d3b373664,
0x373131203220636f,0x2e6c756d0a0d3120,0x3664662520343666,0x3136646625202c39,
0x3b3536646625202c,0x3220636f6c2e0a0d,0x0a0d312039313120,0x203436662e6c756d,
0x25202c3037646625,0x6625202c35346466,0x6d660a0d3b353464,0x3436662e6e722e61,
0x202c313764662520,0x25202c3234646625,0x6625202c32346466,0x6d660a0d3b303764,
0x3436662e6e722e61,0x202c323764662520,0x25202c3834646625,0x6625202c38346466,
0x6c2e0a0d3b313764,0x303231203220636f,0x2e616d660a0d3120,0x25203436662e6e72,
0x6625202c33376466,0x646625202c313664,0x36646625202c3536,0x2e6c756d0a0d3b38,
0x3764662520343666,0x2c34646625202c34,0x0d3b323764662520,0x2e6e722e616d660a,
0x3764662520343666,0x3936646625202c35,0x2c3337646625202c,0x0d3b343764662520,
0x203220636f6c2e0a,0x610a0d3120313231,0x25203436662e6464,0x6625202c36376466,
0x646625202c313664,0x6f6c2e0a0d3b3536,0x2035383120322063,0x68732e646c0a0d31,
0x3436662e64657261,0x202c373764662520,0x3b5d38336c72255b,0x3220636f6c2e0a0d,
0x0a0d312031323120,0x203436662e6c756d,0x25202c3837646625,0x6625202c37376466,
0x756d0a0d3b363764,0x6625203436662e6c,0x646625202c393764,0x46336430202c3837,
0x4436303346353442,0x0d3b333838433943,0x203420636f6c2e0a,0x0a0d332038323331,
0x662e6e722e766964,0x3038646625203436,0x2c3937646625202c,0x0d3b353764662520,
0x203220636f6c2e0a,0x6d0a0d3120343231,0x25203436662e6c75,0x6625202c31386466,
0x646625202c333564,0x67656e0a0d3b3735,0x646625203436662e,0x35646625202c3238,
0x2e616d660a0d3b36,0x25203436662e6e72,0x6625202c33386466,0x646625202c323864,
0x38646625202c3435,0x2e616d660a0d3b31,0x25203436662e6e72,0x25202c3233316466,
0x6625202c30386466,0x646625202c333864,0x6c2e0a0d3b323331,0x353231203220636f,
0x2e6c756d0a0d3120,0x3864662520343666,0x3635646625202c34,0x3b3135646625202c,
0x36662e67656e0a0d,0x2c35386466252034,0x0d3b303564662520,0x2e6e722e616d660a,
0x3864662520343666,0x3538646625202c36,0x2c3735646625202c,0x0d3b343864662520,
0x2e6e722e616d660a,0x3164662520343666,0x38646625202c3133,0x3638646625202c30,
0x313331646625202c,0x20636f6c2e0a0d3b,0x0d31203632312032,0x3436662e6c756d0a,
0x202c373864662520,0x25202c3035646625,0x6e0a0d3b34356466,0x25203436662e6765,
0x6625202c38386466,0x6d660a0d3b333564,0x3436662e6e722e61,0x202c393864662520,
0x25202c3838646625,0x6625202c31356466,0x6d660a0d3b373864,0x3436662e6e722e61,
0x2c30333164662520,0x202c303864662520,0x25202c3938646625,0x0a0d3b3033316466,
0x3a375f3342420a0d,0x33732e6464610a0d,0x25202c3972252032,0x0a0d3b31202c3772,
0x203436732e646461,0x25202c39356c7225,0x3631202c39356c72,0x20636f6c2e0a0d3b,
0x3331203138312032,0x732e6464610a0d37,0x2c36357225203233,0x31202c3635722520,
0x20636f6c2e0a0d3b,0x0d31203138312032,0x746c2e707465730a,0x367025203233732e,
0x202c36357225202c,0x6f6d0a0d3b347225,0x7225203233752e76,0x3b397225202c3435,
0x6220367025400a0d,0x355f334242206172,0x3342420a0d0a0d3b,0x6f6c2e0a0d3a385f,
0x2038383120322063,0x732e7261620a0d31,0x0a0d3b3020636e79,0x31203220636f6c2e,
0x0a0d393531203636,0x203233732e646461,0x7225202c31317225,0x0d3b347225202c33,
0x3233732e6464610a,0x25202c3235722520,0x0d3b31202c323572,0x203220636f6c2e0a,
0x6c0a0d3120363631,0x2e74736e6f632e64,0x3434722520323375,0x6e5f7665645b202c,
0x7465730a0d3b5d66,0x3233732e746c2e70,0x7225202c37702520,0x34347225202c3131,
0x752e766f6d0a0d3b,0x2c35357225203233,0x0a0d3b3131722520,0x31203220636f6c2e,
0x25400a0d31203636,0x4220617262203770,0x0d0a0d3b335f3342,0x0d3a395f3342420a,
0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c37356c,0x6153746f69423331,
0x5068735f74726176,0x32656c62756f6437,0x656c62756f643750,0x535f30535f305331,
0x5f30535f30535f30,0x617261705f5f3253,0x630a0d3b5d365f6d,0x672e6f742e617476,
0x36752e6c61626f6c,0x2c35346c72252034,0x0d3b37356c722520,0x617261702e646c0a,
0x7225203436752e6d,0x5a5f5b202c38356c,0x6153746f69423331,0x5068735f74726176,
0x32656c62756f6437,0x656c62756f643750,0x535f30535f305331,0x5f30535f30535f30,
0x617261705f5f3253,0x630a0d3b5d375f6d,0x672e6f742e617476,0x36752e6c61626f6c,
0x2c36346c72252034,0x0d3b38356c722520,0x203220636f6c2e0a,0x6d0a0d3120363531,
0x25203233752e766f,0x746325202c353472,0x0a0d3b782e646961,0x203233752e766f6d,
0x6e25202c36347225,0x0a0d3b782e646974,0x203233752e766f6d,0x7425202c37347225,
0x6d0a0d3b782e6469,0x33732e6f6c2e6461,0x202c383472252032,0x7225202c36347225,
0x37347225202c3534,0x20636f6c2e0a0d3b,0x0d31203039312032,0x6469772e6c756d0a,
0x7225203233732e65,0x347225202c37346c,0x0a0d3b3631202c38,0x203436732e646461,
0x25202c38346c7225,0x7225202c35346c72,0x74730a0d3b37346c,0x2e6c61626f6c672e,
0x6c72255b20343666,0x646625202c5d3834,0x6c2e0a0d3b323331,0x313931203220636f,
0x672e74730a0d3120,0x36662e6c61626f6c,0x38346c72255b2034,0x646625202c5d382b,
0x6c2e0a0d3b313331,0x323931203220636f,0x2e6c756d0a0d3120,0x3233732e65646977,
0x202c39346c722520,0x3b38202c38347225,0x36732e6464610a0d,0x2c30356c72252034,
0x202c36346c722520,0x0a0d3b39346c7225,0x61626f6c672e7473,0x255b203436662e6c,
0x25202c5d30356c72,0x0a0d3b3033316466,0x31203220636f6c2e,0x65720a0d32203339,
0x0d0a0d7d0a0d3b74,0x207972746e652e0a,0x636c616334315a5f,0x6e4f6874676e654c,
0x62756f643750796c,0x30535f305332656c,0x6c62756f6437505f,0x61702e0a0d283165,
0x3436752e206d6172,0x6c616334315a5f20,0x4f6874676e654c63,0x756f643750796c6e,
0x535f305332656c62,0x62756f6437505f30,0x617261705f31656c,0x702e0a0d2c305f6d,
0x36752e206d617261,0x616334315a5f2034,0x6874676e654c636c,0x6f643750796c6e4f,
0x5f305332656c6275,0x756f6437505f3053,0x7261705f31656c62,0x2e0a0d2c315f6d61,
0x752e206d61726170,0x6334315a5f203436,0x74676e654c636c61,0x643750796c6e4f68,
0x305332656c62756f,0x6f6437505f30535f,0x61705f31656c6275,0x0a0d2c325f6d6172,
0x2e206d617261702e,0x34315a5f20343675,0x676e654c636c6163,0x3750796c6e4f6874,
0x5332656c62756f64,0x6437505f30535f30,0x705f31656c62756f,0x0a0d335f6d617261,
0x722e0a0d7b0a0d29,0x203436662e206765,0x3b3e34313c646625,0x2e206765722e0a0d,
0x3c70252064657270,0x65722e0a0d3b3e32,0x25203233732e2067,0x0a0d3b3e33313c72,
0x36732e206765722e,0x35313c6c72252034,0x0a0d0a0d0a0d3b3e,0x6d617261702e646c,
0x6c7225203436752e,0x34315a5f5b202c35,0x676e654c636c6163,0x3750796c6e4f6874,
0x5332656c62756f64,0x6437505f30535f30,0x705f31656c62756f,0x3b5d305f6d617261,
0x7261702e646c0a0d,0x25203436752e6d61,0x5a5f5b202c366c72,0x654c636c61633431,
0x796c6e4f6874676e,0x656c62756f643750,0x505f30535f305332,0x31656c62756f6437,
0x315f6d617261705f,0x702e646c0a0d3b5d,0x3436752e6d617261,0x5b202c376c722520,
0x636c616334315a5f,0x6e4f6874676e654c,0x62756f643750796c,0x30535f305332656c,
0x6c62756f6437505f,0x6d617261705f3165,0x646c0a0d3b5d325f,0x752e6d617261702e,
0x2c386c7225203436,0x616334315a5f5b20,0x6874676e654c636c,0x6f643750796c6e4f,
0x5f305332656c6275,0x756f6437505f3053,0x7261705f31656c62,0x0a0d3b5d335f6d61,
0x2e6f742e61747663,0x752e6c61626f6c67,0x2c316c7225203436,0x0a0d3b386c722520,
0x2e6f742e61747663,0x752e6c61626f6c67,0x2c326c7225203436,0x0a0d3b376c722520,
0x2e6f742e61747663,0x752e6c61626f6c67,0x2c336c7225203436,0x0a0d3b366c722520,
0x2e6f742e61747663,0x752e6c61626f6c67,0x2c346c7225203436,0x0a0d3b356c722520,
0x32203220636f6c2e,0x6f6d0a0d31203030,0x7225203233752e76,0x6469746e25202c32,
0x766f6d0a0d3b782e,0x337225203233752e,0x646961746325202c,0x766f6d0a0d3b782e,
0x347225203233752e,0x782e64697425202c,0x6c2e64616d0a0d3b,0x7225203233732e6f,
0x202c327225202c31,0x347225202c337225,0x20636f6c2e0a0d3b,0x0d31203230322032,
0x736e6f632e646c0a,0x7225203233752e74,0x5f7665645b202c35,0x65730a0d3b5d706e,
0x33732e746c2e7074,0x25202c3170252032,0x3b357225202c3172,0x6220317025400a0d,
0x325f344242206172,0x6f6c2e0a0d0a0d3b,0x2036303220322063,0x0d3b7465720a0d32,
0x325f3442420a0d0a,0x20636f6c2e0a0d3a,0x0d31203330322032,0x6469772e6c756d0a,
0x7225203233732e65,0x2c317225202c396c,0x64610a0d3b363120,0x7225203436732e64,
0x6c7225202c30316c,0x3b396c7225202c34,0x6f6c672e646c0a0d,0x203436662e6c6162,
0x255b202c31646625,0x3b5d382b30316c72,0x6f6c672e646c0a0d,0x203436662e6c6162,
0x255b202c32646625,0x0a0d3b5d30316c72,0x203436662e627573,0x6625202c33646625,
0x31646625202c3264,0x732e6464610a0d3b,0x31316c7225203436,0x202c336c7225202c,
0x6c0a0d3b396c7225,0x6c61626f6c672e64,0x646625203436662e,0x316c72255b202c34,
0x6c0a0d3b5d382b31,0x6c61626f6c672e64,0x646625203436662e,0x316c72255b202c35,
0x6275730a0d3b5d31,0x646625203436662e,0x2c35646625202c36,0x0a0d3b3464662520,
0x203436662e6c756d,0x6625202c37646625,0x36646625202c3664,0x722e616d660a0d3b,
0x6625203436662e6e,0x33646625202c3864,0x202c33646625202c,0x610a0d3b37646625,
0x25203436732e6464,0x7225202c32316c72,0x396c7225202c326c,0x6c672e646c0a0d3b,
0x3436662e6c61626f,0x5b202c3964662520,0x5d382b32316c7225,0x6c672e646c0a0d3b,
0x3436662e6c61626f,0x202c303164662520,0x3b5d32316c72255b,0x36662e6275730a0d,
0x2c31316466252034,0x202c303164662520,0x660a0d3b39646625,0x36662e6e722e616d,
0x2c32316466252034,0x202c313164662520,0x25202c3131646625,0x6c2e0a0d3b386466,
0x313031203320636f,0x7271730a0d352035,0x3436662e6e722e74,0x202c333164662520,
0x0a0d3b3231646625,0x32203220636f6c2e,0x756d0a0d31203330,0x732e656469772e6c,
0x33316c7225203233,0x38202c317225202c,0x732e6464610a0d3b,0x34316c7225203436,
0x202c316c7225202c,0x0a0d3b33316c7225,0x61626f6c672e7473,0x255b203436662e6c,
0x25202c5d34316c72,0x2e0a0d3b33316466,0x3032203220636f6c,0x7465720a0d322036,
0x0a0d0a0d7d0a0d3b,0x0000000000000a0d
};
#pragma data_seg()


}
#line 1078 "c:\\users\\admin\\appdata\\local\\temp\\tmpxft_00000600_00000000-5_BiotSavartMex.fatbin.c"


extern "C" {
#line 1082 "c:\\users\\admin\\appdata\\local\\temp\\tmpxft_00000600_00000000-5_BiotSavartMex.fatbin.c"
#pragma data_seg(".nvFatBinSegment")
__declspec(allocate(".nvFatBinSegment")) __declspec(align(8)) static const struct {int m; int v; const unsigned long long* d; char* f;} __fatDeviceText= 
	{ 0x466243b1, 1, fatbinData, 0 };
#pragma data_seg()

}
#line 1089 "c:\\users\\admin\\appdata\\local\\temp\\tmpxft_00000600_00000000-5_BiotSavartMex.fatbin.c"

#line 3 "c:\\users\\admin\\appdata\\local\\temp\\tmpxft_00000600_00000000-3_BiotSavartMex.cudafe1.stub.c"
extern void __device_stub__Z16BiotSavart_naiveP7double2P7double1S0_S0_S0_S0_S0_S2_(struct double2 *, struct double1 *, struct double2 *, struct double2 *, struct double2 *, struct double2 *, struct double2 *, struct double1 *);
extern void __device_stub__Z13BiotSavart_shP7double2P7double1S0_S0_S0_S0_S0_S2_(struct double2 *, struct double1 *, struct double2 *, struct double2 *, struct double2 *, struct double2 *, struct double2 *, struct double1 *);
extern void __device_stub__Z14calcLengthOnlyP7double2S0_S0_P7double1(struct double2 *, struct double2 *, struct double2 *, struct double1 *);
static void __sti____cudaRegisterAll_48_tmpxft_00000600_00000000_6_BiotSavartMex_cpp1_ii_95566f56(void);
#pragma section(".CRT$XCU",read)
__declspec(allocate(".CRT$XCU"))static void (*__dummy_static_init__sti____cudaRegisterAll_48_tmpxft_00000600_00000000_6_BiotSavartMex_cpp1_ii_95566f56[])(void) = {__sti____cudaRegisterAll_48_tmpxft_00000600_00000000_6_BiotSavartMex_cpp1_ii_95566f56};
void __device_stub__Z16BiotSavart_naiveP7double2P7double1S0_S0_S0_S0_S0_S2_(struct double2 *__par0, struct double1 *__par1, struct double2 *__par2, struct double2 *__par3, struct double2 *__par4, struct double2 *__par5, struct double2 *__par6, struct double1 *__par7){if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0Ui64) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8Ui64) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16Ui64) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24Ui64) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32Ui64) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)40Ui64) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par6, sizeof(__par6), (size_t)48Ui64) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par7, sizeof(__par7), (size_t)56Ui64) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(struct double2 *, struct double1 *, struct double2 *, struct double2 *, struct double2 *, struct double2 *, struct double2 *, struct double1 *))BiotSavart_naive)); (void)cudaLaunch(((char *)((void ( *)(struct double2 *, struct double1 *, struct double2 *, struct double2 *, struct double2 *, struct double2 *, struct double2 *, struct double1 *))BiotSavart_naive))); };}
#line 131 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
void BiotSavart_naive( struct double2 *__cuda_0,struct double1 *__cuda_1,struct double2 *__cuda_2,struct double2 *__cuda_3,struct double2 *__cuda_4,struct double2 *__cuda_5,struct double2 *__cuda_6,struct double1 *__cuda_7)
#line 132 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
{__device_stub__Z16BiotSavart_naiveP7double2P7double1S0_S0_S0_S0_S0_S2_( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5,__cuda_6,__cuda_7);
#line 145 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}
#line 1 "c:\\users\\admin\\appdata\\local\\temp\\tmpxft_00000600_00000000-3_BiotSavartMex.cudafe1.stub.c"
void __device_stub__Z13BiotSavart_shP7double2P7double1S0_S0_S0_S0_S0_S2_( struct double2 *__par0,  struct double1 *__par1,  struct double2 *__par2,  struct double2 *__par3,  struct double2 *__par4,  struct double2 *__par5,  struct double2 *__par6,  struct double1 *__par7) {  if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)40Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par6, sizeof(__par6), (size_t)48Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par7, sizeof(__par7), (size_t)56Ui64) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(struct double2 *, struct double1 *, struct double2 *, struct double2 *, struct double2 *, struct double2 *, struct double2 *, struct double1 *))BiotSavart_sh)); (void)cudaLaunch(((char *)((void ( *)(struct double2 *, struct double1 *, struct double2 *, struct double2 *, struct double2 *, struct double2 *, struct double2 *, struct double1 *))BiotSavart_sh))); }; }
#line 147 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
void BiotSavart_sh( struct double2 *__cuda_0,struct double1 *__cuda_1,struct double2 *__cuda_2,struct double2 *__cuda_3,struct double2 *__cuda_4,struct double2 *__cuda_5,struct double2 *__cuda_6,struct double1 *__cuda_7)
#line 148 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
{__device_stub__Z13BiotSavart_shP7double2P7double1S0_S0_S0_S0_S0_S2_( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5,__cuda_6,__cuda_7);
#line 193 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}
#line 1 "c:\\users\\admin\\appdata\\local\\temp\\tmpxft_00000600_00000000-3_BiotSavartMex.cudafe1.stub.c"
void __device_stub__Z14calcLengthOnlyP7double2S0_S0_P7double1( struct double2 *__par0,  struct double2 *__par1,  struct double2 *__par2,  struct double1 *__par3) {  if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24Ui64) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(struct double2 *, struct double2 *, struct double2 *, struct double1 *))calcLengthOnly)); (void)cudaLaunch(((char *)((void ( *)(struct double2 *, struct double2 *, struct double2 *, struct double1 *))calcLengthOnly))); }; }
#line 197 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
void calcLengthOnly( struct double2 *__cuda_0,struct double2 *__cuda_1,struct double2 *__cuda_2,struct double1 *__cuda_3)
#line 198 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
{__device_stub__Z14calcLengthOnlyP7double2S0_S0_P7double1( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
#line 206 "C:/Users/admin/Documents/MATLAB/Nate/WInDS-2-2012/cuda/source/BiotSavartMex.cu"
}
#line 1 "c:\\users\\admin\\appdata\\local\\temp\\tmpxft_00000600_00000000-3_BiotSavartMex.cudafe1.stub.c"
static void __sti____cudaRegisterAll_48_tmpxft_00000600_00000000_6_BiotSavartMex_cpp1_ii_95566f56(void) {  __cudaFatCubinHandle = __cudaRegisterFatBinary((void*)&__fatDeviceText); atexit(__cudaUnregisterBinaryUtil); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(struct double2 *, struct double2 *, struct double2 *, struct double1 *))calcLengthOnly), (char*)"_Z14calcLengthOnlyP7double2S0_S0_P7double1", "_Z14calcLengthOnlyP7double2S0_S0_P7double1", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(struct double2 *, struct double1 *, struct double2 *, struct double2 *, struct double2 *, struct double2 *, struct double2 *, struct double1 *))BiotSavart_sh), (char*)"_Z13BiotSavart_shP7double2P7double1S0_S0_S0_S0_S0_S2_", "_Z13BiotSavart_shP7double2P7double1S0_S0_S0_S0_S0_S2_", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(struct double2 *, struct double1 *, struct double2 *, struct double2 *, struct double2 *, struct double2 *, struct double2 *, struct double1 *))BiotSavart_naive), (char*)"_Z16BiotSavart_naiveP7double2P7double1S0_S0_S0_S0_S0_S2_", "_Z16BiotSavart_naiveP7double2P7double1S0_S0_S0_S0_S0_S2_", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterVar(__cudaFatCubinHandle, (char*)&dev_np, (char*)"dev_np", "dev_np", 0, 4, 1, 0); __cudaRegisterVar(__cudaFatCubinHandle, (char*)&dev_nf, (char*)"dev_nf", "dev_nf", 0, 4, 1, 0); __cudaRegisterVar(__cudaFatCubinHandle, (char*)&cutoff, (char*)"cutoff", "cutoff", 0, 8, 1, 0); __cudaRegisterVar(__cudaFatCubinHandle, (char*)&cored, (char*)"cored", "cored", 0, 8, 1, 0); __cudaRegisterVar(__cudaFatCubinHandle, (char*)&threadsperblock, (char*)"threadsperblock", "threadsperblock", 0, 4, 1, 0);  }
#line 2 "tmpxft_00000600_00000000-3_BiotSavartMex.cudafe1.stub.c"
#line 1 "tmpxft_00000600_00000000-3_BiotSavartMex.cudafe1.stub.c"


